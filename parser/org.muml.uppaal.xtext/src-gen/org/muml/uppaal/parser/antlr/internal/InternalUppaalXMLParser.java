package org.muml.uppaal.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.muml.uppaal.services.UppaalXMLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalUppaalXMLParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_INT", "RULE_WS", "RULE_ANY_OTHER", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT", "'<?xml version=\"1.0\" encoding=\"utf-8\"?>'", "'<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>'", "'<!DOCTYPE nta PUBLIC \\'-//Uppaal Team//DTD Flat System 1.1//EN\\' \\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\\'>'", "'<'", "'nta'", "'>'", "'imports'", "'</'", "'declaration'", "'template'", "'instantiation'", "'system'", "'name'", "'x'", "'='", "'y'", "'parameter'", "','", "'init'", "'ref'", "'/>'", "'location'", "'id'", "'color'", "'label'", "'kind'", "'\"comments\"'", "'\"invariant\"'", "'transition'", "'source'", "'target'", "'\"synchronisation\"'", "'\"guard\"'", "'\"assignment\"'", "'\"select\"'", "'nail'", "':'", "'progress'", "'{'", "';'", "'}'", "'('", "')'", "'&lt;'", "'['", "']'", "'chan'", "'urgent'", "'broadcast'", "'int'", "'struct'", "'scalar'", "'typedef'", "'priority'", "'default'", "'for'", "'while'", "'do'", "'if'", "'else'", "'return'", "'not'", "'?'", "'!'", "'.'", "'true'", "'false'", "'-'", "'bool'", "'void'", "'clock'", "'commit'", "'const'", "'process'", "'state'", "'guard'", "'sync'", "'assign'", "'trans'", "'deadlock'", "'and'", "'or'", "'imply'", "'forall'", "'exists'", "'rate'", "'before_update'", "'after_update'", "'meta'", "'select'", "'switch'", "'case'", "'continue'", "'break'", "'&gt'", "'*'", "'%'", "'/'", "'+'", "'&lt;&lt;'", "'&gt;&gt'", "'&lt;?'", "'&gt;?'", "'&lt;='", "'&gt;='", "'=='", "'!='", "'&'", "'&amp;'", "'^'", "'|'", "'&&'", "'&amp;&amp;'", "'||'", "'+='", "'-='", "'*='", "'/='", "'%='", "'|='", "'&='", "'^='", "'&lt;&lt;='", "'&gt;&gt;='", "'committed'", "'<urgent/>'", "'<committed/>'", "':='", "'&gt;'"
    };
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=5;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__11=11;
    public static final int T__99=99;
    public static final int T__12=12;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int RULE_SINGLE_LINE_COMMENT=9;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int RULE_MULTI_LINE_COMMENT=10;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=4;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=7;
    public static final int RULE_ANY_OTHER=8;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalUppaalXMLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalUppaalXMLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalUppaalXMLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalUppaalXML.g"; }



     	private UppaalXMLGrammarAccess grammarAccess;

        public InternalUppaalXMLParser(TokenStream input, UppaalXMLGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "NTA";
       	}

       	@Override
       	protected UppaalXMLGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleNTA"
    // InternalUppaalXML.g:65:1: entryRuleNTA returns [EObject current=null] : iv_ruleNTA= ruleNTA EOF ;
    public final EObject entryRuleNTA() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNTA = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalUppaalXML.g:67:2: (iv_ruleNTA= ruleNTA EOF )
            // InternalUppaalXML.g:68:2: iv_ruleNTA= ruleNTA EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNTARule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNTA=ruleNTA();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNTA; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNTA"


    // $ANTLR start "ruleNTA"
    // InternalUppaalXML.g:77:1: ruleNTA returns [EObject current=null] : ( (otherlv_0= '<?xml version=\"1.0\" encoding=\"utf-8\"?>' | otherlv_1= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>' ) otherlv_2= '<!DOCTYPE nta PUBLIC \\'-//Uppaal Team//DTD Flat System 1.1//EN\\' \\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\\'>' otherlv_3= '<' otherlv_4= 'nta' otherlv_5= '>' (otherlv_6= '<' otherlv_7= 'imports' otherlv_8= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_10= '</' otherlv_11= 'imports' otherlv_12= '>' )* (otherlv_13= '<' otherlv_14= 'declaration' otherlv_15= '>' ( (lv_globalDeclarations_16_0= ruleGlobalDeclarations ) ) otherlv_17= '</' otherlv_18= 'declaration' otherlv_19= '>' )? (otherlv_20= '<' otherlv_21= 'template' otherlv_22= '>' ( (lv_template_23_0= ruleTemplate ) ) otherlv_24= '</' otherlv_25= 'template' otherlv_26= '>' )+ (otherlv_27= '<' otherlv_28= 'instantiation' otherlv_29= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_31= '</' otherlv_32= 'instantiation' otherlv_33= '>' )? otherlv_34= '<' otherlv_35= 'system' otherlv_36= '>' ( (lv_systemDeclarations_37_0= ruleSystemDeclarations ) ) otherlv_38= '</' otherlv_39= 'system' otherlv_40= '>' otherlv_41= '</' otherlv_42= 'nta' otherlv_43= '>' ) ;
    public final EObject ruleNTA() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        EObject lv_globalDeclarations_16_0 = null;

        EObject lv_template_23_0 = null;

        EObject lv_systemDeclarations_37_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalUppaalXML.g:84:2: ( ( (otherlv_0= '<?xml version=\"1.0\" encoding=\"utf-8\"?>' | otherlv_1= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>' ) otherlv_2= '<!DOCTYPE nta PUBLIC \\'-//Uppaal Team//DTD Flat System 1.1//EN\\' \\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\\'>' otherlv_3= '<' otherlv_4= 'nta' otherlv_5= '>' (otherlv_6= '<' otherlv_7= 'imports' otherlv_8= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_10= '</' otherlv_11= 'imports' otherlv_12= '>' )* (otherlv_13= '<' otherlv_14= 'declaration' otherlv_15= '>' ( (lv_globalDeclarations_16_0= ruleGlobalDeclarations ) ) otherlv_17= '</' otherlv_18= 'declaration' otherlv_19= '>' )? (otherlv_20= '<' otherlv_21= 'template' otherlv_22= '>' ( (lv_template_23_0= ruleTemplate ) ) otherlv_24= '</' otherlv_25= 'template' otherlv_26= '>' )+ (otherlv_27= '<' otherlv_28= 'instantiation' otherlv_29= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_31= '</' otherlv_32= 'instantiation' otherlv_33= '>' )? otherlv_34= '<' otherlv_35= 'system' otherlv_36= '>' ( (lv_systemDeclarations_37_0= ruleSystemDeclarations ) ) otherlv_38= '</' otherlv_39= 'system' otherlv_40= '>' otherlv_41= '</' otherlv_42= 'nta' otherlv_43= '>' ) )
            // InternalUppaalXML.g:85:2: ( (otherlv_0= '<?xml version=\"1.0\" encoding=\"utf-8\"?>' | otherlv_1= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>' ) otherlv_2= '<!DOCTYPE nta PUBLIC \\'-//Uppaal Team//DTD Flat System 1.1//EN\\' \\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\\'>' otherlv_3= '<' otherlv_4= 'nta' otherlv_5= '>' (otherlv_6= '<' otherlv_7= 'imports' otherlv_8= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_10= '</' otherlv_11= 'imports' otherlv_12= '>' )* (otherlv_13= '<' otherlv_14= 'declaration' otherlv_15= '>' ( (lv_globalDeclarations_16_0= ruleGlobalDeclarations ) ) otherlv_17= '</' otherlv_18= 'declaration' otherlv_19= '>' )? (otherlv_20= '<' otherlv_21= 'template' otherlv_22= '>' ( (lv_template_23_0= ruleTemplate ) ) otherlv_24= '</' otherlv_25= 'template' otherlv_26= '>' )+ (otherlv_27= '<' otherlv_28= 'instantiation' otherlv_29= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_31= '</' otherlv_32= 'instantiation' otherlv_33= '>' )? otherlv_34= '<' otherlv_35= 'system' otherlv_36= '>' ( (lv_systemDeclarations_37_0= ruleSystemDeclarations ) ) otherlv_38= '</' otherlv_39= 'system' otherlv_40= '>' otherlv_41= '</' otherlv_42= 'nta' otherlv_43= '>' )
            {
            // InternalUppaalXML.g:85:2: ( (otherlv_0= '<?xml version=\"1.0\" encoding=\"utf-8\"?>' | otherlv_1= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>' ) otherlv_2= '<!DOCTYPE nta PUBLIC \\'-//Uppaal Team//DTD Flat System 1.1//EN\\' \\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\\'>' otherlv_3= '<' otherlv_4= 'nta' otherlv_5= '>' (otherlv_6= '<' otherlv_7= 'imports' otherlv_8= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_10= '</' otherlv_11= 'imports' otherlv_12= '>' )* (otherlv_13= '<' otherlv_14= 'declaration' otherlv_15= '>' ( (lv_globalDeclarations_16_0= ruleGlobalDeclarations ) ) otherlv_17= '</' otherlv_18= 'declaration' otherlv_19= '>' )? (otherlv_20= '<' otherlv_21= 'template' otherlv_22= '>' ( (lv_template_23_0= ruleTemplate ) ) otherlv_24= '</' otherlv_25= 'template' otherlv_26= '>' )+ (otherlv_27= '<' otherlv_28= 'instantiation' otherlv_29= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_31= '</' otherlv_32= 'instantiation' otherlv_33= '>' )? otherlv_34= '<' otherlv_35= 'system' otherlv_36= '>' ( (lv_systemDeclarations_37_0= ruleSystemDeclarations ) ) otherlv_38= '</' otherlv_39= 'system' otherlv_40= '>' otherlv_41= '</' otherlv_42= 'nta' otherlv_43= '>' )
            // InternalUppaalXML.g:86:3: (otherlv_0= '<?xml version=\"1.0\" encoding=\"utf-8\"?>' | otherlv_1= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>' ) otherlv_2= '<!DOCTYPE nta PUBLIC \\'-//Uppaal Team//DTD Flat System 1.1//EN\\' \\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\\'>' otherlv_3= '<' otherlv_4= 'nta' otherlv_5= '>' (otherlv_6= '<' otherlv_7= 'imports' otherlv_8= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_10= '</' otherlv_11= 'imports' otherlv_12= '>' )* (otherlv_13= '<' otherlv_14= 'declaration' otherlv_15= '>' ( (lv_globalDeclarations_16_0= ruleGlobalDeclarations ) ) otherlv_17= '</' otherlv_18= 'declaration' otherlv_19= '>' )? (otherlv_20= '<' otherlv_21= 'template' otherlv_22= '>' ( (lv_template_23_0= ruleTemplate ) ) otherlv_24= '</' otherlv_25= 'template' otherlv_26= '>' )+ (otherlv_27= '<' otherlv_28= 'instantiation' otherlv_29= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_31= '</' otherlv_32= 'instantiation' otherlv_33= '>' )? otherlv_34= '<' otherlv_35= 'system' otherlv_36= '>' ( (lv_systemDeclarations_37_0= ruleSystemDeclarations ) ) otherlv_38= '</' otherlv_39= 'system' otherlv_40= '>' otherlv_41= '</' otherlv_42= 'nta' otherlv_43= '>'
            {
            // InternalUppaalXML.g:86:3: (otherlv_0= '<?xml version=\"1.0\" encoding=\"utf-8\"?>' | otherlv_1= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>' )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==11) ) {
                alt1=1;
            }
            else if ( (LA1_0==12) ) {
                alt1=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalUppaalXML.g:87:4: otherlv_0= '<?xml version=\"1.0\" encoding=\"utf-8\"?>'
                    {
                    otherlv_0=(Token)match(input,11,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNTAAccess().getXmlVersion10EncodingUtf8Keyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:92:4: otherlv_1= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>'
                    {
                    otherlv_1=(Token)match(input,12,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNTAAccess().getXmlVersion10EncodingUtf8Keyword_0_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,13,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getNTAAccess().getDOCTYPENtaPUBLICUppaalTeamDTDFlatSystem11ENHttpWwwItUuSeResearchGroupDartsUppaalFlat1_1DtdKeyword_1());
              		
            }
            otherlv_3=(Token)match(input,14,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getNTAAccess().getLessThanSignKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,15,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getNTAAccess().getNtaKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_4());
              		
            }
            // InternalUppaalXML.g:113:3: (otherlv_6= '<' otherlv_7= 'imports' otherlv_8= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_10= '</' otherlv_11= 'imports' otherlv_12= '>' )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==14) ) {
                    int LA3_1 = input.LA(2);

                    if ( (LA3_1==17) ) {
                        alt3=1;
                    }


                }


                switch (alt3) {
            	case 1 :
            	    // InternalUppaalXML.g:114:4: otherlv_6= '<' otherlv_7= 'imports' otherlv_8= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_10= '</' otherlv_11= 'imports' otherlv_12= '>'
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getNTAAccess().getLessThanSignKeyword_5_0());
            	      			
            	    }
            	    otherlv_7=(Token)match(input,17,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getNTAAccess().getImportsKeyword_5_1());
            	      			
            	    }
            	    otherlv_8=(Token)match(input,16,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_8, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_5_2());
            	      			
            	    }
            	    // InternalUppaalXML.g:126:4: ( ruleANY_TOKEN_BUT_XML_CLOSE )*
            	    loop2:
            	    do {
            	        int alt2=2;
            	        int LA2_0 = input.LA(1);

            	        if ( ((LA2_0>=RULE_STRING && LA2_0<=17)||(LA2_0>=19 && LA2_0<=44)||(LA2_0>=46 && LA2_0<=74)||(LA2_0>=76 && LA2_0<=135)) ) {
            	            alt2=1;
            	        }


            	        switch (alt2) {
            	    	case 1 :
            	    	    // InternalUppaalXML.g:127:5: ruleANY_TOKEN_BUT_XML_CLOSE
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      					newCompositeNode(grammarAccess.getNTAAccess().getANY_TOKEN_BUT_XML_CLOSEParserRuleCall_5_3());
            	    	      				
            	    	    }
            	    	    pushFollow(FOLLOW_8);
            	    	    ruleANY_TOKEN_BUT_XML_CLOSE();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      					afterParserOrEnumRuleCall();
            	    	      				
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop2;
            	        }
            	    } while (true);

            	    otherlv_10=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_10, grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_5_4());
            	      			
            	    }
            	    otherlv_11=(Token)match(input,17,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_11, grammarAccess.getNTAAccess().getImportsKeyword_5_5());
            	      			
            	    }
            	    otherlv_12=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_5_6());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            // InternalUppaalXML.g:148:3: (otherlv_13= '<' otherlv_14= 'declaration' otherlv_15= '>' ( (lv_globalDeclarations_16_0= ruleGlobalDeclarations ) ) otherlv_17= '</' otherlv_18= 'declaration' otherlv_19= '>' )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==14) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==19) ) {
                    alt4=1;
                }
            }
            switch (alt4) {
                case 1 :
                    // InternalUppaalXML.g:149:4: otherlv_13= '<' otherlv_14= 'declaration' otherlv_15= '>' ( (lv_globalDeclarations_16_0= ruleGlobalDeclarations ) ) otherlv_17= '</' otherlv_18= 'declaration' otherlv_19= '>'
                    {
                    otherlv_13=(Token)match(input,14,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getNTAAccess().getLessThanSignKeyword_6_0());
                      			
                    }
                    otherlv_14=(Token)match(input,19,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getNTAAccess().getDeclarationKeyword_6_1());
                      			
                    }
                    otherlv_15=(Token)match(input,16,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_6_2());
                      			
                    }
                    // InternalUppaalXML.g:161:4: ( (lv_globalDeclarations_16_0= ruleGlobalDeclarations ) )
                    // InternalUppaalXML.g:162:5: (lv_globalDeclarations_16_0= ruleGlobalDeclarations )
                    {
                    // InternalUppaalXML.g:162:5: (lv_globalDeclarations_16_0= ruleGlobalDeclarations )
                    // InternalUppaalXML.g:163:6: lv_globalDeclarations_16_0= ruleGlobalDeclarations
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNTAAccess().getGlobalDeclarationsGlobalDeclarationsParserRuleCall_6_3_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_globalDeclarations_16_0=ruleGlobalDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNTARule());
                      						}
                      						set(
                      							current,
                      							"globalDeclarations",
                      							lv_globalDeclarations_16_0,
                      							"org.muml.uppaal.UppaalXML.GlobalDeclarations");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_17=(Token)match(input,18,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_6_4());
                      			
                    }
                    otherlv_18=(Token)match(input,19,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getNTAAccess().getDeclarationKeyword_6_5());
                      			
                    }
                    otherlv_19=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_6_6());
                      			
                    }

                    }
                    break;

            }

            // InternalUppaalXML.g:193:3: (otherlv_20= '<' otherlv_21= 'template' otherlv_22= '>' ( (lv_template_23_0= ruleTemplate ) ) otherlv_24= '</' otherlv_25= 'template' otherlv_26= '>' )+
            int cnt5=0;
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==14) ) {
                    int LA5_1 = input.LA(2);

                    if ( (LA5_1==20) ) {
                        alt5=1;
                    }


                }


                switch (alt5) {
            	case 1 :
            	    // InternalUppaalXML.g:194:4: otherlv_20= '<' otherlv_21= 'template' otherlv_22= '>' ( (lv_template_23_0= ruleTemplate ) ) otherlv_24= '</' otherlv_25= 'template' otherlv_26= '>'
            	    {
            	    otherlv_20=(Token)match(input,14,FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_20, grammarAccess.getNTAAccess().getLessThanSignKeyword_7_0());
            	      			
            	    }
            	    otherlv_21=(Token)match(input,20,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_21, grammarAccess.getNTAAccess().getTemplateKeyword_7_1());
            	      			
            	    }
            	    otherlv_22=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_22, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_7_2());
            	      			
            	    }
            	    // InternalUppaalXML.g:206:4: ( (lv_template_23_0= ruleTemplate ) )
            	    // InternalUppaalXML.g:207:5: (lv_template_23_0= ruleTemplate )
            	    {
            	    // InternalUppaalXML.g:207:5: (lv_template_23_0= ruleTemplate )
            	    // InternalUppaalXML.g:208:6: lv_template_23_0= ruleTemplate
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNTAAccess().getTemplateTemplateParserRuleCall_7_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_template_23_0=ruleTemplate();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNTARule());
            	      						}
            	      						add(
            	      							current,
            	      							"template",
            	      							lv_template_23_0,
            	      							"org.muml.uppaal.UppaalXML.Template");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_24=(Token)match(input,18,FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_24, grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_7_4());
            	      			
            	    }
            	    otherlv_25=(Token)match(input,20,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_25, grammarAccess.getNTAAccess().getTemplateKeyword_7_5());
            	      			
            	    }
            	    otherlv_26=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_26, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_7_6());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt5 >= 1 ) break loop5;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(5, input);
                        throw eee;
                }
                cnt5++;
            } while (true);

            // InternalUppaalXML.g:238:3: (otherlv_27= '<' otherlv_28= 'instantiation' otherlv_29= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_31= '</' otherlv_32= 'instantiation' otherlv_33= '>' )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==14) ) {
                int LA7_1 = input.LA(2);

                if ( (LA7_1==21) ) {
                    alt7=1;
                }
            }
            switch (alt7) {
                case 1 :
                    // InternalUppaalXML.g:239:4: otherlv_27= '<' otherlv_28= 'instantiation' otherlv_29= '>' ( ruleANY_TOKEN_BUT_XML_CLOSE )* otherlv_31= '</' otherlv_32= 'instantiation' otherlv_33= '>'
                    {
                    otherlv_27=(Token)match(input,14,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getNTAAccess().getLessThanSignKeyword_8_0());
                      			
                    }
                    otherlv_28=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getNTAAccess().getInstantiationKeyword_8_1());
                      			
                    }
                    otherlv_29=(Token)match(input,16,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_8_2());
                      			
                    }
                    // InternalUppaalXML.g:251:4: ( ruleANY_TOKEN_BUT_XML_CLOSE )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( ((LA6_0>=RULE_STRING && LA6_0<=17)||(LA6_0>=19 && LA6_0<=44)||(LA6_0>=46 && LA6_0<=74)||(LA6_0>=76 && LA6_0<=135)) ) {
                            alt6=1;
                        }


                        switch (alt6) {
                    	case 1 :
                    	    // InternalUppaalXML.g:252:5: ruleANY_TOKEN_BUT_XML_CLOSE
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					newCompositeNode(grammarAccess.getNTAAccess().getANY_TOKEN_BUT_XML_CLOSEParserRuleCall_8_3());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    ruleANY_TOKEN_BUT_XML_CLOSE();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                    otherlv_31=(Token)match(input,18,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_8_4());
                      			
                    }
                    otherlv_32=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getNTAAccess().getInstantiationKeyword_8_5());
                      			
                    }
                    otherlv_33=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_8_6());
                      			
                    }

                    }
                    break;

            }

            otherlv_34=(Token)match(input,14,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_34, grammarAccess.getNTAAccess().getLessThanSignKeyword_9());
              		
            }
            otherlv_35=(Token)match(input,22,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_35, grammarAccess.getNTAAccess().getSystemKeyword_10());
              		
            }
            otherlv_36=(Token)match(input,16,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_36, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_11());
              		
            }
            // InternalUppaalXML.g:285:3: ( (lv_systemDeclarations_37_0= ruleSystemDeclarations ) )
            // InternalUppaalXML.g:286:4: (lv_systemDeclarations_37_0= ruleSystemDeclarations )
            {
            // InternalUppaalXML.g:286:4: (lv_systemDeclarations_37_0= ruleSystemDeclarations )
            // InternalUppaalXML.g:287:5: lv_systemDeclarations_37_0= ruleSystemDeclarations
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNTAAccess().getSystemDeclarationsSystemDeclarationsParserRuleCall_12_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_systemDeclarations_37_0=ruleSystemDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNTARule());
              					}
              					set(
              						current,
              						"systemDeclarations",
              						lv_systemDeclarations_37_0,
              						"org.muml.uppaal.UppaalXML.SystemDeclarations");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_38=(Token)match(input,18,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_38, grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_13());
              		
            }
            otherlv_39=(Token)match(input,22,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_39, grammarAccess.getNTAAccess().getSystemKeyword_14());
              		
            }
            otherlv_40=(Token)match(input,16,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_40, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_15());
              		
            }
            otherlv_41=(Token)match(input,18,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_41, grammarAccess.getNTAAccess().getLessThanSignSolidusKeyword_16());
              		
            }
            otherlv_42=(Token)match(input,15,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_42, grammarAccess.getNTAAccess().getNtaKeyword_17());
              		
            }
            otherlv_43=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_43, grammarAccess.getNTAAccess().getGreaterThanSignKeyword_18());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNTA"


    // $ANTLR start "entryRuleTemplate"
    // InternalUppaalXML.g:335:1: entryRuleTemplate returns [EObject current=null] : iv_ruleTemplate= ruleTemplate EOF ;
    public final EObject entryRuleTemplate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplate = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalUppaalXML.g:337:2: (iv_ruleTemplate= ruleTemplate EOF )
            // InternalUppaalXML.g:338:2: iv_ruleTemplate= ruleTemplate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplate=ruleTemplate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleTemplate"


    // $ANTLR start "ruleTemplate"
    // InternalUppaalXML.g:347:1: ruleTemplate returns [EObject current=null] : (otherlv_0= '<' otherlv_1= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )* ) ) ) otherlv_9= '>' ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '</' otherlv_12= 'name' otherlv_13= '>' (otherlv_14= '<' otherlv_15= 'parameter' otherlv_16= '>' ( ( (lv_parameter_17_0= ruleParameterContainer ) ) (otherlv_18= ',' ( (lv_parameter_19_0= ruleParameterContainer ) ) )* )? otherlv_20= '</' otherlv_21= 'parameter' otherlv_22= '>' )? (otherlv_23= '<' otherlv_24= 'declaration' otherlv_25= '>' ( (lv_declarations_26_0= ruleLocalDeclarations ) ) otherlv_27= '</' otherlv_28= 'declaration' otherlv_29= '>' )? ( (lv_location_30_0= ruleLocation ) )+ otherlv_31= '<' otherlv_32= 'init' otherlv_33= 'ref' otherlv_34= '=' ( (otherlv_35= RULE_STRING ) ) otherlv_36= '/>' ( (lv_edge_37_0= ruleEdge ) )* ) ;
    public final EObject ruleTemplate() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token this_STRING_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token this_STRING_8=null;
        Token otherlv_9=null;
        Token lv_name_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        EObject lv_parameter_17_0 = null;

        EObject lv_parameter_19_0 = null;

        EObject lv_declarations_26_0 = null;

        EObject lv_location_30_0 = null;

        EObject lv_edge_37_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalUppaalXML.g:354:2: ( (otherlv_0= '<' otherlv_1= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )* ) ) ) otherlv_9= '>' ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '</' otherlv_12= 'name' otherlv_13= '>' (otherlv_14= '<' otherlv_15= 'parameter' otherlv_16= '>' ( ( (lv_parameter_17_0= ruleParameterContainer ) ) (otherlv_18= ',' ( (lv_parameter_19_0= ruleParameterContainer ) ) )* )? otherlv_20= '</' otherlv_21= 'parameter' otherlv_22= '>' )? (otherlv_23= '<' otherlv_24= 'declaration' otherlv_25= '>' ( (lv_declarations_26_0= ruleLocalDeclarations ) ) otherlv_27= '</' otherlv_28= 'declaration' otherlv_29= '>' )? ( (lv_location_30_0= ruleLocation ) )+ otherlv_31= '<' otherlv_32= 'init' otherlv_33= 'ref' otherlv_34= '=' ( (otherlv_35= RULE_STRING ) ) otherlv_36= '/>' ( (lv_edge_37_0= ruleEdge ) )* ) )
            // InternalUppaalXML.g:355:2: (otherlv_0= '<' otherlv_1= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )* ) ) ) otherlv_9= '>' ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '</' otherlv_12= 'name' otherlv_13= '>' (otherlv_14= '<' otherlv_15= 'parameter' otherlv_16= '>' ( ( (lv_parameter_17_0= ruleParameterContainer ) ) (otherlv_18= ',' ( (lv_parameter_19_0= ruleParameterContainer ) ) )* )? otherlv_20= '</' otherlv_21= 'parameter' otherlv_22= '>' )? (otherlv_23= '<' otherlv_24= 'declaration' otherlv_25= '>' ( (lv_declarations_26_0= ruleLocalDeclarations ) ) otherlv_27= '</' otherlv_28= 'declaration' otherlv_29= '>' )? ( (lv_location_30_0= ruleLocation ) )+ otherlv_31= '<' otherlv_32= 'init' otherlv_33= 'ref' otherlv_34= '=' ( (otherlv_35= RULE_STRING ) ) otherlv_36= '/>' ( (lv_edge_37_0= ruleEdge ) )* )
            {
            // InternalUppaalXML.g:355:2: (otherlv_0= '<' otherlv_1= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )* ) ) ) otherlv_9= '>' ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '</' otherlv_12= 'name' otherlv_13= '>' (otherlv_14= '<' otherlv_15= 'parameter' otherlv_16= '>' ( ( (lv_parameter_17_0= ruleParameterContainer ) ) (otherlv_18= ',' ( (lv_parameter_19_0= ruleParameterContainer ) ) )* )? otherlv_20= '</' otherlv_21= 'parameter' otherlv_22= '>' )? (otherlv_23= '<' otherlv_24= 'declaration' otherlv_25= '>' ( (lv_declarations_26_0= ruleLocalDeclarations ) ) otherlv_27= '</' otherlv_28= 'declaration' otherlv_29= '>' )? ( (lv_location_30_0= ruleLocation ) )+ otherlv_31= '<' otherlv_32= 'init' otherlv_33= 'ref' otherlv_34= '=' ( (otherlv_35= RULE_STRING ) ) otherlv_36= '/>' ( (lv_edge_37_0= ruleEdge ) )* )
            // InternalUppaalXML.g:356:3: otherlv_0= '<' otherlv_1= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )* ) ) ) otherlv_9= '>' ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '</' otherlv_12= 'name' otherlv_13= '>' (otherlv_14= '<' otherlv_15= 'parameter' otherlv_16= '>' ( ( (lv_parameter_17_0= ruleParameterContainer ) ) (otherlv_18= ',' ( (lv_parameter_19_0= ruleParameterContainer ) ) )* )? otherlv_20= '</' otherlv_21= 'parameter' otherlv_22= '>' )? (otherlv_23= '<' otherlv_24= 'declaration' otherlv_25= '>' ( (lv_declarations_26_0= ruleLocalDeclarations ) ) otherlv_27= '</' otherlv_28= 'declaration' otherlv_29= '>' )? ( (lv_location_30_0= ruleLocation ) )+ otherlv_31= '<' otherlv_32= 'init' otherlv_33= 'ref' otherlv_34= '=' ( (otherlv_35= RULE_STRING ) ) otherlv_36= '/>' ( (lv_edge_37_0= ruleEdge ) )*
            {
            otherlv_0=(Token)match(input,14,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTemplateAccess().getLessThanSignKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,23,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTemplateAccess().getNameKeyword_1());
              		
            }
            // InternalUppaalXML.g:364:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )* ) ) )
            // InternalUppaalXML.g:365:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )* ) )
            {
            // InternalUppaalXML.g:365:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )* ) )
            // InternalUppaalXML.g:366:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getTemplateAccess().getUnorderedGroup_2());
            // InternalUppaalXML.g:369:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )* )
            // InternalUppaalXML.g:370:6: ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )*
            {
            // InternalUppaalXML.g:370:6: ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) )*
            loop8:
            do {
                int alt8=3;
                int LA8_0 = input.LA(1);

                if ( LA8_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 0) ) {
                    alt8=1;
                }
                else if ( LA8_0 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 1) ) {
                    alt8=2;
                }


                switch (alt8) {
            	case 1 :
            	    // InternalUppaalXML.g:371:4: ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) )
            	    {
            	    // InternalUppaalXML.g:371:4: ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) )
            	    // InternalUppaalXML.g:372:5: {...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleTemplate", "getUnorderedGroupHelper().canSelect(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalUppaalXML.g:372:105: ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) )
            	    // InternalUppaalXML.g:373:6: ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 0);
            	    // InternalUppaalXML.g:376:9: ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) )
            	    // InternalUppaalXML.g:376:10: {...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleTemplate", "true");
            	    }
            	    // InternalUppaalXML.g:376:19: (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING )
            	    // InternalUppaalXML.g:376:20: otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING
            	    {
            	    otherlv_3=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getTemplateAccess().getXKeyword_2_0_0());
            	      								
            	    }
            	    otherlv_4=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getTemplateAccess().getEqualsSignKeyword_2_0_1());
            	      								
            	    }
            	    this_STRING_5=(Token)match(input,RULE_STRING,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_STRING_5, grammarAccess.getTemplateAccess().getSTRINGTerminalRuleCall_2_0_2());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTemplateAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalUppaalXML.g:394:4: ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) )
            	    {
            	    // InternalUppaalXML.g:394:4: ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) )
            	    // InternalUppaalXML.g:395:5: {...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleTemplate", "getUnorderedGroupHelper().canSelect(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalUppaalXML.g:395:105: ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) )
            	    // InternalUppaalXML.g:396:6: ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getTemplateAccess().getUnorderedGroup_2(), 1);
            	    // InternalUppaalXML.g:399:9: ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) )
            	    // InternalUppaalXML.g:399:10: {...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleTemplate", "true");
            	    }
            	    // InternalUppaalXML.g:399:19: (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING )
            	    // InternalUppaalXML.g:399:20: otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING
            	    {
            	    otherlv_6=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getTemplateAccess().getYKeyword_2_1_0());
            	      								
            	    }
            	    otherlv_7=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getTemplateAccess().getEqualsSignKeyword_2_1_1());
            	      								
            	    }
            	    this_STRING_8=(Token)match(input,RULE_STRING,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_STRING_8, grammarAccess.getTemplateAccess().getSTRINGTerminalRuleCall_2_1_2());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTemplateAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getTemplateAccess().getUnorderedGroup_2());

            }

            otherlv_9=(Token)match(input,16,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_3());
              		
            }
            // InternalUppaalXML.g:428:3: ( (lv_name_10_0= RULE_ID ) )
            // InternalUppaalXML.g:429:4: (lv_name_10_0= RULE_ID )
            {
            // InternalUppaalXML.g:429:4: (lv_name_10_0= RULE_ID )
            // InternalUppaalXML.g:430:5: lv_name_10_0= RULE_ID
            {
            lv_name_10_0=(Token)match(input,RULE_ID,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_10_0, grammarAccess.getTemplateAccess().getNameIDTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTemplateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_10_0,
              						"org.muml.uppaal.UppaalXML.ID");
              				
            }

            }


            }

            otherlv_11=(Token)match(input,18,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getTemplateAccess().getLessThanSignSolidusKeyword_5());
              		
            }
            otherlv_12=(Token)match(input,23,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getTemplateAccess().getNameKeyword_6());
              		
            }
            otherlv_13=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_7());
              		
            }
            // InternalUppaalXML.g:458:3: (otherlv_14= '<' otherlv_15= 'parameter' otherlv_16= '>' ( ( (lv_parameter_17_0= ruleParameterContainer ) ) (otherlv_18= ',' ( (lv_parameter_19_0= ruleParameterContainer ) ) )* )? otherlv_20= '</' otherlv_21= 'parameter' otherlv_22= '>' )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==14) ) {
                int LA11_1 = input.LA(2);

                if ( (LA11_1==27) ) {
                    alt11=1;
                }
            }
            switch (alt11) {
                case 1 :
                    // InternalUppaalXML.g:459:4: otherlv_14= '<' otherlv_15= 'parameter' otherlv_16= '>' ( ( (lv_parameter_17_0= ruleParameterContainer ) ) (otherlv_18= ',' ( (lv_parameter_19_0= ruleParameterContainer ) ) )* )? otherlv_20= '</' otherlv_21= 'parameter' otherlv_22= '>'
                    {
                    otherlv_14=(Token)match(input,14,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getTemplateAccess().getLessThanSignKeyword_8_0());
                      			
                    }
                    otherlv_15=(Token)match(input,27,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getTemplateAccess().getParameterKeyword_8_1());
                      			
                    }
                    otherlv_16=(Token)match(input,16,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_8_2());
                      			
                    }
                    // InternalUppaalXML.g:471:4: ( ( (lv_parameter_17_0= ruleParameterContainer ) ) (otherlv_18= ',' ( (lv_parameter_19_0= ruleParameterContainer ) ) )* )?
                    int alt10=2;
                    int LA10_0 = input.LA(1);

                    if ( (LA10_0==RULE_ID||LA10_0==15||LA10_0==17||(LA10_0>=19 && LA10_0<=21)||(LA10_0>=23 && LA10_0<=24)||(LA10_0>=26 && LA10_0<=27)||LA10_0==30||(LA10_0>=32 && LA10_0<=36)||(LA10_0>=39 && LA10_0<=41)||LA10_0==46||(LA10_0>=57 && LA10_0<=62)||(LA10_0>=79 && LA10_0<=81)||LA10_0==83||LA10_0==99||LA10_0==135) ) {
                        alt10=1;
                    }
                    switch (alt10) {
                        case 1 :
                            // InternalUppaalXML.g:472:5: ( (lv_parameter_17_0= ruleParameterContainer ) ) (otherlv_18= ',' ( (lv_parameter_19_0= ruleParameterContainer ) ) )*
                            {
                            // InternalUppaalXML.g:472:5: ( (lv_parameter_17_0= ruleParameterContainer ) )
                            // InternalUppaalXML.g:473:6: (lv_parameter_17_0= ruleParameterContainer )
                            {
                            // InternalUppaalXML.g:473:6: (lv_parameter_17_0= ruleParameterContainer )
                            // InternalUppaalXML.g:474:7: lv_parameter_17_0= ruleParameterContainer
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTemplateAccess().getParameterParameterContainerParserRuleCall_8_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_23);
                            lv_parameter_17_0=ruleParameterContainer();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTemplateRule());
                              							}
                              							add(
                              								current,
                              								"parameter",
                              								lv_parameter_17_0,
                              								"org.muml.uppaal.UppaalXML.ParameterContainer");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalUppaalXML.g:491:5: (otherlv_18= ',' ( (lv_parameter_19_0= ruleParameterContainer ) ) )*
                            loop9:
                            do {
                                int alt9=2;
                                int LA9_0 = input.LA(1);

                                if ( (LA9_0==28) ) {
                                    alt9=1;
                                }


                                switch (alt9) {
                            	case 1 :
                            	    // InternalUppaalXML.g:492:6: otherlv_18= ',' ( (lv_parameter_19_0= ruleParameterContainer ) )
                            	    {
                            	    otherlv_18=(Token)match(input,28,FOLLOW_24); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_18, grammarAccess.getTemplateAccess().getCommaKeyword_8_3_1_0());
                            	      					
                            	    }
                            	    // InternalUppaalXML.g:496:6: ( (lv_parameter_19_0= ruleParameterContainer ) )
                            	    // InternalUppaalXML.g:497:7: (lv_parameter_19_0= ruleParameterContainer )
                            	    {
                            	    // InternalUppaalXML.g:497:7: (lv_parameter_19_0= ruleParameterContainer )
                            	    // InternalUppaalXML.g:498:8: lv_parameter_19_0= ruleParameterContainer
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getTemplateAccess().getParameterParameterContainerParserRuleCall_8_3_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_23);
                            	    lv_parameter_19_0=ruleParameterContainer();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getTemplateRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"parameter",
                            	      									lv_parameter_19_0,
                            	      									"org.muml.uppaal.UppaalXML.ParameterContainer");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop9;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_20=(Token)match(input,18,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getTemplateAccess().getLessThanSignSolidusKeyword_8_4());
                      			
                    }
                    otherlv_21=(Token)match(input,27,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getTemplateAccess().getParameterKeyword_8_5());
                      			
                    }
                    otherlv_22=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_8_6());
                      			
                    }

                    }
                    break;

            }

            // InternalUppaalXML.g:530:3: (otherlv_23= '<' otherlv_24= 'declaration' otherlv_25= '>' ( (lv_declarations_26_0= ruleLocalDeclarations ) ) otherlv_27= '</' otherlv_28= 'declaration' otherlv_29= '>' )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==14) ) {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==19) ) {
                    alt12=1;
                }
            }
            switch (alt12) {
                case 1 :
                    // InternalUppaalXML.g:531:4: otherlv_23= '<' otherlv_24= 'declaration' otherlv_25= '>' ( (lv_declarations_26_0= ruleLocalDeclarations ) ) otherlv_27= '</' otherlv_28= 'declaration' otherlv_29= '>'
                    {
                    otherlv_23=(Token)match(input,14,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getTemplateAccess().getLessThanSignKeyword_9_0());
                      			
                    }
                    otherlv_24=(Token)match(input,19,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getTemplateAccess().getDeclarationKeyword_9_1());
                      			
                    }
                    otherlv_25=(Token)match(input,16,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_9_2());
                      			
                    }
                    // InternalUppaalXML.g:543:4: ( (lv_declarations_26_0= ruleLocalDeclarations ) )
                    // InternalUppaalXML.g:544:5: (lv_declarations_26_0= ruleLocalDeclarations )
                    {
                    // InternalUppaalXML.g:544:5: (lv_declarations_26_0= ruleLocalDeclarations )
                    // InternalUppaalXML.g:545:6: lv_declarations_26_0= ruleLocalDeclarations
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTemplateAccess().getDeclarationsLocalDeclarationsParserRuleCall_9_3_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_declarations_26_0=ruleLocalDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTemplateRule());
                      						}
                      						set(
                      							current,
                      							"declarations",
                      							lv_declarations_26_0,
                      							"org.muml.uppaal.UppaalXML.LocalDeclarations");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_27=(Token)match(input,18,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getTemplateAccess().getLessThanSignSolidusKeyword_9_4());
                      			
                    }
                    otherlv_28=(Token)match(input,19,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getTemplateAccess().getDeclarationKeyword_9_5());
                      			
                    }
                    otherlv_29=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_9_6());
                      			
                    }

                    }
                    break;

            }

            // InternalUppaalXML.g:575:3: ( (lv_location_30_0= ruleLocation ) )+
            int cnt13=0;
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==14) ) {
                    int LA13_1 = input.LA(2);

                    if ( (LA13_1==32) ) {
                        alt13=1;
                    }


                }


                switch (alt13) {
            	case 1 :
            	    // InternalUppaalXML.g:576:4: (lv_location_30_0= ruleLocation )
            	    {
            	    // InternalUppaalXML.g:576:4: (lv_location_30_0= ruleLocation )
            	    // InternalUppaalXML.g:577:5: lv_location_30_0= ruleLocation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTemplateAccess().getLocationLocationParserRuleCall_10_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_location_30_0=ruleLocation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTemplateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"location",
            	      						lv_location_30_0,
            	      						"org.muml.uppaal.UppaalXML.Location");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt13 >= 1 ) break loop13;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(13, input);
                        throw eee;
                }
                cnt13++;
            } while (true);

            otherlv_31=(Token)match(input,14,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_31, grammarAccess.getTemplateAccess().getLessThanSignKeyword_11());
              		
            }
            otherlv_32=(Token)match(input,29,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_32, grammarAccess.getTemplateAccess().getInitKeyword_12());
              		
            }
            otherlv_33=(Token)match(input,30,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_33, grammarAccess.getTemplateAccess().getRefKeyword_13());
              		
            }
            otherlv_34=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_34, grammarAccess.getTemplateAccess().getEqualsSignKeyword_14());
              		
            }
            // InternalUppaalXML.g:610:3: ( (otherlv_35= RULE_STRING ) )
            // InternalUppaalXML.g:611:4: (otherlv_35= RULE_STRING )
            {
            // InternalUppaalXML.g:611:4: (otherlv_35= RULE_STRING )
            // InternalUppaalXML.g:612:5: otherlv_35= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTemplateRule());
              					}
              				
            }
            otherlv_35=(Token)match(input,RULE_STRING,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_35, grammarAccess.getTemplateAccess().getInitLocationCrossReference_15_0());
              				
            }

            }


            }

            otherlv_36=(Token)match(input,31,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_36, grammarAccess.getTemplateAccess().getSolidusGreaterThanSignKeyword_16());
              		
            }
            // InternalUppaalXML.g:627:3: ( (lv_edge_37_0= ruleEdge ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==14) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalUppaalXML.g:628:4: (lv_edge_37_0= ruleEdge )
            	    {
            	    // InternalUppaalXML.g:628:4: (lv_edge_37_0= ruleEdge )
            	    // InternalUppaalXML.g:629:5: lv_edge_37_0= ruleEdge
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTemplateAccess().getEdgeEdgeParserRuleCall_17_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_28);
            	    lv_edge_37_0=ruleEdge();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTemplateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"edge",
            	      						lv_edge_37_0,
            	      						"org.muml.uppaal.UppaalXML.Edge");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleTemplate"


    // $ANTLR start "entryRuleLocation"
    // InternalUppaalXML.g:653:1: entryRuleLocation returns [EObject current=null] : iv_ruleLocation= ruleLocation EOF ;
    public final EObject entryRuleLocation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocation = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalUppaalXML.g:655:2: (iv_ruleLocation= ruleLocation EOF )
            // InternalUppaalXML.g:656:2: iv_ruleLocation= ruleLocation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocation=ruleLocation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleLocation"


    // $ANTLR start "ruleLocation"
    // InternalUppaalXML.g:665:1: ruleLocation returns [EObject current=null] : (otherlv_0= '<' otherlv_1= 'location' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+ {...}?) ) ) (otherlv_10= '/>' | (otherlv_11= '>' (otherlv_12= '<' otherlv_13= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) ) otherlv_21= '>' ( (lv_name_22_0= RULE_ID ) ) otherlv_23= '</' otherlv_24= 'name' otherlv_25= '>' )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) ) ) ( (lv_locationTimeKind_67_0= ruleLocationKind ) )? otherlv_68= '</' otherlv_69= 'location' otherlv_70= '>' ) ) ) ;
    public final EObject ruleLocation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_id_5_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_colorCode_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token this_STRING_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token this_STRING_20=null;
        Token otherlv_21=null;
        Token lv_name_22_0=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token this_STRING_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token this_STRING_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token this_STRING_41=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token this_STRING_55=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token this_STRING_58=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token this_STRING_61=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        EObject lv_position_6_0 = null;

        AntlrDatatypeRuleToken lv_comment_43_0 = null;

        EObject lv_invariant_63_0 = null;

        Enumerator lv_locationTimeKind_67_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalUppaalXML.g:672:2: ( (otherlv_0= '<' otherlv_1= 'location' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+ {...}?) ) ) (otherlv_10= '/>' | (otherlv_11= '>' (otherlv_12= '<' otherlv_13= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) ) otherlv_21= '>' ( (lv_name_22_0= RULE_ID ) ) otherlv_23= '</' otherlv_24= 'name' otherlv_25= '>' )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) ) ) ( (lv_locationTimeKind_67_0= ruleLocationKind ) )? otherlv_68= '</' otherlv_69= 'location' otherlv_70= '>' ) ) ) )
            // InternalUppaalXML.g:673:2: (otherlv_0= '<' otherlv_1= 'location' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+ {...}?) ) ) (otherlv_10= '/>' | (otherlv_11= '>' (otherlv_12= '<' otherlv_13= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) ) otherlv_21= '>' ( (lv_name_22_0= RULE_ID ) ) otherlv_23= '</' otherlv_24= 'name' otherlv_25= '>' )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) ) ) ( (lv_locationTimeKind_67_0= ruleLocationKind ) )? otherlv_68= '</' otherlv_69= 'location' otherlv_70= '>' ) ) )
            {
            // InternalUppaalXML.g:673:2: (otherlv_0= '<' otherlv_1= 'location' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+ {...}?) ) ) (otherlv_10= '/>' | (otherlv_11= '>' (otherlv_12= '<' otherlv_13= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) ) otherlv_21= '>' ( (lv_name_22_0= RULE_ID ) ) otherlv_23= '</' otherlv_24= 'name' otherlv_25= '>' )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) ) ) ( (lv_locationTimeKind_67_0= ruleLocationKind ) )? otherlv_68= '</' otherlv_69= 'location' otherlv_70= '>' ) ) )
            // InternalUppaalXML.g:674:3: otherlv_0= '<' otherlv_1= 'location' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+ {...}?) ) ) (otherlv_10= '/>' | (otherlv_11= '>' (otherlv_12= '<' otherlv_13= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) ) otherlv_21= '>' ( (lv_name_22_0= RULE_ID ) ) otherlv_23= '</' otherlv_24= 'name' otherlv_25= '>' )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) ) ) ( (lv_locationTimeKind_67_0= ruleLocationKind ) )? otherlv_68= '</' otherlv_69= 'location' otherlv_70= '>' ) )
            {
            otherlv_0=(Token)match(input,14,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLocationAccess().getLessThanSignKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,32,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLocationAccess().getLocationKeyword_1());
              		
            }
            // InternalUppaalXML.g:682:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+ {...}?) ) )
            // InternalUppaalXML.g:683:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalUppaalXML.g:683:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+ {...}?) )
            // InternalUppaalXML.g:684:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getLocationAccess().getUnorderedGroup_2());
            // InternalUppaalXML.g:687:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+ {...}?)
            // InternalUppaalXML.g:688:6: ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+ {...}?
            {
            // InternalUppaalXML.g:688:6: ( ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) ) )+
            int cnt15=0;
            loop15:
            do {
                int alt15=4;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==31) ) {
                    int LA15_1 = input.LA(2);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1) ) {
                        alt15=2;
                    }


                }
                else if ( (LA15_0==16) ) {
                    int LA15_2 = input.LA(2);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1) ) {
                        alt15=2;
                    }


                }
                else if ( LA15_0 == 33 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 0) ) ) {
                    int LA15_3 = input.LA(2);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 0) ) {
                        alt15=1;
                    }
                    else if ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1) ) {
                        alt15=2;
                    }


                }
                else if ( ( LA15_0 == 24 || LA15_0 == 26 ) && getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1) ) {
                    alt15=2;
                }
                else if ( LA15_0 == 34 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1) ) ) {
                    int LA15_5 = input.LA(2);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1) ) {
                        alt15=2;
                    }
                    else if ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 2) ) {
                        alt15=3;
                    }


                }


                switch (alt15) {
            	case 1 :
            	    // InternalUppaalXML.g:689:4: ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // InternalUppaalXML.g:689:4: ({...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) ) )
            	    // InternalUppaalXML.g:690:5: {...}? => ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalUppaalXML.g:690:105: ( ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) ) )
            	    // InternalUppaalXML.g:691:6: ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 0);
            	    // InternalUppaalXML.g:694:9: ({...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) ) )
            	    // InternalUppaalXML.g:694:10: {...}? => (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleLocation", "true");
            	    }
            	    // InternalUppaalXML.g:694:19: (otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) ) )
            	    // InternalUppaalXML.g:694:20: otherlv_3= 'id' otherlv_4= '=' ( (lv_id_5_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,33,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getLocationAccess().getIdKeyword_2_0_0());
            	      								
            	    }
            	    otherlv_4=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getLocationAccess().getEqualsSignKeyword_2_0_1());
            	      								
            	    }
            	    // InternalUppaalXML.g:702:9: ( (lv_id_5_0= RULE_STRING ) )
            	    // InternalUppaalXML.g:703:10: (lv_id_5_0= RULE_STRING )
            	    {
            	    // InternalUppaalXML.g:703:10: (lv_id_5_0= RULE_STRING )
            	    // InternalUppaalXML.g:704:11: lv_id_5_0= RULE_STRING
            	    {
            	    lv_id_5_0=(Token)match(input,RULE_STRING,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_id_5_0, grammarAccess.getLocationAccess().getIdSTRINGTerminalRuleCall_2_0_2_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getLocationRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"id",
            	      												lv_id_5_0,
            	      												"org.muml.uppaal.UppaalXML.STRING");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalUppaalXML.g:726:4: ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) )
            	    {
            	    // InternalUppaalXML.g:726:4: ({...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) ) )
            	    // InternalUppaalXML.g:727:5: {...}? => ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalUppaalXML.g:727:105: ( ({...}? => ( (lv_position_6_0= rulePoint ) ) ) )
            	    // InternalUppaalXML.g:728:6: ({...}? => ( (lv_position_6_0= rulePoint ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 1);
            	    // InternalUppaalXML.g:731:9: ({...}? => ( (lv_position_6_0= rulePoint ) ) )
            	    // InternalUppaalXML.g:731:10: {...}? => ( (lv_position_6_0= rulePoint ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleLocation", "true");
            	    }
            	    // InternalUppaalXML.g:731:19: ( (lv_position_6_0= rulePoint ) )
            	    // InternalUppaalXML.g:731:20: (lv_position_6_0= rulePoint )
            	    {
            	    // InternalUppaalXML.g:731:20: (lv_position_6_0= rulePoint )
            	    // InternalUppaalXML.g:732:10: lv_position_6_0= rulePoint
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getLocationAccess().getPositionPointParserRuleCall_2_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_position_6_0=rulePoint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getLocationRule());
            	      										}
            	      										set(
            	      											current,
            	      											"position",
            	      											lv_position_6_0,
            	      											"org.muml.uppaal.UppaalXML.Point");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalUppaalXML.g:754:4: ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // InternalUppaalXML.g:754:4: ({...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) ) )
            	    // InternalUppaalXML.g:755:5: {...}? => ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalUppaalXML.g:755:105: ( ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) ) )
            	    // InternalUppaalXML.g:756:6: ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_2(), 2);
            	    // InternalUppaalXML.g:759:9: ({...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) ) )
            	    // InternalUppaalXML.g:759:10: {...}? => (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleLocation", "true");
            	    }
            	    // InternalUppaalXML.g:759:19: (otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) ) )
            	    // InternalUppaalXML.g:759:20: otherlv_7= 'color' otherlv_8= '=' ( (lv_colorCode_9_0= RULE_STRING ) )
            	    {
            	    otherlv_7=(Token)match(input,34,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getLocationAccess().getColorKeyword_2_2_0());
            	      								
            	    }
            	    otherlv_8=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getLocationAccess().getEqualsSignKeyword_2_2_1());
            	      								
            	    }
            	    // InternalUppaalXML.g:767:9: ( (lv_colorCode_9_0= RULE_STRING ) )
            	    // InternalUppaalXML.g:768:10: (lv_colorCode_9_0= RULE_STRING )
            	    {
            	    // InternalUppaalXML.g:768:10: (lv_colorCode_9_0= RULE_STRING )
            	    // InternalUppaalXML.g:769:11: lv_colorCode_9_0= RULE_STRING
            	    {
            	    lv_colorCode_9_0=(Token)match(input,RULE_STRING,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_colorCode_9_0, grammarAccess.getLocationAccess().getColorCodeSTRINGTerminalRuleCall_2_2_2_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getLocationRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"colorCode",
            	      												lv_colorCode_9_0,
            	      												"org.muml.uppaal.UppaalXML.STRING");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt15 >= 1 ) break loop15;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(15, input);
                        throw eee;
                }
                cnt15++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getLocationAccess().getUnorderedGroup_2()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canLeave(grammarAccess.getLocationAccess().getUnorderedGroup_2())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getLocationAccess().getUnorderedGroup_2());

            }

            // InternalUppaalXML.g:799:3: (otherlv_10= '/>' | (otherlv_11= '>' (otherlv_12= '<' otherlv_13= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) ) otherlv_21= '>' ( (lv_name_22_0= RULE_ID ) ) otherlv_23= '</' otherlv_24= 'name' otherlv_25= '>' )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) ) ) ( (lv_locationTimeKind_67_0= ruleLocationKind ) )? otherlv_68= '</' otherlv_69= 'location' otherlv_70= '>' ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==31) ) {
                alt22=1;
            }
            else if ( (LA22_0==16) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalUppaalXML.g:800:4: otherlv_10= '/>'
                    {
                    otherlv_10=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getLocationAccess().getSolidusGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:805:4: (otherlv_11= '>' (otherlv_12= '<' otherlv_13= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) ) otherlv_21= '>' ( (lv_name_22_0= RULE_ID ) ) otherlv_23= '</' otherlv_24= 'name' otherlv_25= '>' )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) ) ) ( (lv_locationTimeKind_67_0= ruleLocationKind ) )? otherlv_68= '</' otherlv_69= 'location' otherlv_70= '>' )
                    {
                    // InternalUppaalXML.g:805:4: (otherlv_11= '>' (otherlv_12= '<' otherlv_13= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) ) otherlv_21= '>' ( (lv_name_22_0= RULE_ID ) ) otherlv_23= '</' otherlv_24= 'name' otherlv_25= '>' )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) ) ) ( (lv_locationTimeKind_67_0= ruleLocationKind ) )? otherlv_68= '</' otherlv_69= 'location' otherlv_70= '>' )
                    // InternalUppaalXML.g:806:5: otherlv_11= '>' (otherlv_12= '<' otherlv_13= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) ) otherlv_21= '>' ( (lv_name_22_0= RULE_ID ) ) otherlv_23= '</' otherlv_24= 'name' otherlv_25= '>' )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) ) ) ( (lv_locationTimeKind_67_0= ruleLocationKind ) )? otherlv_68= '</' otherlv_69= 'location' otherlv_70= '>'
                    {
                    otherlv_11=(Token)match(input,16,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_0());
                      				
                    }
                    // InternalUppaalXML.g:810:5: (otherlv_12= '<' otherlv_13= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) ) otherlv_21= '>' ( (lv_name_22_0= RULE_ID ) ) otherlv_23= '</' otherlv_24= 'name' otherlv_25= '>' )?
                    int alt17=2;
                    int LA17_0 = input.LA(1);

                    if ( (LA17_0==14) ) {
                        int LA17_1 = input.LA(2);

                        if ( (LA17_1==23) ) {
                            alt17=1;
                        }
                    }
                    switch (alt17) {
                        case 1 :
                            // InternalUppaalXML.g:811:6: otherlv_12= '<' otherlv_13= 'name' ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) ) otherlv_21= '>' ( (lv_name_22_0= RULE_ID ) ) otherlv_23= '</' otherlv_24= 'name' otherlv_25= '>'
                            {
                            otherlv_12=(Token)match(input,14,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getLocationAccess().getLessThanSignKeyword_3_1_1_0());
                              					
                            }
                            otherlv_13=(Token)match(input,23,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getLocationAccess().getNameKeyword_3_1_1_1());
                              					
                            }
                            // InternalUppaalXML.g:819:6: ( ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) ) )
                            // InternalUppaalXML.g:820:7: ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) )
                            {
                            // InternalUppaalXML.g:820:7: ( ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* ) )
                            // InternalUppaalXML.g:821:8: ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* )
                            {
                            getUnorderedGroupHelper().enter(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2());
                            // InternalUppaalXML.g:824:8: ( ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )* )
                            // InternalUppaalXML.g:825:9: ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )*
                            {
                            // InternalUppaalXML.g:825:9: ( ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) ) )*
                            loop16:
                            do {
                                int alt16=3;
                                int LA16_0 = input.LA(1);

                                if ( LA16_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 0) ) {
                                    alt16=1;
                                }
                                else if ( LA16_0 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 1) ) {
                                    alt16=2;
                                }


                                switch (alt16) {
                            	case 1 :
                            	    // InternalUppaalXML.g:826:7: ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) )
                            	    {
                            	    // InternalUppaalXML.g:826:7: ({...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) ) )
                            	    // InternalUppaalXML.g:827:8: {...}? => ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) )
                            	    {
                            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 0) ) {
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 0)");
                            	    }
                            	    // InternalUppaalXML.g:827:114: ( ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) ) )
                            	    // InternalUppaalXML.g:828:9: ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) )
                            	    {
                            	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 0);
                            	    // InternalUppaalXML.g:831:12: ({...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING ) )
                            	    // InternalUppaalXML.g:831:13: {...}? => (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING )
                            	    {
                            	    if ( !((true)) ) {
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        throw new FailedPredicateException(input, "ruleLocation", "true");
                            	    }
                            	    // InternalUppaalXML.g:831:22: (otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING )
                            	    // InternalUppaalXML.g:831:23: otherlv_15= 'x' otherlv_16= '=' this_STRING_17= RULE_STRING
                            	    {
                            	    otherlv_15=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      												newLeafNode(otherlv_15, grammarAccess.getLocationAccess().getXKeyword_3_1_1_2_0_0());
                            	      											
                            	    }
                            	    otherlv_16=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      												newLeafNode(otherlv_16, grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_1_2_0_1());
                            	      											
                            	    }
                            	    this_STRING_17=(Token)match(input,RULE_STRING,FOLLOW_17); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      												newLeafNode(this_STRING_17, grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_1_2_0_2());
                            	      											
                            	    }

                            	    }


                            	    }

                            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2());

                            	    }


                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // InternalUppaalXML.g:849:7: ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) )
                            	    {
                            	    // InternalUppaalXML.g:849:7: ({...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) ) )
                            	    // InternalUppaalXML.g:850:8: {...}? => ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) )
                            	    {
                            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 1) ) {
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 1)");
                            	    }
                            	    // InternalUppaalXML.g:850:114: ( ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) ) )
                            	    // InternalUppaalXML.g:851:9: ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) )
                            	    {
                            	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2(), 1);
                            	    // InternalUppaalXML.g:854:12: ({...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING ) )
                            	    // InternalUppaalXML.g:854:13: {...}? => (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING )
                            	    {
                            	    if ( !((true)) ) {
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        throw new FailedPredicateException(input, "ruleLocation", "true");
                            	    }
                            	    // InternalUppaalXML.g:854:22: (otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING )
                            	    // InternalUppaalXML.g:854:23: otherlv_18= 'y' otherlv_19= '=' this_STRING_20= RULE_STRING
                            	    {
                            	    otherlv_18=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      												newLeafNode(otherlv_18, grammarAccess.getLocationAccess().getYKeyword_3_1_1_2_1_0());
                            	      											
                            	    }
                            	    otherlv_19=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      												newLeafNode(otherlv_19, grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_1_2_1_1());
                            	      											
                            	    }
                            	    this_STRING_20=(Token)match(input,RULE_STRING,FOLLOW_17); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      												newLeafNode(this_STRING_20, grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_1_2_1_2());
                            	      											
                            	    }

                            	    }


                            	    }

                            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2());

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop16;
                                }
                            } while (true);


                            }


                            }

                            getUnorderedGroupHelper().leave(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_1_2());

                            }

                            otherlv_21=(Token)match(input,16,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_21, grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_1_3());
                              					
                            }
                            // InternalUppaalXML.g:883:6: ( (lv_name_22_0= RULE_ID ) )
                            // InternalUppaalXML.g:884:7: (lv_name_22_0= RULE_ID )
                            {
                            // InternalUppaalXML.g:884:7: (lv_name_22_0= RULE_ID )
                            // InternalUppaalXML.g:885:8: lv_name_22_0= RULE_ID
                            {
                            lv_name_22_0=(Token)match(input,RULE_ID,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_22_0, grammarAccess.getLocationAccess().getNameIDTerminalRuleCall_3_1_1_4_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getLocationRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"name",
                              									lv_name_22_0,
                              									"org.muml.uppaal.UppaalXML.ID");
                              							
                            }

                            }


                            }

                            otherlv_23=(Token)match(input,18,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_1_5());
                              					
                            }
                            otherlv_24=(Token)match(input,23,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_24, grammarAccess.getLocationAccess().getNameKeyword_3_1_1_6());
                              					
                            }
                            otherlv_25=(Token)match(input,16,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_25, grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_1_7());
                              					
                            }

                            }
                            break;

                    }

                    // InternalUppaalXML.g:914:5: ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) ) )
                    // InternalUppaalXML.g:915:6: ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) )
                    {
                    // InternalUppaalXML.g:915:6: ( ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* ) )
                    // InternalUppaalXML.g:916:7: ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2());
                    // InternalUppaalXML.g:919:7: ( ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )* )
                    // InternalUppaalXML.g:920:8: ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )*
                    {
                    // InternalUppaalXML.g:920:8: ( ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) ) )*
                    loop20:
                    do {
                        int alt20=3;
                        int LA20_0 = input.LA(1);

                        if ( LA20_0 == 14 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 0) ) ) {
                            int LA20_2 = input.LA(2);

                            if ( LA20_2 == 35 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 0) ) ) {
                                int LA20_3 = input.LA(3);

                                if ( LA20_3 == 36 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 0) ) ) {
                                    int LA20_4 = input.LA(4);

                                    if ( LA20_4 == 25 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 0) ) ) {
                                        int LA20_5 = input.LA(5);

                                        if ( LA20_5 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 1) ) {
                                            alt20=2;
                                        }
                                        else if ( LA20_5 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 0) ) {
                                            alt20=1;
                                        }


                                    }


                                }


                            }


                        }


                        switch (alt20) {
                    	case 1 :
                    	    // InternalUppaalXML.g:921:6: ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) )
                    	    {
                    	    // InternalUppaalXML.g:921:6: ({...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) ) )
                    	    // InternalUppaalXML.g:922:7: {...}? => ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 0)");
                    	    }
                    	    // InternalUppaalXML.g:922:111: ( ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) ) )
                    	    // InternalUppaalXML.g:923:8: ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 0);
                    	    // InternalUppaalXML.g:926:11: ({...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' ) )
                    	    // InternalUppaalXML.g:926:12: {...}? => (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleLocation", "true");
                    	    }
                    	    // InternalUppaalXML.g:926:21: (otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>' )
                    	    // InternalUppaalXML.g:926:22: otherlv_27= '<' otherlv_28= 'label' otherlv_29= 'kind' otherlv_30= '=' otherlv_31= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) ) otherlv_42= '>' ( (lv_comment_43_0= ruleCommentLabel ) ) otherlv_44= '</' otherlv_45= 'label' otherlv_46= '>'
                    	    {
                    	    otherlv_27=(Token)match(input,14,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_27, grammarAccess.getLocationAccess().getLessThanSignKeyword_3_1_2_0_0());
                    	      										
                    	    }
                    	    otherlv_28=(Token)match(input,35,FOLLOW_33); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_28, grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_0_1());
                    	      										
                    	    }
                    	    otherlv_29=(Token)match(input,36,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_29, grammarAccess.getLocationAccess().getKindKeyword_3_1_2_0_2());
                    	      										
                    	    }
                    	    otherlv_30=(Token)match(input,25,FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_30, grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_3());
                    	      										
                    	    }
                    	    otherlv_31=(Token)match(input,37,FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_31, grammarAccess.getLocationAccess().getCommentsKeyword_3_1_2_0_4());
                    	      										
                    	    }
                    	    // InternalUppaalXML.g:946:11: ( ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) ) )
                    	    // InternalUppaalXML.g:947:12: ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) )
                    	    {
                    	    // InternalUppaalXML.g:947:12: ( ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* ) )
                    	    // InternalUppaalXML.g:948:13: ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* )
                    	    {
                    	    getUnorderedGroupHelper().enter(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5());
                    	    // InternalUppaalXML.g:951:13: ( ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )* )
                    	    // InternalUppaalXML.g:952:14: ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )*
                    	    {
                    	    // InternalUppaalXML.g:952:14: ( ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) ) )*
                    	    loop18:
                    	    do {
                    	        int alt18=4;
                    	        int LA18_0 = input.LA(1);

                    	        if ( LA18_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 0) ) {
                    	            alt18=1;
                    	        }
                    	        else if ( LA18_0 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 1) ) {
                    	            alt18=2;
                    	        }
                    	        else if ( LA18_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 2) ) {
                    	            alt18=3;
                    	        }


                    	        switch (alt18) {
                    	    	case 1 :
                    	    	    // InternalUppaalXML.g:953:12: ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) )
                    	    	    {
                    	    	    // InternalUppaalXML.g:953:12: ({...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) ) )
                    	    	    // InternalUppaalXML.g:954:13: {...}? => ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) )
                    	    	    {
                    	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 0) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 0)");
                    	    	    }
                    	    	    // InternalUppaalXML.g:954:121: ( ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) ) )
                    	    	    // InternalUppaalXML.g:955:14: ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) )
                    	    	    {
                    	    	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 0);
                    	    	    // InternalUppaalXML.g:958:17: ({...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING ) )
                    	    	    // InternalUppaalXML.g:958:18: {...}? => (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING )
                    	    	    {
                    	    	    if ( !((true)) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "true");
                    	    	    }
                    	    	    // InternalUppaalXML.g:958:27: (otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING )
                    	    	    // InternalUppaalXML.g:958:28: otherlv_33= 'x' otherlv_34= '=' this_STRING_35= RULE_STRING
                    	    	    {
                    	    	    otherlv_33=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_33, grammarAccess.getLocationAccess().getXKeyword_3_1_2_0_5_0_0());
                    	    	      																
                    	    	    }
                    	    	    otherlv_34=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_34, grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_5_0_1());
                    	    	      																
                    	    	    }
                    	    	    this_STRING_35=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(this_STRING_35, grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_0_5_0_2());
                    	    	      																
                    	    	    }

                    	    	    }


                    	    	    }

                    	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5());

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;
                    	    	case 2 :
                    	    	    // InternalUppaalXML.g:976:12: ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) )
                    	    	    {
                    	    	    // InternalUppaalXML.g:976:12: ({...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) ) )
                    	    	    // InternalUppaalXML.g:977:13: {...}? => ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) )
                    	    	    {
                    	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 1) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 1)");
                    	    	    }
                    	    	    // InternalUppaalXML.g:977:121: ( ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) ) )
                    	    	    // InternalUppaalXML.g:978:14: ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) )
                    	    	    {
                    	    	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 1);
                    	    	    // InternalUppaalXML.g:981:17: ({...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING ) )
                    	    	    // InternalUppaalXML.g:981:18: {...}? => (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING )
                    	    	    {
                    	    	    if ( !((true)) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "true");
                    	    	    }
                    	    	    // InternalUppaalXML.g:981:27: (otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING )
                    	    	    // InternalUppaalXML.g:981:28: otherlv_36= 'y' otherlv_37= '=' this_STRING_38= RULE_STRING
                    	    	    {
                    	    	    otherlv_36=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_36, grammarAccess.getLocationAccess().getYKeyword_3_1_2_0_5_1_0());
                    	    	      																
                    	    	    }
                    	    	    otherlv_37=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_37, grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_5_1_1());
                    	    	      																
                    	    	    }
                    	    	    this_STRING_38=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(this_STRING_38, grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_0_5_1_2());
                    	    	      																
                    	    	    }

                    	    	    }


                    	    	    }

                    	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5());

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;
                    	    	case 3 :
                    	    	    // InternalUppaalXML.g:999:12: ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) )
                    	    	    {
                    	    	    // InternalUppaalXML.g:999:12: ({...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) ) )
                    	    	    // InternalUppaalXML.g:1000:13: {...}? => ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) )
                    	    	    {
                    	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 2) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 2)");
                    	    	    }
                    	    	    // InternalUppaalXML.g:1000:121: ( ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) ) )
                    	    	    // InternalUppaalXML.g:1001:14: ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) )
                    	    	    {
                    	    	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5(), 2);
                    	    	    // InternalUppaalXML.g:1004:17: ({...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING ) )
                    	    	    // InternalUppaalXML.g:1004:18: {...}? => (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING )
                    	    	    {
                    	    	    if ( !((true)) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "true");
                    	    	    }
                    	    	    // InternalUppaalXML.g:1004:27: (otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING )
                    	    	    // InternalUppaalXML.g:1004:28: otherlv_39= 'color' otherlv_40= '=' this_STRING_41= RULE_STRING
                    	    	    {
                    	    	    otherlv_39=(Token)match(input,34,FOLLOW_18); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_39, grammarAccess.getLocationAccess().getColorKeyword_3_1_2_0_5_2_0());
                    	    	      																
                    	    	    }
                    	    	    otherlv_40=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_40, grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_0_5_2_1());
                    	    	      																
                    	    	    }
                    	    	    this_STRING_41=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(this_STRING_41, grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_0_5_2_2());
                    	    	      																
                    	    	    }

                    	    	    }


                    	    	    }

                    	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5());

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop18;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().leave(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_0_5());

                    	    }

                    	    otherlv_42=(Token)match(input,16,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_42, grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_0_6());
                    	      										
                    	    }
                    	    // InternalUppaalXML.g:1033:11: ( (lv_comment_43_0= ruleCommentLabel ) )
                    	    // InternalUppaalXML.g:1034:12: (lv_comment_43_0= ruleCommentLabel )
                    	    {
                    	    // InternalUppaalXML.g:1034:12: (lv_comment_43_0= ruleCommentLabel )
                    	    // InternalUppaalXML.g:1035:13: lv_comment_43_0= ruleCommentLabel
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      													newCompositeNode(grammarAccess.getLocationAccess().getCommentCommentLabelParserRuleCall_3_1_2_0_7_0());
                    	      												
                    	    }
                    	    pushFollow(FOLLOW_11);
                    	    lv_comment_43_0=ruleCommentLabel();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      													if (current==null) {
                    	      														current = createModelElementForParent(grammarAccess.getLocationRule());
                    	      													}
                    	      													set(
                    	      														current,
                    	      														"comment",
                    	      														lv_comment_43_0,
                    	      														"org.muml.uppaal.UppaalXML.CommentLabel");
                    	      													afterParserOrEnumRuleCall();
                    	      												
                    	    }

                    	    }


                    	    }

                    	    otherlv_44=(Token)match(input,18,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_44, grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_2_0_8());
                    	      										
                    	    }
                    	    otherlv_45=(Token)match(input,35,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_45, grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_0_9());
                    	      										
                    	    }
                    	    otherlv_46=(Token)match(input,16,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_46, grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_0_10());
                    	      										
                    	    }

                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalUppaalXML.g:1070:6: ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) )
                    	    {
                    	    // InternalUppaalXML.g:1070:6: ({...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) ) )
                    	    // InternalUppaalXML.g:1071:7: {...}? => ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 1)");
                    	    }
                    	    // InternalUppaalXML.g:1071:111: ( ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) ) )
                    	    // InternalUppaalXML.g:1072:8: ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2(), 1);
                    	    // InternalUppaalXML.g:1075:11: ({...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' ) )
                    	    // InternalUppaalXML.g:1075:12: {...}? => (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleLocation", "true");
                    	    }
                    	    // InternalUppaalXML.g:1075:21: (otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>' )
                    	    // InternalUppaalXML.g:1075:22: otherlv_47= '<' otherlv_48= 'label' otherlv_49= 'kind' otherlv_50= '=' otherlv_51= '\"invariant\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) ) otherlv_62= '>' ( (lv_invariant_63_0= ruleExpression ) ) otherlv_64= '</' otherlv_65= 'label' otherlv_66= '>'
                    	    {
                    	    otherlv_47=(Token)match(input,14,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_47, grammarAccess.getLocationAccess().getLessThanSignKeyword_3_1_2_1_0());
                    	      										
                    	    }
                    	    otherlv_48=(Token)match(input,35,FOLLOW_33); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_48, grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_1_1());
                    	      										
                    	    }
                    	    otherlv_49=(Token)match(input,36,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_49, grammarAccess.getLocationAccess().getKindKeyword_3_1_2_1_2());
                    	      										
                    	    }
                    	    otherlv_50=(Token)match(input,25,FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_50, grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_3());
                    	      										
                    	    }
                    	    otherlv_51=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_51, grammarAccess.getLocationAccess().getInvariantKeyword_3_1_2_1_4());
                    	      										
                    	    }
                    	    // InternalUppaalXML.g:1095:11: ( ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) ) )
                    	    // InternalUppaalXML.g:1096:12: ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) )
                    	    {
                    	    // InternalUppaalXML.g:1096:12: ( ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* ) )
                    	    // InternalUppaalXML.g:1097:13: ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* )
                    	    {
                    	    getUnorderedGroupHelper().enter(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5());
                    	    // InternalUppaalXML.g:1100:13: ( ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )* )
                    	    // InternalUppaalXML.g:1101:14: ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )*
                    	    {
                    	    // InternalUppaalXML.g:1101:14: ( ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) ) )*
                    	    loop19:
                    	    do {
                    	        int alt19=4;
                    	        int LA19_0 = input.LA(1);

                    	        if ( LA19_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 0) ) {
                    	            alt19=1;
                    	        }
                    	        else if ( LA19_0 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 1) ) {
                    	            alt19=2;
                    	        }
                    	        else if ( LA19_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 2) ) {
                    	            alt19=3;
                    	        }


                    	        switch (alt19) {
                    	    	case 1 :
                    	    	    // InternalUppaalXML.g:1102:12: ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) )
                    	    	    {
                    	    	    // InternalUppaalXML.g:1102:12: ({...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) ) )
                    	    	    // InternalUppaalXML.g:1103:13: {...}? => ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) )
                    	    	    {
                    	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 0) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 0)");
                    	    	    }
                    	    	    // InternalUppaalXML.g:1103:121: ( ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) ) )
                    	    	    // InternalUppaalXML.g:1104:14: ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) )
                    	    	    {
                    	    	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 0);
                    	    	    // InternalUppaalXML.g:1107:17: ({...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING ) )
                    	    	    // InternalUppaalXML.g:1107:18: {...}? => (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING )
                    	    	    {
                    	    	    if ( !((true)) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "true");
                    	    	    }
                    	    	    // InternalUppaalXML.g:1107:27: (otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING )
                    	    	    // InternalUppaalXML.g:1107:28: otherlv_53= 'x' otherlv_54= '=' this_STRING_55= RULE_STRING
                    	    	    {
                    	    	    otherlv_53=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_53, grammarAccess.getLocationAccess().getXKeyword_3_1_2_1_5_0_0());
                    	    	      																
                    	    	    }
                    	    	    otherlv_54=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_54, grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_5_0_1());
                    	    	      																
                    	    	    }
                    	    	    this_STRING_55=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(this_STRING_55, grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_1_5_0_2());
                    	    	      																
                    	    	    }

                    	    	    }


                    	    	    }

                    	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5());

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;
                    	    	case 2 :
                    	    	    // InternalUppaalXML.g:1125:12: ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) )
                    	    	    {
                    	    	    // InternalUppaalXML.g:1125:12: ({...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) ) )
                    	    	    // InternalUppaalXML.g:1126:13: {...}? => ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) )
                    	    	    {
                    	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 1) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 1)");
                    	    	    }
                    	    	    // InternalUppaalXML.g:1126:121: ( ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) ) )
                    	    	    // InternalUppaalXML.g:1127:14: ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) )
                    	    	    {
                    	    	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 1);
                    	    	    // InternalUppaalXML.g:1130:17: ({...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING ) )
                    	    	    // InternalUppaalXML.g:1130:18: {...}? => (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING )
                    	    	    {
                    	    	    if ( !((true)) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "true");
                    	    	    }
                    	    	    // InternalUppaalXML.g:1130:27: (otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING )
                    	    	    // InternalUppaalXML.g:1130:28: otherlv_56= 'y' otherlv_57= '=' this_STRING_58= RULE_STRING
                    	    	    {
                    	    	    otherlv_56=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_56, grammarAccess.getLocationAccess().getYKeyword_3_1_2_1_5_1_0());
                    	    	      																
                    	    	    }
                    	    	    otherlv_57=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_57, grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_5_1_1());
                    	    	      																
                    	    	    }
                    	    	    this_STRING_58=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(this_STRING_58, grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_1_5_1_2());
                    	    	      																
                    	    	    }

                    	    	    }


                    	    	    }

                    	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5());

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;
                    	    	case 3 :
                    	    	    // InternalUppaalXML.g:1148:12: ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) )
                    	    	    {
                    	    	    // InternalUppaalXML.g:1148:12: ({...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) ) )
                    	    	    // InternalUppaalXML.g:1149:13: {...}? => ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) )
                    	    	    {
                    	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 2) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "getUnorderedGroupHelper().canSelect(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 2)");
                    	    	    }
                    	    	    // InternalUppaalXML.g:1149:121: ( ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) ) )
                    	    	    // InternalUppaalXML.g:1150:14: ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) )
                    	    	    {
                    	    	    getUnorderedGroupHelper().select(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5(), 2);
                    	    	    // InternalUppaalXML.g:1153:17: ({...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING ) )
                    	    	    // InternalUppaalXML.g:1153:18: {...}? => (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING )
                    	    	    {
                    	    	    if ( !((true)) ) {
                    	    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	    	        throw new FailedPredicateException(input, "ruleLocation", "true");
                    	    	    }
                    	    	    // InternalUppaalXML.g:1153:27: (otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING )
                    	    	    // InternalUppaalXML.g:1153:28: otherlv_59= 'color' otherlv_60= '=' this_STRING_61= RULE_STRING
                    	    	    {
                    	    	    otherlv_59=(Token)match(input,34,FOLLOW_18); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_59, grammarAccess.getLocationAccess().getColorKeyword_3_1_2_1_5_2_0());
                    	    	      																
                    	    	    }
                    	    	    otherlv_60=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(otherlv_60, grammarAccess.getLocationAccess().getEqualsSignKeyword_3_1_2_1_5_2_1());
                    	    	      																
                    	    	    }
                    	    	    this_STRING_61=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      																	newLeafNode(this_STRING_61, grammarAccess.getLocationAccess().getSTRINGTerminalRuleCall_3_1_2_1_5_2_2());
                    	    	      																
                    	    	    }

                    	    	    }


                    	    	    }

                    	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5());

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop19;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().leave(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2_1_5());

                    	    }

                    	    otherlv_62=(Token)match(input,16,FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_62, grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_1_6());
                    	      										
                    	    }
                    	    // InternalUppaalXML.g:1182:11: ( (lv_invariant_63_0= ruleExpression ) )
                    	    // InternalUppaalXML.g:1183:12: (lv_invariant_63_0= ruleExpression )
                    	    {
                    	    // InternalUppaalXML.g:1183:12: (lv_invariant_63_0= ruleExpression )
                    	    // InternalUppaalXML.g:1184:13: lv_invariant_63_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      													newCompositeNode(grammarAccess.getLocationAccess().getInvariantExpressionParserRuleCall_3_1_2_1_7_0());
                    	      												
                    	    }
                    	    pushFollow(FOLLOW_11);
                    	    lv_invariant_63_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      													if (current==null) {
                    	      														current = createModelElementForParent(grammarAccess.getLocationRule());
                    	      													}
                    	      													set(
                    	      														current,
                    	      														"invariant",
                    	      														lv_invariant_63_0,
                    	      														"org.muml.uppaal.UppaalXML.Expression");
                    	      													afterParserOrEnumRuleCall();
                    	      												
                    	    }

                    	    }


                    	    }

                    	    otherlv_64=(Token)match(input,18,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_64, grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_2_1_8());
                    	      										
                    	    }
                    	    otherlv_65=(Token)match(input,35,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_65, grammarAccess.getLocationAccess().getLabelKeyword_3_1_2_1_9());
                    	      										
                    	    }
                    	    otherlv_66=(Token)match(input,16,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(otherlv_66, grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_2_1_10());
                    	      										
                    	    }

                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop20;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getLocationAccess().getUnorderedGroup_3_1_2());

                    }

                    // InternalUppaalXML.g:1226:5: ( (lv_locationTimeKind_67_0= ruleLocationKind ) )?
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( ((LA21_0>=136 && LA21_0<=137)) ) {
                        alt21=1;
                    }
                    switch (alt21) {
                        case 1 :
                            // InternalUppaalXML.g:1227:6: (lv_locationTimeKind_67_0= ruleLocationKind )
                            {
                            // InternalUppaalXML.g:1227:6: (lv_locationTimeKind_67_0= ruleLocationKind )
                            // InternalUppaalXML.g:1228:7: lv_locationTimeKind_67_0= ruleLocationKind
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getLocationAccess().getLocationTimeKindLocationKindEnumRuleCall_3_1_3_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_locationTimeKind_67_0=ruleLocationKind();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getLocationRule());
                              							}
                              							set(
                              								current,
                              								"locationTimeKind",
                              								lv_locationTimeKind_67_0,
                              								"org.muml.uppaal.UppaalXML.LocationKind");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_68=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_68, grammarAccess.getLocationAccess().getLessThanSignSolidusKeyword_3_1_4());
                      				
                    }
                    otherlv_69=(Token)match(input,32,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_69, grammarAccess.getLocationAccess().getLocationKeyword_3_1_5());
                      				
                    }
                    otherlv_70=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_70, grammarAccess.getLocationAccess().getGreaterThanSignKeyword_3_1_6());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleLocation"


    // $ANTLR start "entryRuleEdge"
    // InternalUppaalXML.g:1266:1: entryRuleEdge returns [EObject current=null] : iv_ruleEdge= ruleEdge EOF ;
    public final EObject entryRuleEdge() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEdge = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalUppaalXML.g:1268:2: (iv_ruleEdge= ruleEdge EOF )
            // InternalUppaalXML.g:1269:2: iv_ruleEdge= ruleEdge EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEdgeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEdge=ruleEdge();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEdge; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleEdge"


    // $ANTLR start "ruleEdge"
    // InternalUppaalXML.g:1278:1: ruleEdge returns [EObject current=null] : (otherlv_0= '<' otherlv_1= 'transition' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )* ) ) ) otherlv_12= '>' otherlv_13= '<' otherlv_14= 'source' otherlv_15= 'ref' otherlv_16= '=' ( (otherlv_17= RULE_STRING ) ) otherlv_18= '/>' otherlv_19= '<' otherlv_20= 'target' otherlv_21= 'ref' otherlv_22= '=' ( (otherlv_23= RULE_STRING ) ) otherlv_24= '/>' ( ( ( ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )* ) ) ) (otherlv_130= '<' otherlv_131= 'nail' ( (lv_bendPoint_132_0= rulePoint ) ) otherlv_133= '/>' )* otherlv_134= '</' otherlv_135= 'transition' otherlv_136= '>' ) ;
    public final EObject ruleEdge() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token this_STRING_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token this_STRING_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_colorCode_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token this_STRING_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token this_STRING_37=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token this_STRING_40=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token this_STRING_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token this_STRING_57=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token this_STRING_60=null;
        Token otherlv_61=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token this_STRING_74=null;
        Token otherlv_75=null;
        Token otherlv_76=null;
        Token this_STRING_77=null;
        Token otherlv_78=null;
        Token otherlv_79=null;
        Token this_STRING_80=null;
        Token otherlv_81=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token otherlv_87=null;
        Token otherlv_88=null;
        Token otherlv_89=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token this_STRING_94=null;
        Token otherlv_95=null;
        Token otherlv_96=null;
        Token this_STRING_97=null;
        Token otherlv_98=null;
        Token otherlv_99=null;
        Token this_STRING_100=null;
        Token otherlv_101=null;
        Token otherlv_103=null;
        Token otherlv_105=null;
        Token otherlv_106=null;
        Token otherlv_107=null;
        Token otherlv_108=null;
        Token otherlv_109=null;
        Token otherlv_110=null;
        Token otherlv_111=null;
        Token otherlv_112=null;
        Token otherlv_114=null;
        Token otherlv_115=null;
        Token this_STRING_116=null;
        Token otherlv_117=null;
        Token otherlv_118=null;
        Token this_STRING_119=null;
        Token otherlv_120=null;
        Token otherlv_121=null;
        Token this_STRING_122=null;
        Token otherlv_123=null;
        Token otherlv_125=null;
        Token otherlv_127=null;
        Token otherlv_128=null;
        Token otherlv_129=null;
        Token otherlv_130=null;
        Token otherlv_131=null;
        Token otherlv_133=null;
        Token otherlv_134=null;
        Token otherlv_135=null;
        Token otherlv_136=null;
        AntlrDatatypeRuleToken lv_comment_42_0 = null;

        EObject lv_synchronization_62_0 = null;

        EObject lv_guard_82_0 = null;

        EObject lv_update_102_0 = null;

        EObject lv_update_104_0 = null;

        EObject lv_selection_124_0 = null;

        EObject lv_selection_126_0 = null;

        EObject lv_bendPoint_132_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalUppaalXML.g:1285:2: ( (otherlv_0= '<' otherlv_1= 'transition' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )* ) ) ) otherlv_12= '>' otherlv_13= '<' otherlv_14= 'source' otherlv_15= 'ref' otherlv_16= '=' ( (otherlv_17= RULE_STRING ) ) otherlv_18= '/>' otherlv_19= '<' otherlv_20= 'target' otherlv_21= 'ref' otherlv_22= '=' ( (otherlv_23= RULE_STRING ) ) otherlv_24= '/>' ( ( ( ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )* ) ) ) (otherlv_130= '<' otherlv_131= 'nail' ( (lv_bendPoint_132_0= rulePoint ) ) otherlv_133= '/>' )* otherlv_134= '</' otherlv_135= 'transition' otherlv_136= '>' ) )
            // InternalUppaalXML.g:1286:2: (otherlv_0= '<' otherlv_1= 'transition' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )* ) ) ) otherlv_12= '>' otherlv_13= '<' otherlv_14= 'source' otherlv_15= 'ref' otherlv_16= '=' ( (otherlv_17= RULE_STRING ) ) otherlv_18= '/>' otherlv_19= '<' otherlv_20= 'target' otherlv_21= 'ref' otherlv_22= '=' ( (otherlv_23= RULE_STRING ) ) otherlv_24= '/>' ( ( ( ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )* ) ) ) (otherlv_130= '<' otherlv_131= 'nail' ( (lv_bendPoint_132_0= rulePoint ) ) otherlv_133= '/>' )* otherlv_134= '</' otherlv_135= 'transition' otherlv_136= '>' )
            {
            // InternalUppaalXML.g:1286:2: (otherlv_0= '<' otherlv_1= 'transition' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )* ) ) ) otherlv_12= '>' otherlv_13= '<' otherlv_14= 'source' otherlv_15= 'ref' otherlv_16= '=' ( (otherlv_17= RULE_STRING ) ) otherlv_18= '/>' otherlv_19= '<' otherlv_20= 'target' otherlv_21= 'ref' otherlv_22= '=' ( (otherlv_23= RULE_STRING ) ) otherlv_24= '/>' ( ( ( ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )* ) ) ) (otherlv_130= '<' otherlv_131= 'nail' ( (lv_bendPoint_132_0= rulePoint ) ) otherlv_133= '/>' )* otherlv_134= '</' otherlv_135= 'transition' otherlv_136= '>' )
            // InternalUppaalXML.g:1287:3: otherlv_0= '<' otherlv_1= 'transition' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )* ) ) ) otherlv_12= '>' otherlv_13= '<' otherlv_14= 'source' otherlv_15= 'ref' otherlv_16= '=' ( (otherlv_17= RULE_STRING ) ) otherlv_18= '/>' otherlv_19= '<' otherlv_20= 'target' otherlv_21= 'ref' otherlv_22= '=' ( (otherlv_23= RULE_STRING ) ) otherlv_24= '/>' ( ( ( ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )* ) ) ) (otherlv_130= '<' otherlv_131= 'nail' ( (lv_bendPoint_132_0= rulePoint ) ) otherlv_133= '/>' )* otherlv_134= '</' otherlv_135= 'transition' otherlv_136= '>'
            {
            otherlv_0=(Token)match(input,14,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEdgeAccess().getLessThanSignKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,39,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEdgeAccess().getTransitionKeyword_1());
              		
            }
            // InternalUppaalXML.g:1295:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )* ) ) )
            // InternalUppaalXML.g:1296:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )* ) )
            {
            // InternalUppaalXML.g:1296:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )* ) )
            // InternalUppaalXML.g:1297:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_2());
            // InternalUppaalXML.g:1300:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )* )
            // InternalUppaalXML.g:1301:6: ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )*
            {
            // InternalUppaalXML.g:1301:6: ( ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) ) )*
            loop23:
            do {
                int alt23=4;
                int LA23_0 = input.LA(1);

                if ( LA23_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 0) ) {
                    alt23=1;
                }
                else if ( LA23_0 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 1) ) {
                    alt23=2;
                }
                else if ( LA23_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 2) ) {
                    alt23=3;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalUppaalXML.g:1302:4: ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) )
            	    {
            	    // InternalUppaalXML.g:1302:4: ({...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) ) )
            	    // InternalUppaalXML.g:1303:5: {...}? => ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalUppaalXML.g:1303:101: ( ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) ) )
            	    // InternalUppaalXML.g:1304:6: ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 0);
            	    // InternalUppaalXML.g:1307:9: ({...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING ) )
            	    // InternalUppaalXML.g:1307:10: {...}? => (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    }
            	    // InternalUppaalXML.g:1307:19: (otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING )
            	    // InternalUppaalXML.g:1307:20: otherlv_3= 'x' otherlv_4= '=' this_STRING_5= RULE_STRING
            	    {
            	    otherlv_3=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEdgeAccess().getXKeyword_2_0_0());
            	      								
            	    }
            	    otherlv_4=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getEdgeAccess().getEqualsSignKeyword_2_0_1());
            	      								
            	    }
            	    this_STRING_5=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_STRING_5, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_2_0_2());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalUppaalXML.g:1325:4: ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) )
            	    {
            	    // InternalUppaalXML.g:1325:4: ({...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) ) )
            	    // InternalUppaalXML.g:1326:5: {...}? => ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalUppaalXML.g:1326:101: ( ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) ) )
            	    // InternalUppaalXML.g:1327:6: ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 1);
            	    // InternalUppaalXML.g:1330:9: ({...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING ) )
            	    // InternalUppaalXML.g:1330:10: {...}? => (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    }
            	    // InternalUppaalXML.g:1330:19: (otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING )
            	    // InternalUppaalXML.g:1330:20: otherlv_6= 'y' otherlv_7= '=' this_STRING_8= RULE_STRING
            	    {
            	    otherlv_6=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getEdgeAccess().getYKeyword_2_1_0());
            	      								
            	    }
            	    otherlv_7=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getEdgeAccess().getEqualsSignKeyword_2_1_1());
            	      								
            	    }
            	    this_STRING_8=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_STRING_8, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_2_1_2());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalUppaalXML.g:1348:4: ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // InternalUppaalXML.g:1348:4: ({...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) ) )
            	    // InternalUppaalXML.g:1349:5: {...}? => ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalUppaalXML.g:1349:101: ( ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) ) )
            	    // InternalUppaalXML.g:1350:6: ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_2(), 2);
            	    // InternalUppaalXML.g:1353:9: ({...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) ) )
            	    // InternalUppaalXML.g:1353:10: {...}? => (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    }
            	    // InternalUppaalXML.g:1353:19: (otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) ) )
            	    // InternalUppaalXML.g:1353:20: otherlv_9= 'color' otherlv_10= '=' ( (lv_colorCode_11_0= RULE_STRING ) )
            	    {
            	    otherlv_9=(Token)match(input,34,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getEdgeAccess().getColorKeyword_2_2_0());
            	      								
            	    }
            	    otherlv_10=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getEdgeAccess().getEqualsSignKeyword_2_2_1());
            	      								
            	    }
            	    // InternalUppaalXML.g:1361:9: ( (lv_colorCode_11_0= RULE_STRING ) )
            	    // InternalUppaalXML.g:1362:10: (lv_colorCode_11_0= RULE_STRING )
            	    {
            	    // InternalUppaalXML.g:1362:10: (lv_colorCode_11_0= RULE_STRING )
            	    // InternalUppaalXML.g:1363:11: lv_colorCode_11_0= RULE_STRING
            	    {
            	    lv_colorCode_11_0=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_colorCode_11_0, grammarAccess.getEdgeAccess().getColorCodeSTRINGTerminalRuleCall_2_2_2_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getEdgeRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"colorCode",
            	      												lv_colorCode_11_0,
            	      												"org.muml.uppaal.UppaalXML.STRING");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_2());

            }

            otherlv_12=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_3());
              		
            }
            otherlv_13=(Token)match(input,14,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getEdgeAccess().getLessThanSignKeyword_4());
              		
            }
            otherlv_14=(Token)match(input,40,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getEdgeAccess().getSourceKeyword_5());
              		
            }
            otherlv_15=(Token)match(input,30,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getEdgeAccess().getRefKeyword_6());
              		
            }
            otherlv_16=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getEdgeAccess().getEqualsSignKeyword_7());
              		
            }
            // InternalUppaalXML.g:1412:3: ( (otherlv_17= RULE_STRING ) )
            // InternalUppaalXML.g:1413:4: (otherlv_17= RULE_STRING )
            {
            // InternalUppaalXML.g:1413:4: (otherlv_17= RULE_STRING )
            // InternalUppaalXML.g:1414:5: otherlv_17= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEdgeRule());
              					}
              				
            }
            otherlv_17=(Token)match(input,RULE_STRING,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_17, grammarAccess.getEdgeAccess().getSourceLocationCrossReference_8_0());
              				
            }

            }


            }

            otherlv_18=(Token)match(input,31,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_18, grammarAccess.getEdgeAccess().getSolidusGreaterThanSignKeyword_9());
              		
            }
            otherlv_19=(Token)match(input,14,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_19, grammarAccess.getEdgeAccess().getLessThanSignKeyword_10());
              		
            }
            otherlv_20=(Token)match(input,41,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_20, grammarAccess.getEdgeAccess().getTargetKeyword_11());
              		
            }
            otherlv_21=(Token)match(input,30,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_21, grammarAccess.getEdgeAccess().getRefKeyword_12());
              		
            }
            otherlv_22=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_22, grammarAccess.getEdgeAccess().getEqualsSignKeyword_13());
              		
            }
            // InternalUppaalXML.g:1445:3: ( (otherlv_23= RULE_STRING ) )
            // InternalUppaalXML.g:1446:4: (otherlv_23= RULE_STRING )
            {
            // InternalUppaalXML.g:1446:4: (otherlv_23= RULE_STRING )
            // InternalUppaalXML.g:1447:5: otherlv_23= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEdgeRule());
              					}
              				
            }
            otherlv_23=(Token)match(input,RULE_STRING,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_23, grammarAccess.getEdgeAccess().getTargetLocationCrossReference_14_0());
              				
            }

            }


            }

            otherlv_24=(Token)match(input,31,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_24, grammarAccess.getEdgeAccess().getSolidusGreaterThanSignKeyword_15());
              		
            }
            // InternalUppaalXML.g:1462:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )* ) ) )
            // InternalUppaalXML.g:1463:4: ( ( ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )* ) )
            {
            // InternalUppaalXML.g:1463:4: ( ( ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )* ) )
            // InternalUppaalXML.g:1464:5: ( ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16());
            // InternalUppaalXML.g:1467:5: ( ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )* )
            // InternalUppaalXML.g:1468:6: ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )*
            {
            // InternalUppaalXML.g:1468:6: ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )*
            loop31:
            do {
                int alt31=6;
                alt31 = dfa31.predict(input);
                switch (alt31) {
            	case 1 :
            	    // InternalUppaalXML.g:1469:4: ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) )
            	    {
            	    // InternalUppaalXML.g:1469:4: ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) )
            	    // InternalUppaalXML.g:1470:5: {...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 0)");
            	    }
            	    // InternalUppaalXML.g:1470:102: ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) )
            	    // InternalUppaalXML.g:1471:6: ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 0);
            	    // InternalUppaalXML.g:1474:9: ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) )
            	    // InternalUppaalXML.g:1474:10: {...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    }
            	    // InternalUppaalXML.g:1474:19: (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' )
            	    // InternalUppaalXML.g:1474:20: otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>'
            	    {
            	    otherlv_26=(Token)match(input,14,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_26, grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_0_0());
            	      								
            	    }
            	    otherlv_27=(Token)match(input,35,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getEdgeAccess().getLabelKeyword_16_0_1());
            	      								
            	    }
            	    otherlv_28=(Token)match(input,36,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_28, grammarAccess.getEdgeAccess().getKindKeyword_16_0_2());
            	      								
            	    }
            	    otherlv_29=(Token)match(input,25,FOLLOW_34); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_29, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_3());
            	      								
            	    }
            	    otherlv_30=(Token)match(input,37,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_30, grammarAccess.getEdgeAccess().getCommentsKeyword_16_0_4());
            	      								
            	    }
            	    // InternalUppaalXML.g:1494:9: ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) )
            	    // InternalUppaalXML.g:1495:10: ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) )
            	    {
            	    // InternalUppaalXML.g:1495:10: ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) )
            	    // InternalUppaalXML.g:1496:11: ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* )
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5());
            	    // InternalUppaalXML.g:1499:11: ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* )
            	    // InternalUppaalXML.g:1500:12: ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )*
            	    {
            	    // InternalUppaalXML.g:1500:12: ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )*
            	    loop24:
            	    do {
            	        int alt24=4;
            	        int LA24_0 = input.LA(1);

            	        if ( LA24_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 0) ) {
            	            alt24=1;
            	        }
            	        else if ( LA24_0 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 1) ) {
            	            alt24=2;
            	        }
            	        else if ( LA24_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 2) ) {
            	            alt24=3;
            	        }


            	        switch (alt24) {
            	    	case 1 :
            	    	    // InternalUppaalXML.g:1501:10: ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1501:10: ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1502:11: {...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 0)");
            	    	    }
            	    	    // InternalUppaalXML.g:1502:112: ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1503:12: ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 0);
            	    	    // InternalUppaalXML.g:1506:15: ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1506:16: {...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1506:25: (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING )
            	    	    // InternalUppaalXML.g:1506:26: otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING
            	    	    {
            	    	    otherlv_32=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_32, grammarAccess.getEdgeAccess().getXKeyword_16_0_5_0_0());
            	    	      														
            	    	    }
            	    	    otherlv_33=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_33, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_5_0_1());
            	    	      														
            	    	    }
            	    	    this_STRING_34=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_34, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_0_5_0_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalUppaalXML.g:1524:10: ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1524:10: ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1525:11: {...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 1)");
            	    	    }
            	    	    // InternalUppaalXML.g:1525:112: ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1526:12: ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 1);
            	    	    // InternalUppaalXML.g:1529:15: ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1529:16: {...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1529:25: (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING )
            	    	    // InternalUppaalXML.g:1529:26: otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING
            	    	    {
            	    	    otherlv_35=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_35, grammarAccess.getEdgeAccess().getYKeyword_16_0_5_1_0());
            	    	      														
            	    	    }
            	    	    otherlv_36=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_36, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_5_1_1());
            	    	      														
            	    	    }
            	    	    this_STRING_37=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_37, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_0_5_1_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalUppaalXML.g:1547:10: ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1547:10: ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1548:11: {...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 2)");
            	    	    }
            	    	    // InternalUppaalXML.g:1548:112: ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1549:12: ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5(), 2);
            	    	    // InternalUppaalXML.g:1552:15: ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1552:16: {...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1552:25: (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING )
            	    	    // InternalUppaalXML.g:1552:26: otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING
            	    	    {
            	    	    otherlv_38=(Token)match(input,34,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_38, grammarAccess.getEdgeAccess().getColorKeyword_16_0_5_2_0());
            	    	      														
            	    	    }
            	    	    otherlv_39=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_39, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_0_5_2_1());
            	    	      														
            	    	    }
            	    	    this_STRING_40=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_40, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_0_5_2_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop24;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16_0_5());

            	    }

            	    otherlv_41=(Token)match(input,16,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_41, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_0_6());
            	      								
            	    }
            	    // InternalUppaalXML.g:1581:9: ( (lv_comment_42_0= ruleCommentLabel ) )
            	    // InternalUppaalXML.g:1582:10: (lv_comment_42_0= ruleCommentLabel )
            	    {
            	    // InternalUppaalXML.g:1582:10: (lv_comment_42_0= ruleCommentLabel )
            	    // InternalUppaalXML.g:1583:11: lv_comment_42_0= ruleCommentLabel
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEdgeAccess().getCommentCommentLabelParserRuleCall_16_0_7_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_comment_42_0=ruleCommentLabel();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEdgeRule());
            	      											}
            	      											set(
            	      												current,
            	      												"comment",
            	      												lv_comment_42_0,
            	      												"org.muml.uppaal.UppaalXML.CommentLabel");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_43=(Token)match(input,18,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_0_8());
            	      								
            	    }
            	    otherlv_44=(Token)match(input,35,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_44, grammarAccess.getEdgeAccess().getLabelKeyword_16_0_9());
            	      								
            	    }
            	    otherlv_45=(Token)match(input,16,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_45, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_0_10());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalUppaalXML.g:1618:4: ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) )
            	    {
            	    // InternalUppaalXML.g:1618:4: ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) )
            	    // InternalUppaalXML.g:1619:5: {...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 1)");
            	    }
            	    // InternalUppaalXML.g:1619:102: ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) )
            	    // InternalUppaalXML.g:1620:6: ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 1);
            	    // InternalUppaalXML.g:1623:9: ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) )
            	    // InternalUppaalXML.g:1623:10: {...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    }
            	    // InternalUppaalXML.g:1623:19: (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' )
            	    // InternalUppaalXML.g:1623:20: otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>'
            	    {
            	    otherlv_46=(Token)match(input,14,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_46, grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_1_0());
            	      								
            	    }
            	    otherlv_47=(Token)match(input,35,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_47, grammarAccess.getEdgeAccess().getLabelKeyword_16_1_1());
            	      								
            	    }
            	    otherlv_48=(Token)match(input,36,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getEdgeAccess().getKindKeyword_16_1_2());
            	      								
            	    }
            	    otherlv_49=(Token)match(input,25,FOLLOW_42); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_3());
            	      								
            	    }
            	    otherlv_50=(Token)match(input,42,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_50, grammarAccess.getEdgeAccess().getSynchronisationKeyword_16_1_4());
            	      								
            	    }
            	    // InternalUppaalXML.g:1643:9: ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) )
            	    // InternalUppaalXML.g:1644:10: ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) )
            	    {
            	    // InternalUppaalXML.g:1644:10: ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) )
            	    // InternalUppaalXML.g:1645:11: ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* )
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5());
            	    // InternalUppaalXML.g:1648:11: ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* )
            	    // InternalUppaalXML.g:1649:12: ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )*
            	    {
            	    // InternalUppaalXML.g:1649:12: ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )*
            	    loop25:
            	    do {
            	        int alt25=4;
            	        int LA25_0 = input.LA(1);

            	        if ( LA25_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 0) ) {
            	            alt25=1;
            	        }
            	        else if ( LA25_0 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 1) ) {
            	            alt25=2;
            	        }
            	        else if ( LA25_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 2) ) {
            	            alt25=3;
            	        }


            	        switch (alt25) {
            	    	case 1 :
            	    	    // InternalUppaalXML.g:1650:10: ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1650:10: ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1651:11: {...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 0)");
            	    	    }
            	    	    // InternalUppaalXML.g:1651:112: ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1652:12: ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 0);
            	    	    // InternalUppaalXML.g:1655:15: ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1655:16: {...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1655:25: (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING )
            	    	    // InternalUppaalXML.g:1655:26: otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING
            	    	    {
            	    	    otherlv_52=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_52, grammarAccess.getEdgeAccess().getXKeyword_16_1_5_0_0());
            	    	      														
            	    	    }
            	    	    otherlv_53=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_53, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_5_0_1());
            	    	      														
            	    	    }
            	    	    this_STRING_54=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_54, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_1_5_0_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalUppaalXML.g:1673:10: ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1673:10: ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1674:11: {...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 1)");
            	    	    }
            	    	    // InternalUppaalXML.g:1674:112: ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1675:12: ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 1);
            	    	    // InternalUppaalXML.g:1678:15: ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1678:16: {...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1678:25: (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING )
            	    	    // InternalUppaalXML.g:1678:26: otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING
            	    	    {
            	    	    otherlv_55=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_55, grammarAccess.getEdgeAccess().getYKeyword_16_1_5_1_0());
            	    	      														
            	    	    }
            	    	    otherlv_56=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_56, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_5_1_1());
            	    	      														
            	    	    }
            	    	    this_STRING_57=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_57, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_1_5_1_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalUppaalXML.g:1696:10: ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1696:10: ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1697:11: {...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 2)");
            	    	    }
            	    	    // InternalUppaalXML.g:1697:112: ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1698:12: ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5(), 2);
            	    	    // InternalUppaalXML.g:1701:15: ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1701:16: {...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1701:25: (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING )
            	    	    // InternalUppaalXML.g:1701:26: otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING
            	    	    {
            	    	    otherlv_58=(Token)match(input,34,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_58, grammarAccess.getEdgeAccess().getColorKeyword_16_1_5_2_0());
            	    	      														
            	    	    }
            	    	    otherlv_59=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_59, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_1_5_2_1());
            	    	      														
            	    	    }
            	    	    this_STRING_60=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_60, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_1_5_2_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop25;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16_1_5());

            	    }

            	    otherlv_61=(Token)match(input,16,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_61, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_1_6());
            	      								
            	    }
            	    // InternalUppaalXML.g:1730:9: ( (lv_synchronization_62_0= ruleSynchronizationLabel ) )
            	    // InternalUppaalXML.g:1731:10: (lv_synchronization_62_0= ruleSynchronizationLabel )
            	    {
            	    // InternalUppaalXML.g:1731:10: (lv_synchronization_62_0= ruleSynchronizationLabel )
            	    // InternalUppaalXML.g:1732:11: lv_synchronization_62_0= ruleSynchronizationLabel
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEdgeAccess().getSynchronizationSynchronizationLabelParserRuleCall_16_1_7_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_synchronization_62_0=ruleSynchronizationLabel();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEdgeRule());
            	      											}
            	      											set(
            	      												current,
            	      												"synchronization",
            	      												lv_synchronization_62_0,
            	      												"org.muml.uppaal.UppaalXML.SynchronizationLabel");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_63=(Token)match(input,18,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_63, grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_1_8());
            	      								
            	    }
            	    otherlv_64=(Token)match(input,35,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_64, grammarAccess.getEdgeAccess().getLabelKeyword_16_1_9());
            	      								
            	    }
            	    otherlv_65=(Token)match(input,16,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_65, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_1_10());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalUppaalXML.g:1767:4: ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) )
            	    {
            	    // InternalUppaalXML.g:1767:4: ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) )
            	    // InternalUppaalXML.g:1768:5: {...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 2)");
            	    }
            	    // InternalUppaalXML.g:1768:102: ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) )
            	    // InternalUppaalXML.g:1769:6: ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 2);
            	    // InternalUppaalXML.g:1772:9: ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) )
            	    // InternalUppaalXML.g:1772:10: {...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    }
            	    // InternalUppaalXML.g:1772:19: (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' )
            	    // InternalUppaalXML.g:1772:20: otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>'
            	    {
            	    otherlv_66=(Token)match(input,14,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_66, grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_2_0());
            	      								
            	    }
            	    otherlv_67=(Token)match(input,35,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_67, grammarAccess.getEdgeAccess().getLabelKeyword_16_2_1());
            	      								
            	    }
            	    otherlv_68=(Token)match(input,36,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_68, grammarAccess.getEdgeAccess().getKindKeyword_16_2_2());
            	      								
            	    }
            	    otherlv_69=(Token)match(input,25,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_69, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_3());
            	      								
            	    }
            	    otherlv_70=(Token)match(input,43,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_70, grammarAccess.getEdgeAccess().getGuardKeyword_16_2_4());
            	      								
            	    }
            	    // InternalUppaalXML.g:1792:9: ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) )
            	    // InternalUppaalXML.g:1793:10: ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) )
            	    {
            	    // InternalUppaalXML.g:1793:10: ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) )
            	    // InternalUppaalXML.g:1794:11: ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* )
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5());
            	    // InternalUppaalXML.g:1797:11: ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* )
            	    // InternalUppaalXML.g:1798:12: ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )*
            	    {
            	    // InternalUppaalXML.g:1798:12: ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )*
            	    loop26:
            	    do {
            	        int alt26=4;
            	        int LA26_0 = input.LA(1);

            	        if ( LA26_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 0) ) {
            	            alt26=1;
            	        }
            	        else if ( LA26_0 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 1) ) {
            	            alt26=2;
            	        }
            	        else if ( LA26_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 2) ) {
            	            alt26=3;
            	        }


            	        switch (alt26) {
            	    	case 1 :
            	    	    // InternalUppaalXML.g:1799:10: ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1799:10: ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1800:11: {...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 0)");
            	    	    }
            	    	    // InternalUppaalXML.g:1800:112: ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1801:12: ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 0);
            	    	    // InternalUppaalXML.g:1804:15: ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1804:16: {...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1804:25: (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING )
            	    	    // InternalUppaalXML.g:1804:26: otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING
            	    	    {
            	    	    otherlv_72=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_72, grammarAccess.getEdgeAccess().getXKeyword_16_2_5_0_0());
            	    	      														
            	    	    }
            	    	    otherlv_73=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_73, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_5_0_1());
            	    	      														
            	    	    }
            	    	    this_STRING_74=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_74, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_2_5_0_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalUppaalXML.g:1822:10: ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1822:10: ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1823:11: {...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 1)");
            	    	    }
            	    	    // InternalUppaalXML.g:1823:112: ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1824:12: ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 1);
            	    	    // InternalUppaalXML.g:1827:15: ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1827:16: {...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1827:25: (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING )
            	    	    // InternalUppaalXML.g:1827:26: otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING
            	    	    {
            	    	    otherlv_75=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_75, grammarAccess.getEdgeAccess().getYKeyword_16_2_5_1_0());
            	    	      														
            	    	    }
            	    	    otherlv_76=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_76, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_5_1_1());
            	    	      														
            	    	    }
            	    	    this_STRING_77=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_77, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_2_5_1_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalUppaalXML.g:1845:10: ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1845:10: ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1846:11: {...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 2)");
            	    	    }
            	    	    // InternalUppaalXML.g:1846:112: ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1847:12: ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5(), 2);
            	    	    // InternalUppaalXML.g:1850:15: ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1850:16: {...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1850:25: (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING )
            	    	    // InternalUppaalXML.g:1850:26: otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING
            	    	    {
            	    	    otherlv_78=(Token)match(input,34,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_78, grammarAccess.getEdgeAccess().getColorKeyword_16_2_5_2_0());
            	    	      														
            	    	    }
            	    	    otherlv_79=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_79, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_2_5_2_1());
            	    	      														
            	    	    }
            	    	    this_STRING_80=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_80, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_2_5_2_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop26;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16_2_5());

            	    }

            	    otherlv_81=(Token)match(input,16,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_81, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_2_6());
            	      								
            	    }
            	    // InternalUppaalXML.g:1879:9: ( (lv_guard_82_0= ruleExpression ) )
            	    // InternalUppaalXML.g:1880:10: (lv_guard_82_0= ruleExpression )
            	    {
            	    // InternalUppaalXML.g:1880:10: (lv_guard_82_0= ruleExpression )
            	    // InternalUppaalXML.g:1881:11: lv_guard_82_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEdgeAccess().getGuardExpressionParserRuleCall_16_2_7_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_guard_82_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEdgeRule());
            	      											}
            	      											set(
            	      												current,
            	      												"guard",
            	      												lv_guard_82_0,
            	      												"org.muml.uppaal.UppaalXML.Expression");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_83=(Token)match(input,18,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_83, grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_2_8());
            	      								
            	    }
            	    otherlv_84=(Token)match(input,35,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_84, grammarAccess.getEdgeAccess().getLabelKeyword_16_2_9());
            	      								
            	    }
            	    otherlv_85=(Token)match(input,16,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_85, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_2_10());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalUppaalXML.g:1916:4: ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) )
            	    {
            	    // InternalUppaalXML.g:1916:4: ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) )
            	    // InternalUppaalXML.g:1917:5: {...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 3)");
            	    }
            	    // InternalUppaalXML.g:1917:102: ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) )
            	    // InternalUppaalXML.g:1918:6: ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 3);
            	    // InternalUppaalXML.g:1921:9: ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) )
            	    // InternalUppaalXML.g:1921:10: {...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    }
            	    // InternalUppaalXML.g:1921:19: (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' )
            	    // InternalUppaalXML.g:1921:20: otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>'
            	    {
            	    otherlv_86=(Token)match(input,14,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_3_0());
            	      								
            	    }
            	    otherlv_87=(Token)match(input,35,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_87, grammarAccess.getEdgeAccess().getLabelKeyword_16_3_1());
            	      								
            	    }
            	    otherlv_88=(Token)match(input,36,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_88, grammarAccess.getEdgeAccess().getKindKeyword_16_3_2());
            	      								
            	    }
            	    otherlv_89=(Token)match(input,25,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_89, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_3());
            	      								
            	    }
            	    otherlv_90=(Token)match(input,44,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_90, grammarAccess.getEdgeAccess().getAssignmentKeyword_16_3_4());
            	      								
            	    }
            	    // InternalUppaalXML.g:1941:9: ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) )
            	    // InternalUppaalXML.g:1942:10: ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) )
            	    {
            	    // InternalUppaalXML.g:1942:10: ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) )
            	    // InternalUppaalXML.g:1943:11: ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* )
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5());
            	    // InternalUppaalXML.g:1946:11: ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* )
            	    // InternalUppaalXML.g:1947:12: ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )*
            	    {
            	    // InternalUppaalXML.g:1947:12: ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )*
            	    loop27:
            	    do {
            	        int alt27=4;
            	        int LA27_0 = input.LA(1);

            	        if ( LA27_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 0) ) {
            	            alt27=1;
            	        }
            	        else if ( LA27_0 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 1) ) {
            	            alt27=2;
            	        }
            	        else if ( LA27_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 2) ) {
            	            alt27=3;
            	        }


            	        switch (alt27) {
            	    	case 1 :
            	    	    // InternalUppaalXML.g:1948:10: ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1948:10: ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1949:11: {...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 0)");
            	    	    }
            	    	    // InternalUppaalXML.g:1949:112: ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1950:12: ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 0);
            	    	    // InternalUppaalXML.g:1953:15: ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1953:16: {...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1953:25: (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING )
            	    	    // InternalUppaalXML.g:1953:26: otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING
            	    	    {
            	    	    otherlv_92=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_92, grammarAccess.getEdgeAccess().getXKeyword_16_3_5_0_0());
            	    	      														
            	    	    }
            	    	    otherlv_93=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_93, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_5_0_1());
            	    	      														
            	    	    }
            	    	    this_STRING_94=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_94, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_3_5_0_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalUppaalXML.g:1971:10: ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1971:10: ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1972:11: {...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 1)");
            	    	    }
            	    	    // InternalUppaalXML.g:1972:112: ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1973:12: ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 1);
            	    	    // InternalUppaalXML.g:1976:15: ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1976:16: {...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1976:25: (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING )
            	    	    // InternalUppaalXML.g:1976:26: otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING
            	    	    {
            	    	    otherlv_95=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_95, grammarAccess.getEdgeAccess().getYKeyword_16_3_5_1_0());
            	    	      														
            	    	    }
            	    	    otherlv_96=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_96, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_5_1_1());
            	    	      														
            	    	    }
            	    	    this_STRING_97=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_97, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_3_5_1_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalUppaalXML.g:1994:10: ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:1994:10: ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:1995:11: {...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 2)");
            	    	    }
            	    	    // InternalUppaalXML.g:1995:112: ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:1996:12: ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5(), 2);
            	    	    // InternalUppaalXML.g:1999:15: ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:1999:16: {...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:1999:25: (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING )
            	    	    // InternalUppaalXML.g:1999:26: otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING
            	    	    {
            	    	    otherlv_98=(Token)match(input,34,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_98, grammarAccess.getEdgeAccess().getColorKeyword_16_3_5_2_0());
            	    	      														
            	    	    }
            	    	    otherlv_99=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_99, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_3_5_2_1());
            	    	      														
            	    	    }
            	    	    this_STRING_100=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_100, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_3_5_2_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop27;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16_3_5());

            	    }

            	    otherlv_101=(Token)match(input,16,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_101, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_3_6());
            	      								
            	    }
            	    // InternalUppaalXML.g:2028:9: ( (lv_update_102_0= ruleExpression ) )
            	    // InternalUppaalXML.g:2029:10: (lv_update_102_0= ruleExpression )
            	    {
            	    // InternalUppaalXML.g:2029:10: (lv_update_102_0= ruleExpression )
            	    // InternalUppaalXML.g:2030:11: lv_update_102_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEdgeAccess().getUpdateExpressionParserRuleCall_16_3_7_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_update_102_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEdgeRule());
            	      											}
            	      											add(
            	      												current,
            	      												"update",
            	      												lv_update_102_0,
            	      												"org.muml.uppaal.UppaalXML.Expression");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:2047:9: (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )*
            	    loop28:
            	    do {
            	        int alt28=2;
            	        int LA28_0 = input.LA(1);

            	        if ( (LA28_0==28) ) {
            	            alt28=1;
            	        }


            	        switch (alt28) {
            	    	case 1 :
            	    	    // InternalUppaalXML.g:2048:10: otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) )
            	    	    {
            	    	    otherlv_103=(Token)match(input,28,FOLLOW_37); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_103, grammarAccess.getEdgeAccess().getCommaKeyword_16_3_8_0());
            	    	      									
            	    	    }
            	    	    // InternalUppaalXML.g:2052:10: ( (lv_update_104_0= ruleExpression ) )
            	    	    // InternalUppaalXML.g:2053:11: (lv_update_104_0= ruleExpression )
            	    	    {
            	    	    // InternalUppaalXML.g:2053:11: (lv_update_104_0= ruleExpression )
            	    	    // InternalUppaalXML.g:2054:12: lv_update_104_0= ruleExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getEdgeAccess().getUpdateExpressionParserRuleCall_16_3_8_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_23);
            	    	    lv_update_104_0=ruleExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getEdgeRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"update",
            	    	      													lv_update_104_0,
            	    	      													"org.muml.uppaal.UppaalXML.Expression");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop28;
            	        }
            	    } while (true);

            	    otherlv_105=(Token)match(input,18,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_105, grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_3_9());
            	      								
            	    }
            	    otherlv_106=(Token)match(input,35,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_106, grammarAccess.getEdgeAccess().getLabelKeyword_16_3_10());
            	      								
            	    }
            	    otherlv_107=(Token)match(input,16,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_107, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_3_11());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalUppaalXML.g:2090:4: ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) )
            	    {
            	    // InternalUppaalXML.g:2090:4: ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) )
            	    // InternalUppaalXML.g:2091:5: {...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 4)");
            	    }
            	    // InternalUppaalXML.g:2091:102: ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) )
            	    // InternalUppaalXML.g:2092:6: ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 4);
            	    // InternalUppaalXML.g:2095:9: ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) )
            	    // InternalUppaalXML.g:2095:10: {...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    }
            	    // InternalUppaalXML.g:2095:19: (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' )
            	    // InternalUppaalXML.g:2095:20: otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>'
            	    {
            	    otherlv_108=(Token)match(input,14,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_108, grammarAccess.getEdgeAccess().getLessThanSignKeyword_16_4_0());
            	      								
            	    }
            	    otherlv_109=(Token)match(input,35,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_109, grammarAccess.getEdgeAccess().getLabelKeyword_16_4_1());
            	      								
            	    }
            	    otherlv_110=(Token)match(input,36,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_110, grammarAccess.getEdgeAccess().getKindKeyword_16_4_2());
            	      								
            	    }
            	    otherlv_111=(Token)match(input,25,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_111, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_3());
            	      								
            	    }
            	    otherlv_112=(Token)match(input,45,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_112, grammarAccess.getEdgeAccess().getSelectKeyword_16_4_4());
            	      								
            	    }
            	    // InternalUppaalXML.g:2115:9: ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) )
            	    // InternalUppaalXML.g:2116:10: ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) )
            	    {
            	    // InternalUppaalXML.g:2116:10: ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) )
            	    // InternalUppaalXML.g:2117:11: ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* )
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5());
            	    // InternalUppaalXML.g:2120:11: ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* )
            	    // InternalUppaalXML.g:2121:12: ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )*
            	    {
            	    // InternalUppaalXML.g:2121:12: ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )*
            	    loop29:
            	    do {
            	        int alt29=4;
            	        int LA29_0 = input.LA(1);

            	        if ( LA29_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 0) ) {
            	            alt29=1;
            	        }
            	        else if ( LA29_0 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 1) ) {
            	            alt29=2;
            	        }
            	        else if ( LA29_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 2) ) {
            	            alt29=3;
            	        }


            	        switch (alt29) {
            	    	case 1 :
            	    	    // InternalUppaalXML.g:2122:10: ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:2122:10: ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:2123:11: {...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 0)");
            	    	    }
            	    	    // InternalUppaalXML.g:2123:112: ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:2124:12: ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 0);
            	    	    // InternalUppaalXML.g:2127:15: ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:2127:16: {...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:2127:25: (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING )
            	    	    // InternalUppaalXML.g:2127:26: otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING
            	    	    {
            	    	    otherlv_114=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_114, grammarAccess.getEdgeAccess().getXKeyword_16_4_5_0_0());
            	    	      														
            	    	    }
            	    	    otherlv_115=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_115, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_5_0_1());
            	    	      														
            	    	    }
            	    	    this_STRING_116=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_116, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_4_5_0_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalUppaalXML.g:2145:10: ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:2145:10: ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:2146:11: {...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 1)");
            	    	    }
            	    	    // InternalUppaalXML.g:2146:112: ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:2147:12: ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 1);
            	    	    // InternalUppaalXML.g:2150:15: ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:2150:16: {...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:2150:25: (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING )
            	    	    // InternalUppaalXML.g:2150:26: otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING
            	    	    {
            	    	    otherlv_117=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_117, grammarAccess.getEdgeAccess().getYKeyword_16_4_5_1_0());
            	    	      														
            	    	    }
            	    	    otherlv_118=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_118, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_5_1_1());
            	    	      														
            	    	    }
            	    	    this_STRING_119=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_119, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_4_5_1_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalUppaalXML.g:2168:10: ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) )
            	    	    {
            	    	    // InternalUppaalXML.g:2168:10: ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) )
            	    	    // InternalUppaalXML.g:2169:11: {...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 2)");
            	    	    }
            	    	    // InternalUppaalXML.g:2169:112: ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) )
            	    	    // InternalUppaalXML.g:2170:12: ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5(), 2);
            	    	    // InternalUppaalXML.g:2173:15: ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) )
            	    	    // InternalUppaalXML.g:2173:16: {...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleEdge", "true");
            	    	    }
            	    	    // InternalUppaalXML.g:2173:25: (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING )
            	    	    // InternalUppaalXML.g:2173:26: otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING
            	    	    {
            	    	    otherlv_120=(Token)match(input,34,FOLLOW_18); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_120, grammarAccess.getEdgeAccess().getColorKeyword_16_4_5_2_0());
            	    	      														
            	    	    }
            	    	    otherlv_121=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_121, grammarAccess.getEdgeAccess().getEqualsSignKeyword_16_4_5_2_1());
            	    	      														
            	    	    }
            	    	    this_STRING_122=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(this_STRING_122, grammarAccess.getEdgeAccess().getSTRINGTerminalRuleCall_16_4_5_2_2());
            	    	      														
            	    	    }

            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop29;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16_4_5());

            	    }

            	    otherlv_123=(Token)match(input,16,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_123, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_4_6());
            	      								
            	    }
            	    // InternalUppaalXML.g:2202:9: ( (lv_selection_124_0= ruleSelection ) )
            	    // InternalUppaalXML.g:2203:10: (lv_selection_124_0= ruleSelection )
            	    {
            	    // InternalUppaalXML.g:2203:10: (lv_selection_124_0= ruleSelection )
            	    // InternalUppaalXML.g:2204:11: lv_selection_124_0= ruleSelection
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEdgeAccess().getSelectionSelectionParserRuleCall_16_4_7_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_selection_124_0=ruleSelection();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEdgeRule());
            	      											}
            	      											add(
            	      												current,
            	      												"selection",
            	      												lv_selection_124_0,
            	      												"org.muml.uppaal.UppaalXML.Selection");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:2221:9: (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )*
            	    loop30:
            	    do {
            	        int alt30=2;
            	        int LA30_0 = input.LA(1);

            	        if ( (LA30_0==28) ) {
            	            alt30=1;
            	        }


            	        switch (alt30) {
            	    	case 1 :
            	    	    // InternalUppaalXML.g:2222:10: otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) )
            	    	    {
            	    	    otherlv_125=(Token)match(input,28,FOLLOW_47); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_125, grammarAccess.getEdgeAccess().getCommaKeyword_16_4_8_0());
            	    	      									
            	    	    }
            	    	    // InternalUppaalXML.g:2226:10: ( (lv_selection_126_0= ruleSelection ) )
            	    	    // InternalUppaalXML.g:2227:11: (lv_selection_126_0= ruleSelection )
            	    	    {
            	    	    // InternalUppaalXML.g:2227:11: (lv_selection_126_0= ruleSelection )
            	    	    // InternalUppaalXML.g:2228:12: lv_selection_126_0= ruleSelection
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getEdgeAccess().getSelectionSelectionParserRuleCall_16_4_8_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_23);
            	    	    lv_selection_126_0=ruleSelection();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getEdgeRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"selection",
            	    	      													lv_selection_126_0,
            	    	      													"org.muml.uppaal.UppaalXML.Selection");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop30;
            	        }
            	    } while (true);

            	    otherlv_127=(Token)match(input,18,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_127, grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_16_4_9());
            	      								
            	    }
            	    otherlv_128=(Token)match(input,35,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_128, grammarAccess.getEdgeAccess().getLabelKeyword_16_4_10());
            	      								
            	    }
            	    otherlv_129=(Token)match(input,16,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_129, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_16_4_11());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEdgeAccess().getUnorderedGroup_16());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEdgeAccess().getUnorderedGroup_16());

            }

            // InternalUppaalXML.g:2271:3: (otherlv_130= '<' otherlv_131= 'nail' ( (lv_bendPoint_132_0= rulePoint ) ) otherlv_133= '/>' )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==14) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalUppaalXML.g:2272:4: otherlv_130= '<' otherlv_131= 'nail' ( (lv_bendPoint_132_0= rulePoint ) ) otherlv_133= '/>'
            	    {
            	    otherlv_130=(Token)match(input,14,FOLLOW_48); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_130, grammarAccess.getEdgeAccess().getLessThanSignKeyword_17_0());
            	      			
            	    }
            	    otherlv_131=(Token)match(input,46,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_131, grammarAccess.getEdgeAccess().getNailKeyword_17_1());
            	      			
            	    }
            	    // InternalUppaalXML.g:2280:4: ( (lv_bendPoint_132_0= rulePoint ) )
            	    // InternalUppaalXML.g:2281:5: (lv_bendPoint_132_0= rulePoint )
            	    {
            	    // InternalUppaalXML.g:2281:5: (lv_bendPoint_132_0= rulePoint )
            	    // InternalUppaalXML.g:2282:6: lv_bendPoint_132_0= rulePoint
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEdgeAccess().getBendPointPointParserRuleCall_17_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_bendPoint_132_0=rulePoint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEdgeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"bendPoint",
            	      							lv_bendPoint_132_0,
            	      							"org.muml.uppaal.UppaalXML.Point");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_133=(Token)match(input,31,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_133, grammarAccess.getEdgeAccess().getSolidusGreaterThanSignKeyword_17_3());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            otherlv_134=(Token)match(input,18,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_134, grammarAccess.getEdgeAccess().getLessThanSignSolidusKeyword_18());
              		
            }
            otherlv_135=(Token)match(input,39,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_135, grammarAccess.getEdgeAccess().getTransitionKeyword_19());
              		
            }
            otherlv_136=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_136, grammarAccess.getEdgeAccess().getGreaterThanSignKeyword_20());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleEdge"


    // $ANTLR start "entryRuleCommentLabel"
    // InternalUppaalXML.g:2323:1: entryRuleCommentLabel returns [String current=null] : iv_ruleCommentLabel= ruleCommentLabel EOF ;
    public final String entryRuleCommentLabel() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCommentLabel = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalUppaalXML.g:2325:2: (iv_ruleCommentLabel= ruleCommentLabel EOF )
            // InternalUppaalXML.g:2326:2: iv_ruleCommentLabel= ruleCommentLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommentLabel=ruleCommentLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentLabel.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleCommentLabel"


    // $ANTLR start "ruleCommentLabel"
    // InternalUppaalXML.g:2335:1: ruleCommentLabel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ANY_TOKEN_BUT_XML_CLOSE_0= ruleANY_TOKEN_BUT_XML_CLOSE )* ;
    public final AntlrDatatypeRuleToken ruleCommentLabel() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_ANY_TOKEN_BUT_XML_CLOSE_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalUppaalXML.g:2342:2: ( (this_ANY_TOKEN_BUT_XML_CLOSE_0= ruleANY_TOKEN_BUT_XML_CLOSE )* )
            // InternalUppaalXML.g:2343:2: (this_ANY_TOKEN_BUT_XML_CLOSE_0= ruleANY_TOKEN_BUT_XML_CLOSE )*
            {
            // InternalUppaalXML.g:2343:2: (this_ANY_TOKEN_BUT_XML_CLOSE_0= ruleANY_TOKEN_BUT_XML_CLOSE )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( ((LA33_0>=RULE_STRING && LA33_0<=17)||(LA33_0>=19 && LA33_0<=44)||(LA33_0>=46 && LA33_0<=74)||(LA33_0>=76 && LA33_0<=135)) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalUppaalXML.g:2344:3: this_ANY_TOKEN_BUT_XML_CLOSE_0= ruleANY_TOKEN_BUT_XML_CLOSE
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getCommentLabelAccess().getANY_TOKEN_BUT_XML_CLOSEParserRuleCall());
            	      		
            	    }
            	    pushFollow(FOLLOW_50);
            	    this_ANY_TOKEN_BUT_XML_CLOSE_0=ruleANY_TOKEN_BUT_XML_CLOSE();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ANY_TOKEN_BUT_XML_CLOSE_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleCommentLabel"


    // $ANTLR start "entryRuleSynchronizationLabel"
    // InternalUppaalXML.g:2361:1: entryRuleSynchronizationLabel returns [EObject current=null] : iv_ruleSynchronizationLabel= ruleSynchronizationLabel EOF ;
    public final EObject entryRuleSynchronizationLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSynchronizationLabel = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:2363:2: (iv_ruleSynchronizationLabel= ruleSynchronizationLabel EOF )
            // InternalUppaalXML.g:2364:2: iv_ruleSynchronizationLabel= ruleSynchronizationLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSynchronizationLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSynchronizationLabel=ruleSynchronizationLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSynchronizationLabel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSynchronizationLabel"


    // $ANTLR start "ruleSynchronizationLabel"
    // InternalUppaalXML.g:2373:1: ruleSynchronizationLabel returns [EObject current=null] : ( ( (lv_channelExpression_0_0= ruleIdentifierExpression ) ) ( (lv_kind_1_0= ruleSynchronizationKind ) ) ) ;
    public final EObject ruleSynchronizationLabel() throws RecognitionException {
        EObject current = null;

        EObject lv_channelExpression_0_0 = null;

        Enumerator lv_kind_1_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:2380:2: ( ( ( (lv_channelExpression_0_0= ruleIdentifierExpression ) ) ( (lv_kind_1_0= ruleSynchronizationKind ) ) ) )
            // InternalUppaalXML.g:2381:2: ( ( (lv_channelExpression_0_0= ruleIdentifierExpression ) ) ( (lv_kind_1_0= ruleSynchronizationKind ) ) )
            {
            // InternalUppaalXML.g:2381:2: ( ( (lv_channelExpression_0_0= ruleIdentifierExpression ) ) ( (lv_kind_1_0= ruleSynchronizationKind ) ) )
            // InternalUppaalXML.g:2382:3: ( (lv_channelExpression_0_0= ruleIdentifierExpression ) ) ( (lv_kind_1_0= ruleSynchronizationKind ) )
            {
            // InternalUppaalXML.g:2382:3: ( (lv_channelExpression_0_0= ruleIdentifierExpression ) )
            // InternalUppaalXML.g:2383:4: (lv_channelExpression_0_0= ruleIdentifierExpression )
            {
            // InternalUppaalXML.g:2383:4: (lv_channelExpression_0_0= ruleIdentifierExpression )
            // InternalUppaalXML.g:2384:5: lv_channelExpression_0_0= ruleIdentifierExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSynchronizationLabelAccess().getChannelExpressionIdentifierExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_channelExpression_0_0=ruleIdentifierExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSynchronizationLabelRule());
              					}
              					set(
              						current,
              						"channelExpression",
              						lv_channelExpression_0_0,
              						"org.muml.uppaal.UppaalXML.IdentifierExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:2401:3: ( (lv_kind_1_0= ruleSynchronizationKind ) )
            // InternalUppaalXML.g:2402:4: (lv_kind_1_0= ruleSynchronizationKind )
            {
            // InternalUppaalXML.g:2402:4: (lv_kind_1_0= ruleSynchronizationKind )
            // InternalUppaalXML.g:2403:5: lv_kind_1_0= ruleSynchronizationKind
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSynchronizationLabelAccess().getKindSynchronizationKindEnumRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_kind_1_0=ruleSynchronizationKind();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSynchronizationLabelRule());
              					}
              					set(
              						current,
              						"kind",
              						lv_kind_1_0,
              						"org.muml.uppaal.UppaalXML.SynchronizationKind");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSynchronizationLabel"


    // $ANTLR start "entryRulePoint"
    // InternalUppaalXML.g:2427:1: entryRulePoint returns [EObject current=null] : iv_rulePoint= rulePoint EOF ;
    public final EObject entryRulePoint() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePoint = null;


        try {
            // InternalUppaalXML.g:2427:46: (iv_rulePoint= rulePoint EOF )
            // InternalUppaalXML.g:2428:2: iv_rulePoint= rulePoint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPointRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePoint=rulePoint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePoint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePoint"


    // $ANTLR start "rulePoint"
    // InternalUppaalXML.g:2434:1: rulePoint returns [EObject current=null] : ( () ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject rulePoint() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_x_4_0 = null;

        AntlrDatatypeRuleToken lv_y_7_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:2440:2: ( ( () ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )* ) ) ) ) )
            // InternalUppaalXML.g:2441:2: ( () ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalUppaalXML.g:2441:2: ( () ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )* ) ) ) )
            // InternalUppaalXML.g:2442:3: () ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )* ) ) )
            {
            // InternalUppaalXML.g:2442:3: ()
            // InternalUppaalXML.g:2443:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPointAccess().getPointAction_0(),
              					current);
              			
            }

            }

            // InternalUppaalXML.g:2449:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )* ) ) )
            // InternalUppaalXML.g:2450:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )* ) )
            {
            // InternalUppaalXML.g:2450:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )* ) )
            // InternalUppaalXML.g:2451:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getPointAccess().getUnorderedGroup_1());
            // InternalUppaalXML.g:2454:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )* )
            // InternalUppaalXML.g:2455:6: ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )*
            {
            // InternalUppaalXML.g:2455:6: ( ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) ) )*
            loop34:
            do {
                int alt34=3;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==24) ) {
                    int LA34_2 = input.LA(2);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getPointAccess().getUnorderedGroup_1(), 0) ) {
                        alt34=1;
                    }


                }
                else if ( (LA34_0==26) ) {
                    int LA34_3 = input.LA(2);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getPointAccess().getUnorderedGroup_1(), 1) ) {
                        alt34=2;
                    }


                }


                switch (alt34) {
            	case 1 :
            	    // InternalUppaalXML.g:2456:4: ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) )
            	    {
            	    // InternalUppaalXML.g:2456:4: ({...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) ) )
            	    // InternalUppaalXML.g:2457:5: {...}? => ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPointAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "rulePoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getPointAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalUppaalXML.g:2457:102: ( ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) ) )
            	    // InternalUppaalXML.g:2458:6: ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getPointAccess().getUnorderedGroup_1(), 0);
            	    // InternalUppaalXML.g:2461:9: ({...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) ) )
            	    // InternalUppaalXML.g:2461:10: {...}? => (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "rulePoint", "true");
            	    }
            	    // InternalUppaalXML.g:2461:19: (otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) ) )
            	    // InternalUppaalXML.g:2461:20: otherlv_2= 'x' otherlv_3= '=' ( (lv_x_4_0= ruleQUOTED_INT ) )
            	    {
            	    otherlv_2=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_2, grammarAccess.getPointAccess().getXKeyword_1_0_0());
            	      								
            	    }
            	    otherlv_3=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getPointAccess().getEqualsSignKeyword_1_0_1());
            	      								
            	    }
            	    // InternalUppaalXML.g:2469:9: ( (lv_x_4_0= ruleQUOTED_INT ) )
            	    // InternalUppaalXML.g:2470:10: (lv_x_4_0= ruleQUOTED_INT )
            	    {
            	    // InternalUppaalXML.g:2470:10: (lv_x_4_0= ruleQUOTED_INT )
            	    // InternalUppaalXML.g:2471:11: lv_x_4_0= ruleQUOTED_INT
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getPointAccess().getXQUOTED_INTParserRuleCall_1_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_52);
            	    lv_x_4_0=ruleQUOTED_INT();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getPointRule());
            	      											}
            	      											set(
            	      												current,
            	      												"x",
            	      												lv_x_4_0,
            	      												"org.muml.uppaal.UppaalXML.QUOTED_INT");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPointAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalUppaalXML.g:2494:4: ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) )
            	    {
            	    // InternalUppaalXML.g:2494:4: ({...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) ) )
            	    // InternalUppaalXML.g:2495:5: {...}? => ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPointAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "rulePoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getPointAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalUppaalXML.g:2495:102: ( ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) ) )
            	    // InternalUppaalXML.g:2496:6: ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getPointAccess().getUnorderedGroup_1(), 1);
            	    // InternalUppaalXML.g:2499:9: ({...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) ) )
            	    // InternalUppaalXML.g:2499:10: {...}? => (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "rulePoint", "true");
            	    }
            	    // InternalUppaalXML.g:2499:19: (otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) ) )
            	    // InternalUppaalXML.g:2499:20: otherlv_5= 'y' otherlv_6= '=' ( (lv_y_7_0= ruleQUOTED_INT ) )
            	    {
            	    otherlv_5=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getPointAccess().getYKeyword_1_1_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getPointAccess().getEqualsSignKeyword_1_1_1());
            	      								
            	    }
            	    // InternalUppaalXML.g:2507:9: ( (lv_y_7_0= ruleQUOTED_INT ) )
            	    // InternalUppaalXML.g:2508:10: (lv_y_7_0= ruleQUOTED_INT )
            	    {
            	    // InternalUppaalXML.g:2508:10: (lv_y_7_0= ruleQUOTED_INT )
            	    // InternalUppaalXML.g:2509:11: lv_y_7_0= ruleQUOTED_INT
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getPointAccess().getYQUOTED_INTParserRuleCall_1_1_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_52);
            	    lv_y_7_0=ruleQUOTED_INT();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getPointRule());
            	      											}
            	      											set(
            	      												current,
            	      												"y",
            	      												lv_y_7_0,
            	      												"org.muml.uppaal.UppaalXML.QUOTED_INT");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPointAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getPointAccess().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePoint"


    // $ANTLR start "entryRuleSelection"
    // InternalUppaalXML.g:2543:1: entryRuleSelection returns [EObject current=null] : iv_ruleSelection= ruleSelection EOF ;
    public final EObject entryRuleSelection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelection = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:2545:2: (iv_ruleSelection= ruleSelection EOF )
            // InternalUppaalXML.g:2546:2: iv_ruleSelection= ruleSelection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelection=ruleSelection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSelection"


    // $ANTLR start "ruleSelection"
    // InternalUppaalXML.g:2555:1: ruleSelection returns [EObject current=null] : ( ( (lv_elements_0_0= ruleVariableNameOnly ) ) otherlv_1= ':' ( ( (lv_typeDefinition_2_1= ruleRangeTypeSpecification | lv_typeDefinition_2_2= ruleScalarTypeSpecification | lv_typeDefinition_2_3= ruleSimpleIdentifierExpression ) ) ) ) ;
    public final EObject ruleSelection() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_elements_0_0 = null;

        EObject lv_typeDefinition_2_1 = null;

        EObject lv_typeDefinition_2_2 = null;

        EObject lv_typeDefinition_2_3 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:2562:2: ( ( ( (lv_elements_0_0= ruleVariableNameOnly ) ) otherlv_1= ':' ( ( (lv_typeDefinition_2_1= ruleRangeTypeSpecification | lv_typeDefinition_2_2= ruleScalarTypeSpecification | lv_typeDefinition_2_3= ruleSimpleIdentifierExpression ) ) ) ) )
            // InternalUppaalXML.g:2563:2: ( ( (lv_elements_0_0= ruleVariableNameOnly ) ) otherlv_1= ':' ( ( (lv_typeDefinition_2_1= ruleRangeTypeSpecification | lv_typeDefinition_2_2= ruleScalarTypeSpecification | lv_typeDefinition_2_3= ruleSimpleIdentifierExpression ) ) ) )
            {
            // InternalUppaalXML.g:2563:2: ( ( (lv_elements_0_0= ruleVariableNameOnly ) ) otherlv_1= ':' ( ( (lv_typeDefinition_2_1= ruleRangeTypeSpecification | lv_typeDefinition_2_2= ruleScalarTypeSpecification | lv_typeDefinition_2_3= ruleSimpleIdentifierExpression ) ) ) )
            // InternalUppaalXML.g:2564:3: ( (lv_elements_0_0= ruleVariableNameOnly ) ) otherlv_1= ':' ( ( (lv_typeDefinition_2_1= ruleRangeTypeSpecification | lv_typeDefinition_2_2= ruleScalarTypeSpecification | lv_typeDefinition_2_3= ruleSimpleIdentifierExpression ) ) )
            {
            // InternalUppaalXML.g:2564:3: ( (lv_elements_0_0= ruleVariableNameOnly ) )
            // InternalUppaalXML.g:2565:4: (lv_elements_0_0= ruleVariableNameOnly )
            {
            // InternalUppaalXML.g:2565:4: (lv_elements_0_0= ruleVariableNameOnly )
            // InternalUppaalXML.g:2566:5: lv_elements_0_0= ruleVariableNameOnly
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSelectionAccess().getElementsVariableNameOnlyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_elements_0_0=ruleVariableNameOnly();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSelectionRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_0_0,
              						"org.muml.uppaal.UppaalXML.VariableNameOnly");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,47,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSelectionAccess().getColonKeyword_1());
              		
            }
            // InternalUppaalXML.g:2587:3: ( ( (lv_typeDefinition_2_1= ruleRangeTypeSpecification | lv_typeDefinition_2_2= ruleScalarTypeSpecification | lv_typeDefinition_2_3= ruleSimpleIdentifierExpression ) ) )
            // InternalUppaalXML.g:2588:4: ( (lv_typeDefinition_2_1= ruleRangeTypeSpecification | lv_typeDefinition_2_2= ruleScalarTypeSpecification | lv_typeDefinition_2_3= ruleSimpleIdentifierExpression ) )
            {
            // InternalUppaalXML.g:2588:4: ( (lv_typeDefinition_2_1= ruleRangeTypeSpecification | lv_typeDefinition_2_2= ruleScalarTypeSpecification | lv_typeDefinition_2_3= ruleSimpleIdentifierExpression ) )
            // InternalUppaalXML.g:2589:5: (lv_typeDefinition_2_1= ruleRangeTypeSpecification | lv_typeDefinition_2_2= ruleScalarTypeSpecification | lv_typeDefinition_2_3= ruleSimpleIdentifierExpression )
            {
            // InternalUppaalXML.g:2589:5: (lv_typeDefinition_2_1= ruleRangeTypeSpecification | lv_typeDefinition_2_2= ruleScalarTypeSpecification | lv_typeDefinition_2_3= ruleSimpleIdentifierExpression )
            int alt35=3;
            switch ( input.LA(1) ) {
            case 60:
                {
                int LA35_1 = input.LA(2);

                if ( (LA35_1==EOF||LA35_1==18||LA35_1==28) ) {
                    alt35=3;
                }
                else if ( (LA35_1==55) ) {
                    alt35=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 1, input);

                    throw nvae;
                }
                }
                break;
            case 62:
                {
                alt35=2;
                }
                break;
            case RULE_ID:
            case 15:
            case 17:
            case 19:
            case 20:
            case 21:
            case 23:
            case 24:
            case 26:
            case 27:
            case 30:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 39:
            case 40:
            case 41:
            case 46:
            case 57:
            case 79:
            case 80:
            case 81:
            case 135:
                {
                alt35=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }

            switch (alt35) {
                case 1 :
                    // InternalUppaalXML.g:2590:6: lv_typeDefinition_2_1= ruleRangeTypeSpecification
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelectionAccess().getTypeDefinitionRangeTypeSpecificationParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeDefinition_2_1=ruleRangeTypeSpecification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelectionRule());
                      						}
                      						set(
                      							current,
                      							"typeDefinition",
                      							lv_typeDefinition_2_1,
                      							"org.muml.uppaal.UppaalXML.RangeTypeSpecification");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:2606:6: lv_typeDefinition_2_2= ruleScalarTypeSpecification
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelectionAccess().getTypeDefinitionScalarTypeSpecificationParserRuleCall_2_0_1());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeDefinition_2_2=ruleScalarTypeSpecification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelectionRule());
                      						}
                      						set(
                      							current,
                      							"typeDefinition",
                      							lv_typeDefinition_2_2,
                      							"org.muml.uppaal.UppaalXML.ScalarTypeSpecification");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:2622:6: lv_typeDefinition_2_3= ruleSimpleIdentifierExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelectionAccess().getTypeDefinitionSimpleIdentifierExpressionParserRuleCall_2_0_2());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeDefinition_2_3=ruleSimpleIdentifierExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelectionRule());
                      						}
                      						set(
                      							current,
                      							"typeDefinition",
                      							lv_typeDefinition_2_3,
                      							"org.muml.uppaal.UppaalXML.SimpleIdentifierExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSelection"


    // $ANTLR start "entryRuleGlobalDeclarations"
    // InternalUppaalXML.g:2647:1: entryRuleGlobalDeclarations returns [EObject current=null] : iv_ruleGlobalDeclarations= ruleGlobalDeclarations EOF ;
    public final EObject entryRuleGlobalDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGlobalDeclarations = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:2649:2: (iv_ruleGlobalDeclarations= ruleGlobalDeclarations EOF )
            // InternalUppaalXML.g:2650:2: iv_ruleGlobalDeclarations= ruleGlobalDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGlobalDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGlobalDeclarations=ruleGlobalDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGlobalDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleGlobalDeclarations"


    // $ANTLR start "ruleGlobalDeclarations"
    // InternalUppaalXML.g:2659:1: ruleGlobalDeclarations returns [EObject current=null] : ( () ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) ) | ( (lv_channelPriority_2_0= ruleChannelPriorityDeclaration ) ) )* ) ;
    public final EObject ruleGlobalDeclarations() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_1_1 = null;

        EObject lv_declaration_1_2 = null;

        EObject lv_channelPriority_2_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:2666:2: ( ( () ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) ) | ( (lv_channelPriority_2_0= ruleChannelPriorityDeclaration ) ) )* ) )
            // InternalUppaalXML.g:2667:2: ( () ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) ) | ( (lv_channelPriority_2_0= ruleChannelPriorityDeclaration ) ) )* )
            {
            // InternalUppaalXML.g:2667:2: ( () ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) ) | ( (lv_channelPriority_2_0= ruleChannelPriorityDeclaration ) ) )* )
            // InternalUppaalXML.g:2668:3: () ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) ) | ( (lv_channelPriority_2_0= ruleChannelPriorityDeclaration ) ) )*
            {
            // InternalUppaalXML.g:2668:3: ()
            // InternalUppaalXML.g:2669:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGlobalDeclarationsAccess().getGlobalDeclarationsAction_0(),
              					current);
              			
            }

            }

            // InternalUppaalXML.g:2675:3: ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) ) | ( (lv_channelPriority_2_0= ruleChannelPriorityDeclaration ) ) )*
            loop37:
            do {
                int alt37=3;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==RULE_ID||LA37_0==15||LA37_0==17||(LA37_0>=19 && LA37_0<=21)||(LA37_0>=23 && LA37_0<=24)||(LA37_0>=26 && LA37_0<=27)||LA37_0==30||(LA37_0>=32 && LA37_0<=36)||(LA37_0>=39 && LA37_0<=41)||LA37_0==46||(LA37_0>=58 && LA37_0<=63)||(LA37_0>=79 && LA37_0<=81)||LA37_0==83||LA37_0==99||LA37_0==135) ) {
                    alt37=1;
                }
                else if ( (LA37_0==57) ) {
                    int LA37_3 = input.LA(2);

                    if ( (LA37_3==64) ) {
                        alt37=2;
                    }
                    else if ( (LA37_3==RULE_ID||LA37_3==15||LA37_3==17||(LA37_3>=19 && LA37_3<=21)||(LA37_3>=23 && LA37_3<=24)||(LA37_3>=26 && LA37_3<=27)||LA37_3==30||(LA37_3>=32 && LA37_3<=36)||(LA37_3>=39 && LA37_3<=41)||LA37_3==46||LA37_3==135) ) {
                        alt37=1;
                    }


                }


                switch (alt37) {
            	case 1 :
            	    // InternalUppaalXML.g:2676:4: ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )
            	    {
            	    // InternalUppaalXML.g:2676:4: ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )
            	    // InternalUppaalXML.g:2677:5: ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) )
            	    {
            	    // InternalUppaalXML.g:2677:5: ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) )
            	    // InternalUppaalXML.g:2678:6: (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration )
            	    {
            	    // InternalUppaalXML.g:2678:6: (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration )
            	    int alt36=2;
            	    int LA36_0 = input.LA(1);

            	    if ( (LA36_0==RULE_ID||LA36_0==15||LA36_0==17||(LA36_0>=19 && LA36_0<=21)||(LA36_0>=23 && LA36_0<=24)||(LA36_0>=26 && LA36_0<=27)||LA36_0==30||(LA36_0>=32 && LA36_0<=36)||(LA36_0>=39 && LA36_0<=41)||LA36_0==46||(LA36_0>=57 && LA36_0<=62)||(LA36_0>=79 && LA36_0<=81)||LA36_0==83||LA36_0==99||LA36_0==135) ) {
            	        alt36=1;
            	    }
            	    else if ( (LA36_0==63) ) {
            	        alt36=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 36, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt36) {
            	        case 1 :
            	            // InternalUppaalXML.g:2679:7: lv_declaration_1_1= ruleTypedDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getGlobalDeclarationsAccess().getDeclarationTypedDeclarationParserRuleCall_1_0_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_55);
            	            lv_declaration_1_1=ruleTypedDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getGlobalDeclarationsRule());
            	              							}
            	              							add(
            	              								current,
            	              								"declaration",
            	              								lv_declaration_1_1,
            	              								"org.muml.uppaal.UppaalXML.TypedDeclaration");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalUppaalXML.g:2695:7: lv_declaration_1_2= ruleTypeDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getGlobalDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_55);
            	            lv_declaration_1_2=ruleTypeDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getGlobalDeclarationsRule());
            	              							}
            	              							add(
            	              								current,
            	              								"declaration",
            	              								lv_declaration_1_2,
            	              								"org.muml.uppaal.UppaalXML.TypeDeclaration");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalUppaalXML.g:2714:4: ( (lv_channelPriority_2_0= ruleChannelPriorityDeclaration ) )
            	    {
            	    // InternalUppaalXML.g:2714:4: ( (lv_channelPriority_2_0= ruleChannelPriorityDeclaration ) )
            	    // InternalUppaalXML.g:2715:5: (lv_channelPriority_2_0= ruleChannelPriorityDeclaration )
            	    {
            	    // InternalUppaalXML.g:2715:5: (lv_channelPriority_2_0= ruleChannelPriorityDeclaration )
            	    // InternalUppaalXML.g:2716:6: lv_channelPriority_2_0= ruleChannelPriorityDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getGlobalDeclarationsAccess().getChannelPriorityChannelPriorityDeclarationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_channelPriority_2_0=ruleChannelPriorityDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getGlobalDeclarationsRule());
            	      						}
            	      						set(
            	      							current,
            	      							"channelPriority",
            	      							lv_channelPriority_2_0,
            	      							"org.muml.uppaal.UppaalXML.ChannelPriorityDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleGlobalDeclarations"


    // $ANTLR start "entryRuleLocalDeclarations"
    // InternalUppaalXML.g:2741:1: entryRuleLocalDeclarations returns [EObject current=null] : iv_ruleLocalDeclarations= ruleLocalDeclarations EOF ;
    public final EObject entryRuleLocalDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalDeclarations = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:2743:2: (iv_ruleLocalDeclarations= ruleLocalDeclarations EOF )
            // InternalUppaalXML.g:2744:2: iv_ruleLocalDeclarations= ruleLocalDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalDeclarations=ruleLocalDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleLocalDeclarations"


    // $ANTLR start "ruleLocalDeclarations"
    // InternalUppaalXML.g:2753:1: ruleLocalDeclarations returns [EObject current=null] : ( () ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )* ) ;
    public final EObject ruleLocalDeclarations() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_1_1 = null;

        EObject lv_declaration_1_2 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:2760:2: ( ( () ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )* ) )
            // InternalUppaalXML.g:2761:2: ( () ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )* )
            {
            // InternalUppaalXML.g:2761:2: ( () ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )* )
            // InternalUppaalXML.g:2762:3: () ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )*
            {
            // InternalUppaalXML.g:2762:3: ()
            // InternalUppaalXML.g:2763:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLocalDeclarationsAccess().getLocalDeclarationsAction_0(),
              					current);
              			
            }

            }

            // InternalUppaalXML.g:2769:3: ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==RULE_ID||LA39_0==15||LA39_0==17||(LA39_0>=19 && LA39_0<=21)||(LA39_0>=23 && LA39_0<=24)||(LA39_0>=26 && LA39_0<=27)||LA39_0==30||(LA39_0>=32 && LA39_0<=36)||(LA39_0>=39 && LA39_0<=41)||LA39_0==46||(LA39_0>=57 && LA39_0<=63)||(LA39_0>=79 && LA39_0<=81)||LA39_0==83||LA39_0==99||LA39_0==135) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalUppaalXML.g:2770:4: ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) )
            	    {
            	    // InternalUppaalXML.g:2770:4: ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) )
            	    // InternalUppaalXML.g:2771:5: (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration )
            	    {
            	    // InternalUppaalXML.g:2771:5: (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration )
            	    int alt38=2;
            	    int LA38_0 = input.LA(1);

            	    if ( (LA38_0==RULE_ID||LA38_0==15||LA38_0==17||(LA38_0>=19 && LA38_0<=21)||(LA38_0>=23 && LA38_0<=24)||(LA38_0>=26 && LA38_0<=27)||LA38_0==30||(LA38_0>=32 && LA38_0<=36)||(LA38_0>=39 && LA38_0<=41)||LA38_0==46||(LA38_0>=57 && LA38_0<=62)||(LA38_0>=79 && LA38_0<=81)||LA38_0==83||LA38_0==99||LA38_0==135) ) {
            	        alt38=1;
            	    }
            	    else if ( (LA38_0==63) ) {
            	        alt38=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 38, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt38) {
            	        case 1 :
            	            // InternalUppaalXML.g:2772:6: lv_declaration_1_1= ruleTypedDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getLocalDeclarationsAccess().getDeclarationTypedDeclarationParserRuleCall_1_0_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_55);
            	            lv_declaration_1_1=ruleTypedDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getLocalDeclarationsRule());
            	              						}
            	              						add(
            	              							current,
            	              							"declaration",
            	              							lv_declaration_1_1,
            	              							"org.muml.uppaal.UppaalXML.TypedDeclaration");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalUppaalXML.g:2788:6: lv_declaration_1_2= ruleTypeDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getLocalDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_1());
            	              					
            	            }
            	            pushFollow(FOLLOW_55);
            	            lv_declaration_1_2=ruleTypeDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getLocalDeclarationsRule());
            	              						}
            	              						add(
            	              							current,
            	              							"declaration",
            	              							lv_declaration_1_2,
            	              							"org.muml.uppaal.UppaalXML.TypeDeclaration");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleLocalDeclarations"


    // $ANTLR start "entryRuleSystemDeclarations"
    // InternalUppaalXML.g:2813:1: entryRuleSystemDeclarations returns [EObject current=null] : iv_ruleSystemDeclarations= ruleSystemDeclarations EOF ;
    public final EObject entryRuleSystemDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSystemDeclarations = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:2815:2: (iv_ruleSystemDeclarations= ruleSystemDeclarations EOF )
            // InternalUppaalXML.g:2816:2: iv_ruleSystemDeclarations= ruleSystemDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSystemDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSystemDeclarations=ruleSystemDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSystemDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSystemDeclarations"


    // $ANTLR start "ruleSystemDeclarations"
    // InternalUppaalXML.g:2825:1: ruleSystemDeclarations returns [EObject current=null] : ( () ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration ) ) ) | ( (lv_system_2_0= ruleSystem ) ) | ( (lv_progressMeasure_3_0= ruleProgressMeasure ) ) )* ) ;
    public final EObject ruleSystemDeclarations() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_1_1 = null;

        EObject lv_declaration_1_2 = null;

        EObject lv_declaration_1_3 = null;

        EObject lv_system_2_0 = null;

        EObject lv_progressMeasure_3_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:2832:2: ( ( () ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration ) ) ) | ( (lv_system_2_0= ruleSystem ) ) | ( (lv_progressMeasure_3_0= ruleProgressMeasure ) ) )* ) )
            // InternalUppaalXML.g:2833:2: ( () ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration ) ) ) | ( (lv_system_2_0= ruleSystem ) ) | ( (lv_progressMeasure_3_0= ruleProgressMeasure ) ) )* )
            {
            // InternalUppaalXML.g:2833:2: ( () ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration ) ) ) | ( (lv_system_2_0= ruleSystem ) ) | ( (lv_progressMeasure_3_0= ruleProgressMeasure ) ) )* )
            // InternalUppaalXML.g:2834:3: () ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration ) ) ) | ( (lv_system_2_0= ruleSystem ) ) | ( (lv_progressMeasure_3_0= ruleProgressMeasure ) ) )*
            {
            // InternalUppaalXML.g:2834:3: ()
            // InternalUppaalXML.g:2835:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSystemDeclarationsAccess().getSystemDeclarationsAction_0(),
              					current);
              			
            }

            }

            // InternalUppaalXML.g:2841:3: ( ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration ) ) ) | ( (lv_system_2_0= ruleSystem ) ) | ( (lv_progressMeasure_3_0= ruleProgressMeasure ) ) )*
            loop41:
            do {
                int alt41=4;
                switch ( input.LA(1) ) {
                case RULE_ID:
                case 15:
                case 17:
                case 19:
                case 20:
                case 21:
                case 23:
                case 24:
                case 26:
                case 27:
                case 30:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 39:
                case 40:
                case 41:
                case 46:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 79:
                case 80:
                case 81:
                case 83:
                case 99:
                case 135:
                    {
                    alt41=1;
                    }
                    break;
                case 22:
                    {
                    alt41=2;
                    }
                    break;
                case 48:
                    {
                    alt41=3;
                    }
                    break;

                }

                switch (alt41) {
            	case 1 :
            	    // InternalUppaalXML.g:2842:4: ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration ) ) )
            	    {
            	    // InternalUppaalXML.g:2842:4: ( ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration ) ) )
            	    // InternalUppaalXML.g:2843:5: ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration ) )
            	    {
            	    // InternalUppaalXML.g:2843:5: ( (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration ) )
            	    // InternalUppaalXML.g:2844:6: (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration )
            	    {
            	    // InternalUppaalXML.g:2844:6: (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration )
            	    int alt40=3;
            	    alt40 = dfa40.predict(input);
            	    switch (alt40) {
            	        case 1 :
            	            // InternalUppaalXML.g:2845:7: lv_declaration_1_1= ruleTypedDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getSystemDeclarationsAccess().getDeclarationTypedDeclarationParserRuleCall_1_0_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_56);
            	            lv_declaration_1_1=ruleTypedDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getSystemDeclarationsRule());
            	              							}
            	              							add(
            	              								current,
            	              								"declaration",
            	              								lv_declaration_1_1,
            	              								"org.muml.uppaal.UppaalXML.TypedDeclaration");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalUppaalXML.g:2861:7: lv_declaration_1_2= ruleTypeDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getSystemDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_56);
            	            lv_declaration_1_2=ruleTypeDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getSystemDeclarationsRule());
            	              							}
            	              							add(
            	              								current,
            	              								"declaration",
            	              								lv_declaration_1_2,
            	              								"org.muml.uppaal.UppaalXML.TypeDeclaration");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalUppaalXML.g:2877:7: lv_declaration_1_3= ruleTemplateDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getSystemDeclarationsAccess().getDeclarationTemplateDeclarationParserRuleCall_1_0_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_56);
            	            lv_declaration_1_3=ruleTemplateDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getSystemDeclarationsRule());
            	              							}
            	              							add(
            	              								current,
            	              								"declaration",
            	              								lv_declaration_1_3,
            	              								"org.muml.uppaal.UppaalXML.TemplateDeclaration");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalUppaalXML.g:2896:4: ( (lv_system_2_0= ruleSystem ) )
            	    {
            	    // InternalUppaalXML.g:2896:4: ( (lv_system_2_0= ruleSystem ) )
            	    // InternalUppaalXML.g:2897:5: (lv_system_2_0= ruleSystem )
            	    {
            	    // InternalUppaalXML.g:2897:5: (lv_system_2_0= ruleSystem )
            	    // InternalUppaalXML.g:2898:6: lv_system_2_0= ruleSystem
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSystemDeclarationsAccess().getSystemSystemParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_system_2_0=ruleSystem();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSystemDeclarationsRule());
            	      						}
            	      						set(
            	      							current,
            	      							"system",
            	      							lv_system_2_0,
            	      							"org.muml.uppaal.UppaalXML.System");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalUppaalXML.g:2916:4: ( (lv_progressMeasure_3_0= ruleProgressMeasure ) )
            	    {
            	    // InternalUppaalXML.g:2916:4: ( (lv_progressMeasure_3_0= ruleProgressMeasure ) )
            	    // InternalUppaalXML.g:2917:5: (lv_progressMeasure_3_0= ruleProgressMeasure )
            	    {
            	    // InternalUppaalXML.g:2917:5: (lv_progressMeasure_3_0= ruleProgressMeasure )
            	    // InternalUppaalXML.g:2918:6: lv_progressMeasure_3_0= ruleProgressMeasure
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSystemDeclarationsAccess().getProgressMeasureProgressMeasureParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_progressMeasure_3_0=ruleProgressMeasure();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSystemDeclarationsRule());
            	      						}
            	      						set(
            	      							current,
            	      							"progressMeasure",
            	      							lv_progressMeasure_3_0,
            	      							"org.muml.uppaal.UppaalXML.ProgressMeasure");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSystemDeclarations"


    // $ANTLR start "entryRuleProgressMeasure"
    // InternalUppaalXML.g:2943:1: entryRuleProgressMeasure returns [EObject current=null] : iv_ruleProgressMeasure= ruleProgressMeasure EOF ;
    public final EObject entryRuleProgressMeasure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProgressMeasure = null;


        try {
            // InternalUppaalXML.g:2943:56: (iv_ruleProgressMeasure= ruleProgressMeasure EOF )
            // InternalUppaalXML.g:2944:2: iv_ruleProgressMeasure= ruleProgressMeasure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProgressMeasureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProgressMeasure=ruleProgressMeasure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProgressMeasure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProgressMeasure"


    // $ANTLR start "ruleProgressMeasure"
    // InternalUppaalXML.g:2950:1: ruleProgressMeasure returns [EObject current=null] : (otherlv_0= 'progress' otherlv_1= '{' ( ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';' )+ otherlv_4= '}' ) ;
    public final EObject ruleProgressMeasure() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:2956:2: ( (otherlv_0= 'progress' otherlv_1= '{' ( ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';' )+ otherlv_4= '}' ) )
            // InternalUppaalXML.g:2957:2: (otherlv_0= 'progress' otherlv_1= '{' ( ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';' )+ otherlv_4= '}' )
            {
            // InternalUppaalXML.g:2957:2: (otherlv_0= 'progress' otherlv_1= '{' ( ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';' )+ otherlv_4= '}' )
            // InternalUppaalXML.g:2958:3: otherlv_0= 'progress' otherlv_1= '{' ( ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';' )+ otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,48,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getProgressMeasureAccess().getProgressKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,49,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getProgressMeasureAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalUppaalXML.g:2966:3: ( ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';' )+
            int cnt42=0;
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=RULE_ID && LA42_0<=RULE_INT)||LA42_0==15||LA42_0==17||(LA42_0>=19 && LA42_0<=21)||(LA42_0>=23 && LA42_0<=24)||(LA42_0>=26 && LA42_0<=27)||LA42_0==30||(LA42_0>=32 && LA42_0<=36)||(LA42_0>=39 && LA42_0<=41)||LA42_0==46||LA42_0==52||LA42_0==57||LA42_0==60||LA42_0==72||LA42_0==74||(LA42_0>=76 && LA42_0<=81)||(LA42_0>=94 && LA42_0<=95)||LA42_0==109||LA42_0==135) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalUppaalXML.g:2967:4: ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';'
            	    {
            	    // InternalUppaalXML.g:2967:4: ( (lv_expression_2_0= ruleExpression ) )
            	    // InternalUppaalXML.g:2968:5: (lv_expression_2_0= ruleExpression )
            	    {
            	    // InternalUppaalXML.g:2968:5: (lv_expression_2_0= ruleExpression )
            	    // InternalUppaalXML.g:2969:6: lv_expression_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getProgressMeasureAccess().getExpressionExpressionParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_58);
            	    lv_expression_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getProgressMeasureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expression",
            	      							lv_expression_2_0,
            	      							"org.muml.uppaal.UppaalXML.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,50,FOLLOW_59); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getProgressMeasureAccess().getSemicolonKeyword_2_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt42 >= 1 ) break loop42;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(42, input);
                        throw eee;
                }
                cnt42++;
            } while (true);

            otherlv_4=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getProgressMeasureAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProgressMeasure"


    // $ANTLR start "entryRuleTemplateDeclaration"
    // InternalUppaalXML.g:2999:1: entryRuleTemplateDeclaration returns [EObject current=null] : iv_ruleTemplateDeclaration= ruleTemplateDeclaration EOF ;
    public final EObject entryRuleTemplateDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateDeclaration = null;


        try {
            // InternalUppaalXML.g:2999:60: (iv_ruleTemplateDeclaration= ruleTemplateDeclaration EOF )
            // InternalUppaalXML.g:3000:2: iv_ruleTemplateDeclaration= ruleTemplateDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateDeclaration=ruleTemplateDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateDeclaration"


    // $ANTLR start "ruleTemplateDeclaration"
    // InternalUppaalXML.g:3006:1: ruleTemplateDeclaration returns [EObject current=null] : ( ( (lv_declaredTemplate_0_0= ruleRedefinedTemplate ) ) otherlv_1= '(' ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )? otherlv_5= ')' otherlv_6= ';' ) ;
    public final EObject ruleTemplateDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_declaredTemplate_0_0 = null;

        EObject lv_argument_2_0 = null;

        EObject lv_argument_4_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3012:2: ( ( ( (lv_declaredTemplate_0_0= ruleRedefinedTemplate ) ) otherlv_1= '(' ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )? otherlv_5= ')' otherlv_6= ';' ) )
            // InternalUppaalXML.g:3013:2: ( ( (lv_declaredTemplate_0_0= ruleRedefinedTemplate ) ) otherlv_1= '(' ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )? otherlv_5= ')' otherlv_6= ';' )
            {
            // InternalUppaalXML.g:3013:2: ( ( (lv_declaredTemplate_0_0= ruleRedefinedTemplate ) ) otherlv_1= '(' ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )? otherlv_5= ')' otherlv_6= ';' )
            // InternalUppaalXML.g:3014:3: ( (lv_declaredTemplate_0_0= ruleRedefinedTemplate ) ) otherlv_1= '(' ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )? otherlv_5= ')' otherlv_6= ';'
            {
            // InternalUppaalXML.g:3014:3: ( (lv_declaredTemplate_0_0= ruleRedefinedTemplate ) )
            // InternalUppaalXML.g:3015:4: (lv_declaredTemplate_0_0= ruleRedefinedTemplate )
            {
            // InternalUppaalXML.g:3015:4: (lv_declaredTemplate_0_0= ruleRedefinedTemplate )
            // InternalUppaalXML.g:3016:5: lv_declaredTemplate_0_0= ruleRedefinedTemplate
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTemplateDeclarationAccess().getDeclaredTemplateRedefinedTemplateParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_declaredTemplate_0_0=ruleRedefinedTemplate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTemplateDeclarationRule());
              					}
              					set(
              						current,
              						"declaredTemplate",
              						lv_declaredTemplate_0_0,
              						"org.muml.uppaal.UppaalXML.RedefinedTemplate");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,52,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTemplateDeclarationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalUppaalXML.g:3037:3: ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( ((LA44_0>=RULE_ID && LA44_0<=RULE_INT)||LA44_0==15||LA44_0==17||(LA44_0>=19 && LA44_0<=21)||(LA44_0>=23 && LA44_0<=24)||(LA44_0>=26 && LA44_0<=27)||LA44_0==30||(LA44_0>=32 && LA44_0<=36)||(LA44_0>=39 && LA44_0<=41)||LA44_0==46||LA44_0==52||LA44_0==57||LA44_0==60||LA44_0==72||LA44_0==74||(LA44_0>=76 && LA44_0<=81)||(LA44_0>=94 && LA44_0<=95)||LA44_0==109||LA44_0==135) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalUppaalXML.g:3038:4: ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )*
                    {
                    // InternalUppaalXML.g:3038:4: ( (lv_argument_2_0= ruleExpression ) )
                    // InternalUppaalXML.g:3039:5: (lv_argument_2_0= ruleExpression )
                    {
                    // InternalUppaalXML.g:3039:5: (lv_argument_2_0= ruleExpression )
                    // InternalUppaalXML.g:3040:6: lv_argument_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTemplateDeclarationAccess().getArgumentExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_argument_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTemplateDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"argument",
                      							lv_argument_2_0,
                      							"org.muml.uppaal.UppaalXML.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalUppaalXML.g:3057:4: (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )*
                    loop43:
                    do {
                        int alt43=2;
                        int LA43_0 = input.LA(1);

                        if ( (LA43_0==28) ) {
                            alt43=1;
                        }


                        switch (alt43) {
                    	case 1 :
                    	    // InternalUppaalXML.g:3058:5: otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,28,FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getTemplateDeclarationAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalUppaalXML.g:3062:5: ( (lv_argument_4_0= ruleExpression ) )
                    	    // InternalUppaalXML.g:3063:6: (lv_argument_4_0= ruleExpression )
                    	    {
                    	    // InternalUppaalXML.g:3063:6: (lv_argument_4_0= ruleExpression )
                    	    // InternalUppaalXML.g:3064:7: lv_argument_4_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTemplateDeclarationAccess().getArgumentExpressionParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_argument_4_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTemplateDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"argument",
                    	      								lv_argument_4_0,
                    	      								"org.muml.uppaal.UppaalXML.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop43;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,53,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTemplateDeclarationAccess().getRightParenthesisKeyword_3());
              		
            }
            otherlv_6=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTemplateDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateDeclaration"


    // $ANTLR start "entryRuleRedefinedTemplate"
    // InternalUppaalXML.g:3095:1: entryRuleRedefinedTemplate returns [EObject current=null] : iv_ruleRedefinedTemplate= ruleRedefinedTemplate EOF ;
    public final EObject entryRuleRedefinedTemplate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRedefinedTemplate = null;


        try {
            // InternalUppaalXML.g:3095:58: (iv_ruleRedefinedTemplate= ruleRedefinedTemplate EOF )
            // InternalUppaalXML.g:3096:2: iv_ruleRedefinedTemplate= ruleRedefinedTemplate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRedefinedTemplateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRedefinedTemplate=ruleRedefinedTemplate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRedefinedTemplate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRedefinedTemplate"


    // $ANTLR start "ruleRedefinedTemplate"
    // InternalUppaalXML.g:3102:1: ruleRedefinedTemplate returns [EObject current=null] : ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '=' ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleRedefinedTemplate() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3108:2: ( ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '=' ( (otherlv_2= RULE_ID ) ) ) )
            // InternalUppaalXML.g:3109:2: ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '=' ( (otherlv_2= RULE_ID ) ) )
            {
            // InternalUppaalXML.g:3109:2: ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '=' ( (otherlv_2= RULE_ID ) ) )
            // InternalUppaalXML.g:3110:3: ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '=' ( (otherlv_2= RULE_ID ) )
            {
            // InternalUppaalXML.g:3110:3: ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) )
            // InternalUppaalXML.g:3111:4: (lv_name_0_0= ruleUPPAAL_IDENTIFIER )
            {
            // InternalUppaalXML.g:3111:4: (lv_name_0_0= ruleUPPAAL_IDENTIFIER )
            // InternalUppaalXML.g:3112:5: lv_name_0_0= ruleUPPAAL_IDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRedefinedTemplateAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_name_0_0=ruleUPPAAL_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRedefinedTemplateRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.muml.uppaal.UppaalXML.UPPAAL_IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRedefinedTemplateAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalUppaalXML.g:3133:3: ( (otherlv_2= RULE_ID ) )
            // InternalUppaalXML.g:3134:4: (otherlv_2= RULE_ID )
            {
            // InternalUppaalXML.g:3134:4: (otherlv_2= RULE_ID )
            // InternalUppaalXML.g:3135:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRedefinedTemplateRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getRedefinedTemplateAccess().getReferredTemplateTemplateCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefinedTemplate"


    // $ANTLR start "entryRuleSystem"
    // InternalUppaalXML.g:3150:1: entryRuleSystem returns [EObject current=null] : iv_ruleSystem= ruleSystem EOF ;
    public final EObject entryRuleSystem() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSystem = null;


        try {
            // InternalUppaalXML.g:3150:47: (iv_ruleSystem= ruleSystem EOF )
            // InternalUppaalXML.g:3151:2: iv_ruleSystem= ruleSystem EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSystemRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSystem=ruleSystem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSystem; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSystem"


    // $ANTLR start "ruleSystem"
    // InternalUppaalXML.g:3157:1: ruleSystem returns [EObject current=null] : (otherlv_0= 'system' ( (lv_instantiationList_1_0= ruleInstantiationList ) ) (otherlv_2= '&lt;' ( (lv_instantiationList_3_0= ruleInstantiationList ) ) )* otherlv_4= ';' ) ;
    public final EObject ruleSystem() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_instantiationList_1_0 = null;

        EObject lv_instantiationList_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3163:2: ( (otherlv_0= 'system' ( (lv_instantiationList_1_0= ruleInstantiationList ) ) (otherlv_2= '&lt;' ( (lv_instantiationList_3_0= ruleInstantiationList ) ) )* otherlv_4= ';' ) )
            // InternalUppaalXML.g:3164:2: (otherlv_0= 'system' ( (lv_instantiationList_1_0= ruleInstantiationList ) ) (otherlv_2= '&lt;' ( (lv_instantiationList_3_0= ruleInstantiationList ) ) )* otherlv_4= ';' )
            {
            // InternalUppaalXML.g:3164:2: (otherlv_0= 'system' ( (lv_instantiationList_1_0= ruleInstantiationList ) ) (otherlv_2= '&lt;' ( (lv_instantiationList_3_0= ruleInstantiationList ) ) )* otherlv_4= ';' )
            // InternalUppaalXML.g:3165:3: otherlv_0= 'system' ( (lv_instantiationList_1_0= ruleInstantiationList ) ) (otherlv_2= '&lt;' ( (lv_instantiationList_3_0= ruleInstantiationList ) ) )* otherlv_4= ';'
            {
            otherlv_0=(Token)match(input,22,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSystemKeyword_0());
              		
            }
            // InternalUppaalXML.g:3169:3: ( (lv_instantiationList_1_0= ruleInstantiationList ) )
            // InternalUppaalXML.g:3170:4: (lv_instantiationList_1_0= ruleInstantiationList )
            {
            // InternalUppaalXML.g:3170:4: (lv_instantiationList_1_0= ruleInstantiationList )
            // InternalUppaalXML.g:3171:5: lv_instantiationList_1_0= ruleInstantiationList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSystemAccess().getInstantiationListInstantiationListParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_63);
            lv_instantiationList_1_0=ruleInstantiationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSystemRule());
              					}
              					add(
              						current,
              						"instantiationList",
              						lv_instantiationList_1_0,
              						"org.muml.uppaal.UppaalXML.InstantiationList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:3188:3: (otherlv_2= '&lt;' ( (lv_instantiationList_3_0= ruleInstantiationList ) ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==54) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalUppaalXML.g:3189:4: otherlv_2= '&lt;' ( (lv_instantiationList_3_0= ruleInstantiationList ) )
            	    {
            	    otherlv_2=(Token)match(input,54,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getLtKeyword_2_0());
            	      			
            	    }
            	    // InternalUppaalXML.g:3193:4: ( (lv_instantiationList_3_0= ruleInstantiationList ) )
            	    // InternalUppaalXML.g:3194:5: (lv_instantiationList_3_0= ruleInstantiationList )
            	    {
            	    // InternalUppaalXML.g:3194:5: (lv_instantiationList_3_0= ruleInstantiationList )
            	    // InternalUppaalXML.g:3195:6: lv_instantiationList_3_0= ruleInstantiationList
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSystemAccess().getInstantiationListInstantiationListParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_63);
            	    lv_instantiationList_3_0=ruleInstantiationList();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSystemRule());
            	      						}
            	      						add(
            	      							current,
            	      							"instantiationList",
            	      							lv_instantiationList_3_0,
            	      							"org.muml.uppaal.UppaalXML.InstantiationList");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            otherlv_4=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSystemAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSystem"


    // $ANTLR start "entryRuleInstantiationList"
    // InternalUppaalXML.g:3221:1: entryRuleInstantiationList returns [EObject current=null] : iv_ruleInstantiationList= ruleInstantiationList EOF ;
    public final EObject entryRuleInstantiationList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInstantiationList = null;


        try {
            // InternalUppaalXML.g:3221:58: (iv_ruleInstantiationList= ruleInstantiationList EOF )
            // InternalUppaalXML.g:3222:2: iv_ruleInstantiationList= ruleInstantiationList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInstantiationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInstantiationList=ruleInstantiationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInstantiationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInstantiationList"


    // $ANTLR start "ruleInstantiationList"
    // InternalUppaalXML.g:3228:1: ruleInstantiationList returns [EObject current=null] : ( ( ( ruleUPPAAL_IDENTIFIER ) ) (otherlv_1= ',' ( ( ruleUPPAAL_IDENTIFIER ) ) )* ) ;
    public final EObject ruleInstantiationList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:3234:2: ( ( ( ( ruleUPPAAL_IDENTIFIER ) ) (otherlv_1= ',' ( ( ruleUPPAAL_IDENTIFIER ) ) )* ) )
            // InternalUppaalXML.g:3235:2: ( ( ( ruleUPPAAL_IDENTIFIER ) ) (otherlv_1= ',' ( ( ruleUPPAAL_IDENTIFIER ) ) )* )
            {
            // InternalUppaalXML.g:3235:2: ( ( ( ruleUPPAAL_IDENTIFIER ) ) (otherlv_1= ',' ( ( ruleUPPAAL_IDENTIFIER ) ) )* )
            // InternalUppaalXML.g:3236:3: ( ( ruleUPPAAL_IDENTIFIER ) ) (otherlv_1= ',' ( ( ruleUPPAAL_IDENTIFIER ) ) )*
            {
            // InternalUppaalXML.g:3236:3: ( ( ruleUPPAAL_IDENTIFIER ) )
            // InternalUppaalXML.g:3237:4: ( ruleUPPAAL_IDENTIFIER )
            {
            // InternalUppaalXML.g:3237:4: ( ruleUPPAAL_IDENTIFIER )
            // InternalUppaalXML.g:3238:5: ruleUPPAAL_IDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getInstantiationListRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_64);
            ruleUPPAAL_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:3252:3: (otherlv_1= ',' ( ( ruleUPPAAL_IDENTIFIER ) ) )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==28) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalUppaalXML.g:3253:4: otherlv_1= ',' ( ( ruleUPPAAL_IDENTIFIER ) )
            	    {
            	    otherlv_1=(Token)match(input,28,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getInstantiationListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalUppaalXML.g:3257:4: ( ( ruleUPPAAL_IDENTIFIER ) )
            	    // InternalUppaalXML.g:3258:5: ( ruleUPPAAL_IDENTIFIER )
            	    {
            	    // InternalUppaalXML.g:3258:5: ( ruleUPPAAL_IDENTIFIER )
            	    // InternalUppaalXML.g:3259:6: ruleUPPAAL_IDENTIFIER
            	    {
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getInstantiationListRule());
            	      						}
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateCrossReference_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_64);
            	    ruleUPPAAL_IDENTIFIER();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInstantiationList"


    // $ANTLR start "entryRuleTypedDeclaration"
    // InternalUppaalXML.g:3278:1: entryRuleTypedDeclaration returns [EObject current=null] : iv_ruleTypedDeclaration= ruleTypedDeclaration EOF ;
    public final EObject entryRuleTypedDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedDeclaration = null;


        try {
            // InternalUppaalXML.g:3278:57: (iv_ruleTypedDeclaration= ruleTypedDeclaration EOF )
            // InternalUppaalXML.g:3279:2: iv_ruleTypedDeclaration= ruleTypedDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypedDeclaration=ruleTypedDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedDeclaration"


    // $ANTLR start "ruleTypedDeclaration"
    // InternalUppaalXML.g:3285:1: ruleTypedDeclaration returns [EObject current=null] : ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( ( (lv_elements_1_0= ruleFunction ) ) | ( ( (lv_elements_2_0= ruleVariable ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) ) )* otherlv_5= ';' ) ) ) ;
    public final EObject ruleTypedDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_typeDefinition_0_0 = null;

        EObject lv_elements_1_0 = null;

        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3291:2: ( ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( ( (lv_elements_1_0= ruleFunction ) ) | ( ( (lv_elements_2_0= ruleVariable ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) ) )* otherlv_5= ';' ) ) ) )
            // InternalUppaalXML.g:3292:2: ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( ( (lv_elements_1_0= ruleFunction ) ) | ( ( (lv_elements_2_0= ruleVariable ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) ) )* otherlv_5= ';' ) ) )
            {
            // InternalUppaalXML.g:3292:2: ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( ( (lv_elements_1_0= ruleFunction ) ) | ( ( (lv_elements_2_0= ruleVariable ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) ) )* otherlv_5= ';' ) ) )
            // InternalUppaalXML.g:3293:3: ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( ( (lv_elements_1_0= ruleFunction ) ) | ( ( (lv_elements_2_0= ruleVariable ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) ) )* otherlv_5= ';' ) )
            {
            // InternalUppaalXML.g:3293:3: ( (lv_typeDefinition_0_0= ruleTypeExpression ) )
            // InternalUppaalXML.g:3294:4: (lv_typeDefinition_0_0= ruleTypeExpression )
            {
            // InternalUppaalXML.g:3294:4: (lv_typeDefinition_0_0= ruleTypeExpression )
            // InternalUppaalXML.g:3295:5: lv_typeDefinition_0_0= ruleTypeExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedDeclarationAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_typeDefinition_0_0=ruleTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedDeclarationRule());
              					}
              					set(
              						current,
              						"typeDefinition",
              						lv_typeDefinition_0_0,
              						"org.muml.uppaal.UppaalXML.TypeExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:3312:3: ( ( (lv_elements_1_0= ruleFunction ) ) | ( ( (lv_elements_2_0= ruleVariable ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) ) )* otherlv_5= ';' ) )
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalUppaalXML.g:3313:4: ( (lv_elements_1_0= ruleFunction ) )
                    {
                    // InternalUppaalXML.g:3313:4: ( (lv_elements_1_0= ruleFunction ) )
                    // InternalUppaalXML.g:3314:5: (lv_elements_1_0= ruleFunction )
                    {
                    // InternalUppaalXML.g:3314:5: (lv_elements_1_0= ruleFunction )
                    // InternalUppaalXML.g:3315:6: lv_elements_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypedDeclarationAccess().getElementsFunctionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_elements_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypedDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_1_0,
                      							"org.muml.uppaal.UppaalXML.Function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:3333:4: ( ( (lv_elements_2_0= ruleVariable ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) ) )* otherlv_5= ';' )
                    {
                    // InternalUppaalXML.g:3333:4: ( ( (lv_elements_2_0= ruleVariable ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) ) )* otherlv_5= ';' )
                    // InternalUppaalXML.g:3334:5: ( (lv_elements_2_0= ruleVariable ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) ) )* otherlv_5= ';'
                    {
                    // InternalUppaalXML.g:3334:5: ( (lv_elements_2_0= ruleVariable ) )
                    // InternalUppaalXML.g:3335:6: (lv_elements_2_0= ruleVariable )
                    {
                    // InternalUppaalXML.g:3335:6: (lv_elements_2_0= ruleVariable )
                    // InternalUppaalXML.g:3336:7: lv_elements_2_0= ruleVariable
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getTypedDeclarationAccess().getElementsVariableParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_65);
                    lv_elements_2_0=ruleVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getTypedDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"elements",
                      								lv_elements_2_0,
                      								"org.muml.uppaal.UppaalXML.Variable");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalUppaalXML.g:3353:5: (otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) ) )*
                    loop47:
                    do {
                        int alt47=2;
                        int LA47_0 = input.LA(1);

                        if ( (LA47_0==28) ) {
                            alt47=1;
                        }


                        switch (alt47) {
                    	case 1 :
                    	    // InternalUppaalXML.g:3354:6: otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) )
                    	    {
                    	    otherlv_3=(Token)match(input,28,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getTypedDeclarationAccess().getCommaKeyword_1_1_1_0());
                    	      					
                    	    }
                    	    // InternalUppaalXML.g:3358:6: ( (lv_elements_4_0= ruleVariable ) )
                    	    // InternalUppaalXML.g:3359:7: (lv_elements_4_0= ruleVariable )
                    	    {
                    	    // InternalUppaalXML.g:3359:7: (lv_elements_4_0= ruleVariable )
                    	    // InternalUppaalXML.g:3360:8: lv_elements_4_0= ruleVariable
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getTypedDeclarationAccess().getElementsVariableParserRuleCall_1_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_65);
                    	    lv_elements_4_0=ruleVariable();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getTypedDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"elements",
                    	      									lv_elements_4_0,
                    	      									"org.muml.uppaal.UppaalXML.Variable");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop47;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTypedDeclarationAccess().getSemicolonKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedDeclaration"


    // $ANTLR start "entryRuleTypedElement"
    // InternalUppaalXML.g:3388:1: entryRuleTypedElement returns [EObject current=null] : iv_ruleTypedElement= ruleTypedElement EOF ;
    public final EObject entryRuleTypedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedElement = null;


        try {
            // InternalUppaalXML.g:3388:53: (iv_ruleTypedElement= ruleTypedElement EOF )
            // InternalUppaalXML.g:3389:2: iv_ruleTypedElement= ruleTypedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypedElement=ruleTypedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedElement"


    // $ANTLR start "ruleTypedElement"
    // InternalUppaalXML.g:3395:1: ruleTypedElement returns [EObject current=null] : ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleVariable ) ) (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )* ) ;
    public final EObject ruleTypedElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_typeDefinition_0_0 = null;

        EObject lv_elements_1_0 = null;

        EObject lv_elements_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3401:2: ( ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleVariable ) ) (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )* ) )
            // InternalUppaalXML.g:3402:2: ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleVariable ) ) (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )* )
            {
            // InternalUppaalXML.g:3402:2: ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleVariable ) ) (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )* )
            // InternalUppaalXML.g:3403:3: ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleVariable ) ) (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )*
            {
            // InternalUppaalXML.g:3403:3: ( (lv_typeDefinition_0_0= ruleTypeExpression ) )
            // InternalUppaalXML.g:3404:4: (lv_typeDefinition_0_0= ruleTypeExpression )
            {
            // InternalUppaalXML.g:3404:4: (lv_typeDefinition_0_0= ruleTypeExpression )
            // InternalUppaalXML.g:3405:5: lv_typeDefinition_0_0= ruleTypeExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedElementAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_typeDefinition_0_0=ruleTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedElementRule());
              					}
              					set(
              						current,
              						"typeDefinition",
              						lv_typeDefinition_0_0,
              						"org.muml.uppaal.UppaalXML.TypeExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:3422:3: ( (lv_elements_1_0= ruleVariable ) )
            // InternalUppaalXML.g:3423:4: (lv_elements_1_0= ruleVariable )
            {
            // InternalUppaalXML.g:3423:4: (lv_elements_1_0= ruleVariable )
            // InternalUppaalXML.g:3424:5: lv_elements_1_0= ruleVariable
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedElementAccess().getElementsVariableParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_64);
            lv_elements_1_0=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedElementRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_1_0,
              						"org.muml.uppaal.UppaalXML.Variable");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:3441:3: (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==28) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalUppaalXML.g:3442:4: otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) )
            	    {
            	    otherlv_2=(Token)match(input,28,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getTypedElementAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalUppaalXML.g:3446:4: ( (lv_elements_3_0= ruleVariable ) )
            	    // InternalUppaalXML.g:3447:5: (lv_elements_3_0= ruleVariable )
            	    {
            	    // InternalUppaalXML.g:3447:5: (lv_elements_3_0= ruleVariable )
            	    // InternalUppaalXML.g:3448:6: lv_elements_3_0= ruleVariable
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypedElementAccess().getElementsVariableParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_64);
            	    lv_elements_3_0=ruleVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypedElementRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_3_0,
            	      							"org.muml.uppaal.UppaalXML.Variable");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedElement"


    // $ANTLR start "entryRuleVariableNameOnly"
    // InternalUppaalXML.g:3470:1: entryRuleVariableNameOnly returns [EObject current=null] : iv_ruleVariableNameOnly= ruleVariableNameOnly EOF ;
    public final EObject entryRuleVariableNameOnly() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableNameOnly = null;


        try {
            // InternalUppaalXML.g:3470:57: (iv_ruleVariableNameOnly= ruleVariableNameOnly EOF )
            // InternalUppaalXML.g:3471:2: iv_ruleVariableNameOnly= ruleVariableNameOnly EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableNameOnlyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableNameOnly=ruleVariableNameOnly();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableNameOnly; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableNameOnly"


    // $ANTLR start "ruleVariableNameOnly"
    // InternalUppaalXML.g:3477:1: ruleVariableNameOnly returns [EObject current=null] : ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) ;
    public final EObject ruleVariableNameOnly() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3483:2: ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) )
            // InternalUppaalXML.g:3484:2: ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) )
            {
            // InternalUppaalXML.g:3484:2: ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) )
            // InternalUppaalXML.g:3485:3: (lv_name_0_0= ruleUPPAAL_IDENTIFIER )
            {
            // InternalUppaalXML.g:3485:3: (lv_name_0_0= ruleUPPAAL_IDENTIFIER )
            // InternalUppaalXML.g:3486:4: lv_name_0_0= ruleUPPAAL_IDENTIFIER
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getVariableNameOnlyAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleUPPAAL_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getVariableNameOnlyRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.muml.uppaal.UppaalXML.UPPAAL_IDENTIFIER");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableNameOnly"


    // $ANTLR start "entryRuleVariable"
    // InternalUppaalXML.g:3506:1: entryRuleVariable returns [EObject current=null] : iv_ruleVariable= ruleVariable EOF ;
    public final EObject entryRuleVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariable = null;


        try {
            // InternalUppaalXML.g:3506:49: (iv_ruleVariable= ruleVariable EOF )
            // InternalUppaalXML.g:3507:2: iv_ruleVariable= ruleVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariable=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariable"


    // $ANTLR start "ruleVariable"
    // InternalUppaalXML.g:3513:1: ruleVariable returns [EObject current=null] : ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) (otherlv_1= '[' ( ( (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification ) ) ) otherlv_3= ']' )* (otherlv_4= '=' ( (lv_initializer_5_0= ruleInitializer ) ) )? ) ;
    public final EObject ruleVariable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_index_2_1 = null;

        EObject lv_index_2_2 = null;

        EObject lv_initializer_5_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3519:2: ( ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) (otherlv_1= '[' ( ( (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification ) ) ) otherlv_3= ']' )* (otherlv_4= '=' ( (lv_initializer_5_0= ruleInitializer ) ) )? ) )
            // InternalUppaalXML.g:3520:2: ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) (otherlv_1= '[' ( ( (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification ) ) ) otherlv_3= ']' )* (otherlv_4= '=' ( (lv_initializer_5_0= ruleInitializer ) ) )? )
            {
            // InternalUppaalXML.g:3520:2: ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) (otherlv_1= '[' ( ( (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification ) ) ) otherlv_3= ']' )* (otherlv_4= '=' ( (lv_initializer_5_0= ruleInitializer ) ) )? )
            // InternalUppaalXML.g:3521:3: ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) (otherlv_1= '[' ( ( (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification ) ) ) otherlv_3= ']' )* (otherlv_4= '=' ( (lv_initializer_5_0= ruleInitializer ) ) )?
            {
            // InternalUppaalXML.g:3521:3: ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) )
            // InternalUppaalXML.g:3522:4: (lv_name_0_0= ruleUPPAAL_IDENTIFIER )
            {
            // InternalUppaalXML.g:3522:4: (lv_name_0_0= ruleUPPAAL_IDENTIFIER )
            // InternalUppaalXML.g:3523:5: lv_name_0_0= ruleUPPAAL_IDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_66);
            lv_name_0_0=ruleUPPAAL_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.muml.uppaal.UppaalXML.UPPAAL_IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:3540:3: (otherlv_1= '[' ( ( (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification ) ) ) otherlv_3= ']' )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==55) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalUppaalXML.g:3541:4: otherlv_1= '[' ( ( (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification ) ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,55,FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getVariableAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalUppaalXML.g:3545:4: ( ( (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification ) ) )
            	    // InternalUppaalXML.g:3546:5: ( (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification ) )
            	    {
            	    // InternalUppaalXML.g:3546:5: ( (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification ) )
            	    // InternalUppaalXML.g:3547:6: (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification )
            	    {
            	    // InternalUppaalXML.g:3547:6: (lv_index_2_1= ruleExpression | lv_index_2_2= ruleScalarTypeSpecification )
            	    int alt50=2;
            	    int LA50_0 = input.LA(1);

            	    if ( ((LA50_0>=RULE_ID && LA50_0<=RULE_INT)||LA50_0==15||LA50_0==17||(LA50_0>=19 && LA50_0<=21)||(LA50_0>=23 && LA50_0<=24)||(LA50_0>=26 && LA50_0<=27)||LA50_0==30||(LA50_0>=32 && LA50_0<=36)||(LA50_0>=39 && LA50_0<=41)||LA50_0==46||LA50_0==52||LA50_0==57||LA50_0==60||LA50_0==72||LA50_0==74||(LA50_0>=76 && LA50_0<=81)||(LA50_0>=94 && LA50_0<=95)||LA50_0==109||LA50_0==135) ) {
            	        alt50=1;
            	    }
            	    else if ( (LA50_0==62) ) {
            	        alt50=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 50, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt50) {
            	        case 1 :
            	            // InternalUppaalXML.g:3548:7: lv_index_2_1= ruleExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getVariableAccess().getIndexExpressionParserRuleCall_1_1_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_68);
            	            lv_index_2_1=ruleExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getVariableRule());
            	              							}
            	              							add(
            	              								current,
            	              								"index",
            	              								lv_index_2_1,
            	              								"org.muml.uppaal.UppaalXML.Expression");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalUppaalXML.g:3564:7: lv_index_2_2= ruleScalarTypeSpecification
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getVariableAccess().getIndexScalarTypeSpecificationParserRuleCall_1_1_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_68);
            	            lv_index_2_2=ruleScalarTypeSpecification();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getVariableRule());
            	              							}
            	              							add(
            	              								current,
            	              								"index",
            	              								lv_index_2_2,
            	              								"org.muml.uppaal.UppaalXML.ScalarTypeSpecification");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    otherlv_3=(Token)match(input,56,FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getVariableAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            // InternalUppaalXML.g:3587:3: (otherlv_4= '=' ( (lv_initializer_5_0= ruleInitializer ) ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==25) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalUppaalXML.g:3588:4: otherlv_4= '=' ( (lv_initializer_5_0= ruleInitializer ) )
                    {
                    otherlv_4=(Token)match(input,25,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getVariableAccess().getEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalUppaalXML.g:3592:4: ( (lv_initializer_5_0= ruleInitializer ) )
                    // InternalUppaalXML.g:3593:5: (lv_initializer_5_0= ruleInitializer )
                    {
                    // InternalUppaalXML.g:3593:5: (lv_initializer_5_0= ruleInitializer )
                    // InternalUppaalXML.g:3594:6: lv_initializer_5_0= ruleInitializer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVariableAccess().getInitializerInitializerParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_5_0=ruleInitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVariableRule());
                      						}
                      						set(
                      							current,
                      							"initializer",
                      							lv_initializer_5_0,
                      							"org.muml.uppaal.UppaalXML.Initializer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariable"


    // $ANTLR start "entryRuleInitializer"
    // InternalUppaalXML.g:3616:1: entryRuleInitializer returns [EObject current=null] : iv_ruleInitializer= ruleInitializer EOF ;
    public final EObject entryRuleInitializer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitializer = null;


        try {
            // InternalUppaalXML.g:3616:52: (iv_ruleInitializer= ruleInitializer EOF )
            // InternalUppaalXML.g:3617:2: iv_ruleInitializer= ruleInitializer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitializerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitializer=ruleInitializer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitializer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitializer"


    // $ANTLR start "ruleInitializer"
    // InternalUppaalXML.g:3623:1: ruleInitializer returns [EObject current=null] : (this_ArrayInitializer_0= ruleArrayInitializer | this_ExpressionInitializer_1= ruleExpressionInitializer ) ;
    public final EObject ruleInitializer() throws RecognitionException {
        EObject current = null;

        EObject this_ArrayInitializer_0 = null;

        EObject this_ExpressionInitializer_1 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3629:2: ( (this_ArrayInitializer_0= ruleArrayInitializer | this_ExpressionInitializer_1= ruleExpressionInitializer ) )
            // InternalUppaalXML.g:3630:2: (this_ArrayInitializer_0= ruleArrayInitializer | this_ExpressionInitializer_1= ruleExpressionInitializer )
            {
            // InternalUppaalXML.g:3630:2: (this_ArrayInitializer_0= ruleArrayInitializer | this_ExpressionInitializer_1= ruleExpressionInitializer )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==49) ) {
                alt53=1;
            }
            else if ( ((LA53_0>=RULE_ID && LA53_0<=RULE_INT)||LA53_0==15||LA53_0==17||(LA53_0>=19 && LA53_0<=21)||(LA53_0>=23 && LA53_0<=24)||(LA53_0>=26 && LA53_0<=27)||LA53_0==30||(LA53_0>=32 && LA53_0<=36)||(LA53_0>=39 && LA53_0<=41)||LA53_0==46||LA53_0==52||LA53_0==57||LA53_0==60||LA53_0==72||LA53_0==74||(LA53_0>=76 && LA53_0<=81)||(LA53_0>=94 && LA53_0<=95)||LA53_0==109||LA53_0==135) ) {
                alt53=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // InternalUppaalXML.g:3631:3: this_ArrayInitializer_0= ruleArrayInitializer
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getInitializerAccess().getArrayInitializerParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayInitializer_0=ruleArrayInitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ArrayInitializer_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:3640:3: this_ExpressionInitializer_1= ruleExpressionInitializer
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getInitializerAccess().getExpressionInitializerParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionInitializer_1=ruleExpressionInitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionInitializer_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitializer"


    // $ANTLR start "entryRuleExpressionInitializer"
    // InternalUppaalXML.g:3652:1: entryRuleExpressionInitializer returns [EObject current=null] : iv_ruleExpressionInitializer= ruleExpressionInitializer EOF ;
    public final EObject entryRuleExpressionInitializer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionInitializer = null;


        try {
            // InternalUppaalXML.g:3652:62: (iv_ruleExpressionInitializer= ruleExpressionInitializer EOF )
            // InternalUppaalXML.g:3653:2: iv_ruleExpressionInitializer= ruleExpressionInitializer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionInitializerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionInitializer=ruleExpressionInitializer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionInitializer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionInitializer"


    // $ANTLR start "ruleExpressionInitializer"
    // InternalUppaalXML.g:3659:1: ruleExpressionInitializer returns [EObject current=null] : ( (lv_expression_0_0= ruleExpression ) ) ;
    public final EObject ruleExpressionInitializer() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3665:2: ( ( (lv_expression_0_0= ruleExpression ) ) )
            // InternalUppaalXML.g:3666:2: ( (lv_expression_0_0= ruleExpression ) )
            {
            // InternalUppaalXML.g:3666:2: ( (lv_expression_0_0= ruleExpression ) )
            // InternalUppaalXML.g:3667:3: (lv_expression_0_0= ruleExpression )
            {
            // InternalUppaalXML.g:3667:3: (lv_expression_0_0= ruleExpression )
            // InternalUppaalXML.g:3668:4: lv_expression_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExpressionInitializerAccess().getExpressionExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getExpressionInitializerRule());
              				}
              				set(
              					current,
              					"expression",
              					lv_expression_0_0,
              					"org.muml.uppaal.UppaalXML.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionInitializer"


    // $ANTLR start "entryRuleArrayInitializer"
    // InternalUppaalXML.g:3688:1: entryRuleArrayInitializer returns [EObject current=null] : iv_ruleArrayInitializer= ruleArrayInitializer EOF ;
    public final EObject entryRuleArrayInitializer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayInitializer = null;


        try {
            // InternalUppaalXML.g:3688:57: (iv_ruleArrayInitializer= ruleArrayInitializer EOF )
            // InternalUppaalXML.g:3689:2: iv_ruleArrayInitializer= ruleArrayInitializer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayInitializerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayInitializer=ruleArrayInitializer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayInitializer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayInitializer"


    // $ANTLR start "ruleArrayInitializer"
    // InternalUppaalXML.g:3695:1: ruleArrayInitializer returns [EObject current=null] : (otherlv_0= '{' ( (lv_initializer_1_0= ruleInitializer ) ) (otherlv_2= ',' ( (lv_initializer_3_0= ruleInitializer ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleArrayInitializer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_initializer_1_0 = null;

        EObject lv_initializer_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3701:2: ( (otherlv_0= '{' ( (lv_initializer_1_0= ruleInitializer ) ) (otherlv_2= ',' ( (lv_initializer_3_0= ruleInitializer ) ) )* otherlv_4= '}' ) )
            // InternalUppaalXML.g:3702:2: (otherlv_0= '{' ( (lv_initializer_1_0= ruleInitializer ) ) (otherlv_2= ',' ( (lv_initializer_3_0= ruleInitializer ) ) )* otherlv_4= '}' )
            {
            // InternalUppaalXML.g:3702:2: (otherlv_0= '{' ( (lv_initializer_1_0= ruleInitializer ) ) (otherlv_2= ',' ( (lv_initializer_3_0= ruleInitializer ) ) )* otherlv_4= '}' )
            // InternalUppaalXML.g:3703:3: otherlv_0= '{' ( (lv_initializer_1_0= ruleInitializer ) ) (otherlv_2= ',' ( (lv_initializer_3_0= ruleInitializer ) ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,49,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalUppaalXML.g:3707:3: ( (lv_initializer_1_0= ruleInitializer ) )
            // InternalUppaalXML.g:3708:4: (lv_initializer_1_0= ruleInitializer )
            {
            // InternalUppaalXML.g:3708:4: (lv_initializer_1_0= ruleInitializer )
            // InternalUppaalXML.g:3709:5: lv_initializer_1_0= ruleInitializer
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayInitializerAccess().getInitializerInitializerParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_70);
            lv_initializer_1_0=ruleInitializer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayInitializerRule());
              					}
              					add(
              						current,
              						"initializer",
              						lv_initializer_1_0,
              						"org.muml.uppaal.UppaalXML.Initializer");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:3726:3: (otherlv_2= ',' ( (lv_initializer_3_0= ruleInitializer ) ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==28) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalUppaalXML.g:3727:4: otherlv_2= ',' ( (lv_initializer_3_0= ruleInitializer ) )
            	    {
            	    otherlv_2=(Token)match(input,28,FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getArrayInitializerAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalUppaalXML.g:3731:4: ( (lv_initializer_3_0= ruleInitializer ) )
            	    // InternalUppaalXML.g:3732:5: (lv_initializer_3_0= ruleInitializer )
            	    {
            	    // InternalUppaalXML.g:3732:5: (lv_initializer_3_0= ruleInitializer )
            	    // InternalUppaalXML.g:3733:6: lv_initializer_3_0= ruleInitializer
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getArrayInitializerAccess().getInitializerInitializerParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_70);
            	    lv_initializer_3_0=ruleInitializer();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getArrayInitializerRule());
            	      						}
            	      						add(
            	      							current,
            	      							"initializer",
            	      							lv_initializer_3_0,
            	      							"org.muml.uppaal.UppaalXML.Initializer");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            otherlv_4=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayInitializer"


    // $ANTLR start "entryRuleTypeExpression"
    // InternalUppaalXML.g:3759:1: entryRuleTypeExpression returns [EObject current=null] : iv_ruleTypeExpression= ruleTypeExpression EOF ;
    public final EObject entryRuleTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeExpression = null;


        try {
            // InternalUppaalXML.g:3759:55: (iv_ruleTypeExpression= ruleTypeExpression EOF )
            // InternalUppaalXML.g:3760:2: iv_ruleTypeExpression= ruleTypeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeExpression=ruleTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeExpression"


    // $ANTLR start "ruleTypeExpression"
    // InternalUppaalXML.g:3766:1: ruleTypeExpression returns [EObject current=null] : (this_RangeTypeSpecification_0= ruleRangeTypeSpecification | this_ScalarTypeSpecification_1= ruleScalarTypeSpecification | this_StructTypeSpecification_2= ruleStructTypeSpecification | this_SimpleIdentifierExpression_3= ruleSimpleIdentifierExpression | this_ChannelPrefixExpression_4= ruleChannelPrefixExpression | this_DataPrefixExpression_5= ruleDataPrefixExpression ) ;
    public final EObject ruleTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RangeTypeSpecification_0 = null;

        EObject this_ScalarTypeSpecification_1 = null;

        EObject this_StructTypeSpecification_2 = null;

        EObject this_SimpleIdentifierExpression_3 = null;

        EObject this_ChannelPrefixExpression_4 = null;

        EObject this_DataPrefixExpression_5 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3772:2: ( (this_RangeTypeSpecification_0= ruleRangeTypeSpecification | this_ScalarTypeSpecification_1= ruleScalarTypeSpecification | this_StructTypeSpecification_2= ruleStructTypeSpecification | this_SimpleIdentifierExpression_3= ruleSimpleIdentifierExpression | this_ChannelPrefixExpression_4= ruleChannelPrefixExpression | this_DataPrefixExpression_5= ruleDataPrefixExpression ) )
            // InternalUppaalXML.g:3773:2: (this_RangeTypeSpecification_0= ruleRangeTypeSpecification | this_ScalarTypeSpecification_1= ruleScalarTypeSpecification | this_StructTypeSpecification_2= ruleStructTypeSpecification | this_SimpleIdentifierExpression_3= ruleSimpleIdentifierExpression | this_ChannelPrefixExpression_4= ruleChannelPrefixExpression | this_DataPrefixExpression_5= ruleDataPrefixExpression )
            {
            // InternalUppaalXML.g:3773:2: (this_RangeTypeSpecification_0= ruleRangeTypeSpecification | this_ScalarTypeSpecification_1= ruleScalarTypeSpecification | this_StructTypeSpecification_2= ruleStructTypeSpecification | this_SimpleIdentifierExpression_3= ruleSimpleIdentifierExpression | this_ChannelPrefixExpression_4= ruleChannelPrefixExpression | this_DataPrefixExpression_5= ruleDataPrefixExpression )
            int alt55=6;
            switch ( input.LA(1) ) {
            case 60:
                {
                int LA55_1 = input.LA(2);

                if ( (LA55_1==EOF||LA55_1==RULE_ID||LA55_1==15||LA55_1==17||(LA55_1>=19 && LA55_1<=21)||(LA55_1>=23 && LA55_1<=24)||(LA55_1>=26 && LA55_1<=27)||LA55_1==30||(LA55_1>=32 && LA55_1<=36)||(LA55_1>=39 && LA55_1<=41)||LA55_1==46||LA55_1==53||LA55_1==119||LA55_1==135) ) {
                    alt55=4;
                }
                else if ( (LA55_1==55) ) {
                    alt55=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 1, input);

                    throw nvae;
                }
                }
                break;
            case 62:
                {
                alt55=2;
                }
                break;
            case 61:
                {
                alt55=3;
                }
                break;
            case RULE_ID:
            case 15:
            case 17:
            case 19:
            case 20:
            case 21:
            case 23:
            case 24:
            case 26:
            case 27:
            case 30:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 39:
            case 40:
            case 41:
            case 46:
            case 57:
            case 79:
            case 80:
            case 81:
            case 135:
                {
                alt55=4;
                }
                break;
            case 58:
            case 59:
                {
                alt55=5;
                }
                break;
            case 83:
            case 99:
                {
                alt55=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }

            switch (alt55) {
                case 1 :
                    // InternalUppaalXML.g:3774:3: this_RangeTypeSpecification_0= ruleRangeTypeSpecification
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeExpressionAccess().getRangeTypeSpecificationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RangeTypeSpecification_0=ruleRangeTypeSpecification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RangeTypeSpecification_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:3783:3: this_ScalarTypeSpecification_1= ruleScalarTypeSpecification
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeExpressionAccess().getScalarTypeSpecificationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ScalarTypeSpecification_1=ruleScalarTypeSpecification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScalarTypeSpecification_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:3792:3: this_StructTypeSpecification_2= ruleStructTypeSpecification
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeExpressionAccess().getStructTypeSpecificationParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StructTypeSpecification_2=ruleStructTypeSpecification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructTypeSpecification_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:3801:3: this_SimpleIdentifierExpression_3= ruleSimpleIdentifierExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeExpressionAccess().getSimpleIdentifierExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimpleIdentifierExpression_3=ruleSimpleIdentifierExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimpleIdentifierExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalUppaalXML.g:3810:3: this_ChannelPrefixExpression_4= ruleChannelPrefixExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeExpressionAccess().getChannelPrefixExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChannelPrefixExpression_4=ruleChannelPrefixExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChannelPrefixExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalUppaalXML.g:3819:3: this_DataPrefixExpression_5= ruleDataPrefixExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeExpressionAccess().getDataPrefixExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DataPrefixExpression_5=ruleDataPrefixExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DataPrefixExpression_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeExpression"


    // $ANTLR start "entryRuleChannelPrefixExpression"
    // InternalUppaalXML.g:3831:1: entryRuleChannelPrefixExpression returns [EObject current=null] : iv_ruleChannelPrefixExpression= ruleChannelPrefixExpression EOF ;
    public final EObject entryRuleChannelPrefixExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannelPrefixExpression = null;


        try {
            // InternalUppaalXML.g:3831:64: (iv_ruleChannelPrefixExpression= ruleChannelPrefixExpression EOF )
            // InternalUppaalXML.g:3832:2: iv_ruleChannelPrefixExpression= ruleChannelPrefixExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelPrefixExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannelPrefixExpression=ruleChannelPrefixExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannelPrefixExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannelPrefixExpression"


    // $ANTLR start "ruleChannelPrefixExpression"
    // InternalUppaalXML.g:3838:1: ruleChannelPrefixExpression returns [EObject current=null] : ( ( ( ( (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent ) ) ( (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast ) )? ) | ( ( (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast ) ) ( (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent ) )? ) ) ( ( ruleCHAN_KEYWORD ) ) ) ;
    public final EObject ruleChannelPrefixExpression() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_urgent_0_0 = null;

        AntlrDatatypeRuleToken lv_broadcast_1_0 = null;

        AntlrDatatypeRuleToken lv_broadcast_2_0 = null;

        AntlrDatatypeRuleToken lv_urgent_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:3844:2: ( ( ( ( ( (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent ) ) ( (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast ) )? ) | ( ( (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast ) ) ( (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent ) )? ) ) ( ( ruleCHAN_KEYWORD ) ) ) )
            // InternalUppaalXML.g:3845:2: ( ( ( ( (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent ) ) ( (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast ) )? ) | ( ( (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast ) ) ( (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent ) )? ) ) ( ( ruleCHAN_KEYWORD ) ) )
            {
            // InternalUppaalXML.g:3845:2: ( ( ( ( (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent ) ) ( (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast ) )? ) | ( ( (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast ) ) ( (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent ) )? ) ) ( ( ruleCHAN_KEYWORD ) ) )
            // InternalUppaalXML.g:3846:3: ( ( ( (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent ) ) ( (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast ) )? ) | ( ( (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast ) ) ( (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent ) )? ) ) ( ( ruleCHAN_KEYWORD ) )
            {
            // InternalUppaalXML.g:3846:3: ( ( ( (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent ) ) ( (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast ) )? ) | ( ( (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast ) ) ( (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent ) )? ) )
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==58) ) {
                alt58=1;
            }
            else if ( (LA58_0==59) ) {
                alt58=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }
            switch (alt58) {
                case 1 :
                    // InternalUppaalXML.g:3847:4: ( ( (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent ) ) ( (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast ) )? )
                    {
                    // InternalUppaalXML.g:3847:4: ( ( (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent ) ) ( (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast ) )? )
                    // InternalUppaalXML.g:3848:5: ( (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent ) ) ( (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast ) )?
                    {
                    // InternalUppaalXML.g:3848:5: ( (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent ) )
                    // InternalUppaalXML.g:3849:6: (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent )
                    {
                    // InternalUppaalXML.g:3849:6: (lv_urgent_0_0= ruleChannelPrefixExpression_Urgent )
                    // InternalUppaalXML.g:3850:7: lv_urgent_0_0= ruleChannelPrefixExpression_Urgent
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getChannelPrefixExpressionAccess().getUrgentChannelPrefixExpression_UrgentParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_71);
                    lv_urgent_0_0=ruleChannelPrefixExpression_Urgent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getChannelPrefixExpressionRule());
                      							}
                      							set(
                      								current,
                      								"urgent",
                      								lv_urgent_0_0,
                      								"org.muml.uppaal.UppaalXML.ChannelPrefixExpression_Urgent");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalUppaalXML.g:3867:5: ( (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast ) )?
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==59) ) {
                        alt56=1;
                    }
                    switch (alt56) {
                        case 1 :
                            // InternalUppaalXML.g:3868:6: (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast )
                            {
                            // InternalUppaalXML.g:3868:6: (lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast )
                            // InternalUppaalXML.g:3869:7: lv_broadcast_1_0= ruleChannelPrefixExpression_Broadcast
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastChannelPrefixExpression_BroadcastParserRuleCall_0_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_71);
                            lv_broadcast_1_0=ruleChannelPrefixExpression_Broadcast();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getChannelPrefixExpressionRule());
                              							}
                              							set(
                              								current,
                              								"broadcast",
                              								lv_broadcast_1_0,
                              								"org.muml.uppaal.UppaalXML.ChannelPrefixExpression_Broadcast");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:3888:4: ( ( (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast ) ) ( (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent ) )? )
                    {
                    // InternalUppaalXML.g:3888:4: ( ( (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast ) ) ( (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent ) )? )
                    // InternalUppaalXML.g:3889:5: ( (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast ) ) ( (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent ) )?
                    {
                    // InternalUppaalXML.g:3889:5: ( (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast ) )
                    // InternalUppaalXML.g:3890:6: (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast )
                    {
                    // InternalUppaalXML.g:3890:6: (lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast )
                    // InternalUppaalXML.g:3891:7: lv_broadcast_2_0= ruleChannelPrefixExpression_Broadcast
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getChannelPrefixExpressionAccess().getBroadcastChannelPrefixExpression_BroadcastParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_71);
                    lv_broadcast_2_0=ruleChannelPrefixExpression_Broadcast();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getChannelPrefixExpressionRule());
                      							}
                      							set(
                      								current,
                      								"broadcast",
                      								lv_broadcast_2_0,
                      								"org.muml.uppaal.UppaalXML.ChannelPrefixExpression_Broadcast");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalUppaalXML.g:3908:5: ( (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent ) )?
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==58) ) {
                        alt57=1;
                    }
                    switch (alt57) {
                        case 1 :
                            // InternalUppaalXML.g:3909:6: (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent )
                            {
                            // InternalUppaalXML.g:3909:6: (lv_urgent_3_0= ruleChannelPrefixExpression_Urgent )
                            // InternalUppaalXML.g:3910:7: lv_urgent_3_0= ruleChannelPrefixExpression_Urgent
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getChannelPrefixExpressionAccess().getUrgentChannelPrefixExpression_UrgentParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_71);
                            lv_urgent_3_0=ruleChannelPrefixExpression_Urgent();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getChannelPrefixExpressionRule());
                              							}
                              							set(
                              								current,
                              								"urgent",
                              								lv_urgent_3_0,
                              								"org.muml.uppaal.UppaalXML.ChannelPrefixExpression_Urgent");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalUppaalXML.g:3929:3: ( ( ruleCHAN_KEYWORD ) )
            // InternalUppaalXML.g:3930:4: ( ruleCHAN_KEYWORD )
            {
            // InternalUppaalXML.g:3930:4: ( ruleCHAN_KEYWORD )
            // InternalUppaalXML.g:3931:5: ruleCHAN_KEYWORD
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getChannelPrefixExpressionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChannelPrefixExpressionAccess().getChannelTypeTypeCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            ruleCHAN_KEYWORD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannelPrefixExpression"


    // $ANTLR start "entryRuleCHAN_KEYWORD"
    // InternalUppaalXML.g:3949:1: entryRuleCHAN_KEYWORD returns [String current=null] : iv_ruleCHAN_KEYWORD= ruleCHAN_KEYWORD EOF ;
    public final String entryRuleCHAN_KEYWORD() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCHAN_KEYWORD = null;


        try {
            // InternalUppaalXML.g:3949:52: (iv_ruleCHAN_KEYWORD= ruleCHAN_KEYWORD EOF )
            // InternalUppaalXML.g:3950:2: iv_ruleCHAN_KEYWORD= ruleCHAN_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCHAN_KEYWORDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCHAN_KEYWORD=ruleCHAN_KEYWORD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCHAN_KEYWORD.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCHAN_KEYWORD"


    // $ANTLR start "ruleCHAN_KEYWORD"
    // InternalUppaalXML.g:3956:1: ruleCHAN_KEYWORD returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'chan' ;
    public final AntlrDatatypeRuleToken ruleCHAN_KEYWORD() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:3962:2: (kw= 'chan' )
            // InternalUppaalXML.g:3963:2: kw= 'chan'
            {
            kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getCHAN_KEYWORDAccess().getChanKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCHAN_KEYWORD"


    // $ANTLR start "entryRuleChannelPrefixExpression_Urgent"
    // InternalUppaalXML.g:3971:1: entryRuleChannelPrefixExpression_Urgent returns [String current=null] : iv_ruleChannelPrefixExpression_Urgent= ruleChannelPrefixExpression_Urgent EOF ;
    public final String entryRuleChannelPrefixExpression_Urgent() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleChannelPrefixExpression_Urgent = null;


        try {
            // InternalUppaalXML.g:3971:70: (iv_ruleChannelPrefixExpression_Urgent= ruleChannelPrefixExpression_Urgent EOF )
            // InternalUppaalXML.g:3972:2: iv_ruleChannelPrefixExpression_Urgent= ruleChannelPrefixExpression_Urgent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelPrefixExpression_UrgentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannelPrefixExpression_Urgent=ruleChannelPrefixExpression_Urgent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannelPrefixExpression_Urgent.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannelPrefixExpression_Urgent"


    // $ANTLR start "ruleChannelPrefixExpression_Urgent"
    // InternalUppaalXML.g:3978:1: ruleChannelPrefixExpression_Urgent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'urgent' ;
    public final AntlrDatatypeRuleToken ruleChannelPrefixExpression_Urgent() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:3984:2: (kw= 'urgent' )
            // InternalUppaalXML.g:3985:2: kw= 'urgent'
            {
            kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getChannelPrefixExpression_UrgentAccess().getUrgentKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannelPrefixExpression_Urgent"


    // $ANTLR start "entryRuleChannelPrefixExpression_Broadcast"
    // InternalUppaalXML.g:3993:1: entryRuleChannelPrefixExpression_Broadcast returns [String current=null] : iv_ruleChannelPrefixExpression_Broadcast= ruleChannelPrefixExpression_Broadcast EOF ;
    public final String entryRuleChannelPrefixExpression_Broadcast() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleChannelPrefixExpression_Broadcast = null;


        try {
            // InternalUppaalXML.g:3993:73: (iv_ruleChannelPrefixExpression_Broadcast= ruleChannelPrefixExpression_Broadcast EOF )
            // InternalUppaalXML.g:3994:2: iv_ruleChannelPrefixExpression_Broadcast= ruleChannelPrefixExpression_Broadcast EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelPrefixExpression_BroadcastRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannelPrefixExpression_Broadcast=ruleChannelPrefixExpression_Broadcast();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannelPrefixExpression_Broadcast.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannelPrefixExpression_Broadcast"


    // $ANTLR start "ruleChannelPrefixExpression_Broadcast"
    // InternalUppaalXML.g:4000:1: ruleChannelPrefixExpression_Broadcast returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'broadcast' ;
    public final AntlrDatatypeRuleToken ruleChannelPrefixExpression_Broadcast() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:4006:2: (kw= 'broadcast' )
            // InternalUppaalXML.g:4007:2: kw= 'broadcast'
            {
            kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getChannelPrefixExpression_BroadcastAccess().getBroadcastKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannelPrefixExpression_Broadcast"


    // $ANTLR start "entryRuleDataPrefixExpression"
    // InternalUppaalXML.g:4015:1: entryRuleDataPrefixExpression returns [EObject current=null] : iv_ruleDataPrefixExpression= ruleDataPrefixExpression EOF ;
    public final EObject entryRuleDataPrefixExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataPrefixExpression = null;


        try {
            // InternalUppaalXML.g:4015:61: (iv_ruleDataPrefixExpression= ruleDataPrefixExpression EOF )
            // InternalUppaalXML.g:4016:2: iv_ruleDataPrefixExpression= ruleDataPrefixExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataPrefixExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDataPrefixExpression=ruleDataPrefixExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataPrefixExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataPrefixExpression"


    // $ANTLR start "ruleDataPrefixExpression"
    // InternalUppaalXML.g:4022:1: ruleDataPrefixExpression returns [EObject current=null] : ( ( (lv_prefix_0_0= ruleDataVariablePrefix ) ) ( ( (lv_dataTypeExpression_1_1= ruleRangeTypeSpecification | lv_dataTypeExpression_1_2= ruleScalarTypeSpecification | lv_dataTypeExpression_1_3= ruleStructTypeSpecification | lv_dataTypeExpression_1_4= ruleSimpleIdentifierExpression ) ) ) ) ;
    public final EObject ruleDataPrefixExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_prefix_0_0 = null;

        EObject lv_dataTypeExpression_1_1 = null;

        EObject lv_dataTypeExpression_1_2 = null;

        EObject lv_dataTypeExpression_1_3 = null;

        EObject lv_dataTypeExpression_1_4 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4028:2: ( ( ( (lv_prefix_0_0= ruleDataVariablePrefix ) ) ( ( (lv_dataTypeExpression_1_1= ruleRangeTypeSpecification | lv_dataTypeExpression_1_2= ruleScalarTypeSpecification | lv_dataTypeExpression_1_3= ruleStructTypeSpecification | lv_dataTypeExpression_1_4= ruleSimpleIdentifierExpression ) ) ) ) )
            // InternalUppaalXML.g:4029:2: ( ( (lv_prefix_0_0= ruleDataVariablePrefix ) ) ( ( (lv_dataTypeExpression_1_1= ruleRangeTypeSpecification | lv_dataTypeExpression_1_2= ruleScalarTypeSpecification | lv_dataTypeExpression_1_3= ruleStructTypeSpecification | lv_dataTypeExpression_1_4= ruleSimpleIdentifierExpression ) ) ) )
            {
            // InternalUppaalXML.g:4029:2: ( ( (lv_prefix_0_0= ruleDataVariablePrefix ) ) ( ( (lv_dataTypeExpression_1_1= ruleRangeTypeSpecification | lv_dataTypeExpression_1_2= ruleScalarTypeSpecification | lv_dataTypeExpression_1_3= ruleStructTypeSpecification | lv_dataTypeExpression_1_4= ruleSimpleIdentifierExpression ) ) ) )
            // InternalUppaalXML.g:4030:3: ( (lv_prefix_0_0= ruleDataVariablePrefix ) ) ( ( (lv_dataTypeExpression_1_1= ruleRangeTypeSpecification | lv_dataTypeExpression_1_2= ruleScalarTypeSpecification | lv_dataTypeExpression_1_3= ruleStructTypeSpecification | lv_dataTypeExpression_1_4= ruleSimpleIdentifierExpression ) ) )
            {
            // InternalUppaalXML.g:4030:3: ( (lv_prefix_0_0= ruleDataVariablePrefix ) )
            // InternalUppaalXML.g:4031:4: (lv_prefix_0_0= ruleDataVariablePrefix )
            {
            // InternalUppaalXML.g:4031:4: (lv_prefix_0_0= ruleDataVariablePrefix )
            // InternalUppaalXML.g:4032:5: lv_prefix_0_0= ruleDataVariablePrefix
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDataPrefixExpressionAccess().getPrefixDataVariablePrefixEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_72);
            lv_prefix_0_0=ruleDataVariablePrefix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDataPrefixExpressionRule());
              					}
              					set(
              						current,
              						"prefix",
              						lv_prefix_0_0,
              						"org.muml.uppaal.UppaalXML.DataVariablePrefix");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:4049:3: ( ( (lv_dataTypeExpression_1_1= ruleRangeTypeSpecification | lv_dataTypeExpression_1_2= ruleScalarTypeSpecification | lv_dataTypeExpression_1_3= ruleStructTypeSpecification | lv_dataTypeExpression_1_4= ruleSimpleIdentifierExpression ) ) )
            // InternalUppaalXML.g:4050:4: ( (lv_dataTypeExpression_1_1= ruleRangeTypeSpecification | lv_dataTypeExpression_1_2= ruleScalarTypeSpecification | lv_dataTypeExpression_1_3= ruleStructTypeSpecification | lv_dataTypeExpression_1_4= ruleSimpleIdentifierExpression ) )
            {
            // InternalUppaalXML.g:4050:4: ( (lv_dataTypeExpression_1_1= ruleRangeTypeSpecification | lv_dataTypeExpression_1_2= ruleScalarTypeSpecification | lv_dataTypeExpression_1_3= ruleStructTypeSpecification | lv_dataTypeExpression_1_4= ruleSimpleIdentifierExpression ) )
            // InternalUppaalXML.g:4051:5: (lv_dataTypeExpression_1_1= ruleRangeTypeSpecification | lv_dataTypeExpression_1_2= ruleScalarTypeSpecification | lv_dataTypeExpression_1_3= ruleStructTypeSpecification | lv_dataTypeExpression_1_4= ruleSimpleIdentifierExpression )
            {
            // InternalUppaalXML.g:4051:5: (lv_dataTypeExpression_1_1= ruleRangeTypeSpecification | lv_dataTypeExpression_1_2= ruleScalarTypeSpecification | lv_dataTypeExpression_1_3= ruleStructTypeSpecification | lv_dataTypeExpression_1_4= ruleSimpleIdentifierExpression )
            int alt59=4;
            switch ( input.LA(1) ) {
            case 60:
                {
                int LA59_1 = input.LA(2);

                if ( (LA59_1==EOF||LA59_1==RULE_ID||LA59_1==15||LA59_1==17||(LA59_1>=19 && LA59_1<=21)||(LA59_1>=23 && LA59_1<=24)||(LA59_1>=26 && LA59_1<=27)||LA59_1==30||(LA59_1>=32 && LA59_1<=36)||(LA59_1>=39 && LA59_1<=41)||LA59_1==46||LA59_1==53||LA59_1==119||LA59_1==135) ) {
                    alt59=4;
                }
                else if ( (LA59_1==55) ) {
                    alt59=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 1, input);

                    throw nvae;
                }
                }
                break;
            case 62:
                {
                alt59=2;
                }
                break;
            case 61:
                {
                alt59=3;
                }
                break;
            case RULE_ID:
            case 15:
            case 17:
            case 19:
            case 20:
            case 21:
            case 23:
            case 24:
            case 26:
            case 27:
            case 30:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 39:
            case 40:
            case 41:
            case 46:
            case 57:
            case 79:
            case 80:
            case 81:
            case 135:
                {
                alt59=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }

            switch (alt59) {
                case 1 :
                    // InternalUppaalXML.g:4052:6: lv_dataTypeExpression_1_1= ruleRangeTypeSpecification
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionRangeTypeSpecificationParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_dataTypeExpression_1_1=ruleRangeTypeSpecification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDataPrefixExpressionRule());
                      						}
                      						set(
                      							current,
                      							"dataTypeExpression",
                      							lv_dataTypeExpression_1_1,
                      							"org.muml.uppaal.UppaalXML.RangeTypeSpecification");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:4068:6: lv_dataTypeExpression_1_2= ruleScalarTypeSpecification
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionScalarTypeSpecificationParserRuleCall_1_0_1());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_dataTypeExpression_1_2=ruleScalarTypeSpecification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDataPrefixExpressionRule());
                      						}
                      						set(
                      							current,
                      							"dataTypeExpression",
                      							lv_dataTypeExpression_1_2,
                      							"org.muml.uppaal.UppaalXML.ScalarTypeSpecification");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:4084:6: lv_dataTypeExpression_1_3= ruleStructTypeSpecification
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionStructTypeSpecificationParserRuleCall_1_0_2());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_dataTypeExpression_1_3=ruleStructTypeSpecification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDataPrefixExpressionRule());
                      						}
                      						set(
                      							current,
                      							"dataTypeExpression",
                      							lv_dataTypeExpression_1_3,
                      							"org.muml.uppaal.UppaalXML.StructTypeSpecification");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:4100:6: lv_dataTypeExpression_1_4= ruleSimpleIdentifierExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDataPrefixExpressionAccess().getDataTypeExpressionSimpleIdentifierExpressionParserRuleCall_1_0_3());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_dataTypeExpression_1_4=ruleSimpleIdentifierExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDataPrefixExpressionRule());
                      						}
                      						set(
                      							current,
                      							"dataTypeExpression",
                      							lv_dataTypeExpression_1_4,
                      							"org.muml.uppaal.UppaalXML.SimpleIdentifierExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataPrefixExpression"


    // $ANTLR start "entryRuleRangeTypeSpecification"
    // InternalUppaalXML.g:4122:1: entryRuleRangeTypeSpecification returns [EObject current=null] : iv_ruleRangeTypeSpecification= ruleRangeTypeSpecification EOF ;
    public final EObject entryRuleRangeTypeSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRangeTypeSpecification = null;


        try {
            // InternalUppaalXML.g:4122:63: (iv_ruleRangeTypeSpecification= ruleRangeTypeSpecification EOF )
            // InternalUppaalXML.g:4123:2: iv_ruleRangeTypeSpecification= ruleRangeTypeSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeTypeSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRangeTypeSpecification=ruleRangeTypeSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRangeTypeSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRangeTypeSpecification"


    // $ANTLR start "ruleRangeTypeSpecification"
    // InternalUppaalXML.g:4129:1: ruleRangeTypeSpecification returns [EObject current=null] : (otherlv_0= 'int' ( (lv_bounds_1_0= ruleIntegerBounds ) ) ) ;
    public final EObject ruleRangeTypeSpecification() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_bounds_1_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4135:2: ( (otherlv_0= 'int' ( (lv_bounds_1_0= ruleIntegerBounds ) ) ) )
            // InternalUppaalXML.g:4136:2: (otherlv_0= 'int' ( (lv_bounds_1_0= ruleIntegerBounds ) ) )
            {
            // InternalUppaalXML.g:4136:2: (otherlv_0= 'int' ( (lv_bounds_1_0= ruleIntegerBounds ) ) )
            // InternalUppaalXML.g:4137:3: otherlv_0= 'int' ( (lv_bounds_1_0= ruleIntegerBounds ) )
            {
            otherlv_0=(Token)match(input,60,FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRangeTypeSpecificationAccess().getIntKeyword_0());
              		
            }
            // InternalUppaalXML.g:4141:3: ( (lv_bounds_1_0= ruleIntegerBounds ) )
            // InternalUppaalXML.g:4142:4: (lv_bounds_1_0= ruleIntegerBounds )
            {
            // InternalUppaalXML.g:4142:4: (lv_bounds_1_0= ruleIntegerBounds )
            // InternalUppaalXML.g:4143:5: lv_bounds_1_0= ruleIntegerBounds
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRangeTypeSpecificationAccess().getBoundsIntegerBoundsParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_bounds_1_0=ruleIntegerBounds();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRangeTypeSpecificationRule());
              					}
              					set(
              						current,
              						"bounds",
              						lv_bounds_1_0,
              						"org.muml.uppaal.UppaalXML.IntegerBounds");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRangeTypeSpecification"


    // $ANTLR start "entryRuleIntegerBounds"
    // InternalUppaalXML.g:4164:1: entryRuleIntegerBounds returns [EObject current=null] : iv_ruleIntegerBounds= ruleIntegerBounds EOF ;
    public final EObject entryRuleIntegerBounds() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntegerBounds = null;


        try {
            // InternalUppaalXML.g:4164:54: (iv_ruleIntegerBounds= ruleIntegerBounds EOF )
            // InternalUppaalXML.g:4165:2: iv_ruleIntegerBounds= ruleIntegerBounds EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerBoundsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntegerBounds=ruleIntegerBounds();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntegerBounds; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntegerBounds"


    // $ANTLR start "ruleIntegerBounds"
    // InternalUppaalXML.g:4171:1: ruleIntegerBounds returns [EObject current=null] : (otherlv_0= '[' ( (lv_lowerBound_1_0= ruleExpression ) ) otherlv_2= ',' ( (lv_upperBound_3_0= ruleExpression ) ) otherlv_4= ']' ) ;
    public final EObject ruleIntegerBounds() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_lowerBound_1_0 = null;

        EObject lv_upperBound_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4177:2: ( (otherlv_0= '[' ( (lv_lowerBound_1_0= ruleExpression ) ) otherlv_2= ',' ( (lv_upperBound_3_0= ruleExpression ) ) otherlv_4= ']' ) )
            // InternalUppaalXML.g:4178:2: (otherlv_0= '[' ( (lv_lowerBound_1_0= ruleExpression ) ) otherlv_2= ',' ( (lv_upperBound_3_0= ruleExpression ) ) otherlv_4= ']' )
            {
            // InternalUppaalXML.g:4178:2: (otherlv_0= '[' ( (lv_lowerBound_1_0= ruleExpression ) ) otherlv_2= ',' ( (lv_upperBound_3_0= ruleExpression ) ) otherlv_4= ']' )
            // InternalUppaalXML.g:4179:3: otherlv_0= '[' ( (lv_lowerBound_1_0= ruleExpression ) ) otherlv_2= ',' ( (lv_upperBound_3_0= ruleExpression ) ) otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,55,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIntegerBoundsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalUppaalXML.g:4183:3: ( (lv_lowerBound_1_0= ruleExpression ) )
            // InternalUppaalXML.g:4184:4: (lv_lowerBound_1_0= ruleExpression )
            {
            // InternalUppaalXML.g:4184:4: (lv_lowerBound_1_0= ruleExpression )
            // InternalUppaalXML.g:4185:5: lv_lowerBound_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIntegerBoundsAccess().getLowerBoundExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_74);
            lv_lowerBound_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIntegerBoundsRule());
              					}
              					set(
              						current,
              						"lowerBound",
              						lv_lowerBound_1_0,
              						"org.muml.uppaal.UppaalXML.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,28,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIntegerBoundsAccess().getCommaKeyword_2());
              		
            }
            // InternalUppaalXML.g:4206:3: ( (lv_upperBound_3_0= ruleExpression ) )
            // InternalUppaalXML.g:4207:4: (lv_upperBound_3_0= ruleExpression )
            {
            // InternalUppaalXML.g:4207:4: (lv_upperBound_3_0= ruleExpression )
            // InternalUppaalXML.g:4208:5: lv_upperBound_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIntegerBoundsAccess().getUpperBoundExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_68);
            lv_upperBound_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIntegerBoundsRule());
              					}
              					set(
              						current,
              						"upperBound",
              						lv_upperBound_3_0,
              						"org.muml.uppaal.UppaalXML.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getIntegerBoundsAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntegerBounds"


    // $ANTLR start "entryRuleStructTypeSpecification"
    // InternalUppaalXML.g:4233:1: entryRuleStructTypeSpecification returns [EObject current=null] : iv_ruleStructTypeSpecification= ruleStructTypeSpecification EOF ;
    public final EObject entryRuleStructTypeSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructTypeSpecification = null;


        try {
            // InternalUppaalXML.g:4233:64: (iv_ruleStructTypeSpecification= ruleStructTypeSpecification EOF )
            // InternalUppaalXML.g:4234:2: iv_ruleStructTypeSpecification= ruleStructTypeSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructTypeSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructTypeSpecification=ruleStructTypeSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructTypeSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructTypeSpecification"


    // $ANTLR start "ruleStructTypeSpecification"
    // InternalUppaalXML.g:4240:1: ruleStructTypeSpecification returns [EObject current=null] : (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_declaration_2_0= ruleTypedElement ) ) otherlv_3= ';' )+ otherlv_4= '}' ) ;
    public final EObject ruleStructTypeSpecification() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_declaration_2_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4246:2: ( (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_declaration_2_0= ruleTypedElement ) ) otherlv_3= ';' )+ otherlv_4= '}' ) )
            // InternalUppaalXML.g:4247:2: (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_declaration_2_0= ruleTypedElement ) ) otherlv_3= ';' )+ otherlv_4= '}' )
            {
            // InternalUppaalXML.g:4247:2: (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_declaration_2_0= ruleTypedElement ) ) otherlv_3= ';' )+ otherlv_4= '}' )
            // InternalUppaalXML.g:4248:3: otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_declaration_2_0= ruleTypedElement ) ) otherlv_3= ';' )+ otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,61,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStructTypeSpecificationAccess().getStructKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,49,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructTypeSpecificationAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalUppaalXML.g:4256:3: ( ( (lv_declaration_2_0= ruleTypedElement ) ) otherlv_3= ';' )+
            int cnt60=0;
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_ID||LA60_0==15||LA60_0==17||(LA60_0>=19 && LA60_0<=21)||(LA60_0>=23 && LA60_0<=24)||(LA60_0>=26 && LA60_0<=27)||LA60_0==30||(LA60_0>=32 && LA60_0<=36)||(LA60_0>=39 && LA60_0<=41)||LA60_0==46||(LA60_0>=57 && LA60_0<=62)||(LA60_0>=79 && LA60_0<=81)||LA60_0==83||LA60_0==99||LA60_0==135) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalUppaalXML.g:4257:4: ( (lv_declaration_2_0= ruleTypedElement ) ) otherlv_3= ';'
            	    {
            	    // InternalUppaalXML.g:4257:4: ( (lv_declaration_2_0= ruleTypedElement ) )
            	    // InternalUppaalXML.g:4258:5: (lv_declaration_2_0= ruleTypedElement )
            	    {
            	    // InternalUppaalXML.g:4258:5: (lv_declaration_2_0= ruleTypedElement )
            	    // InternalUppaalXML.g:4259:6: lv_declaration_2_0= ruleTypedElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStructTypeSpecificationAccess().getDeclarationTypedElementParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_58);
            	    lv_declaration_2_0=ruleTypedElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStructTypeSpecificationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"declaration",
            	      							lv_declaration_2_0,
            	      							"org.muml.uppaal.UppaalXML.TypedElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,50,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getStructTypeSpecificationAccess().getSemicolonKeyword_2_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt60 >= 1 ) break loop60;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(60, input);
                        throw eee;
                }
                cnt60++;
            } while (true);

            otherlv_4=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getStructTypeSpecificationAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructTypeSpecification"


    // $ANTLR start "entryRuleScalarTypeSpecification"
    // InternalUppaalXML.g:4289:1: entryRuleScalarTypeSpecification returns [EObject current=null] : iv_ruleScalarTypeSpecification= ruleScalarTypeSpecification EOF ;
    public final EObject entryRuleScalarTypeSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScalarTypeSpecification = null;


        try {
            // InternalUppaalXML.g:4289:64: (iv_ruleScalarTypeSpecification= ruleScalarTypeSpecification EOF )
            // InternalUppaalXML.g:4290:2: iv_ruleScalarTypeSpecification= ruleScalarTypeSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScalarTypeSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScalarTypeSpecification=ruleScalarTypeSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScalarTypeSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScalarTypeSpecification"


    // $ANTLR start "ruleScalarTypeSpecification"
    // InternalUppaalXML.g:4296:1: ruleScalarTypeSpecification returns [EObject current=null] : (otherlv_0= 'scalar' otherlv_1= '[' ( (lv_sizeExpression_2_0= ruleExpression ) ) otherlv_3= ']' ) ;
    public final EObject ruleScalarTypeSpecification() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_sizeExpression_2_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4302:2: ( (otherlv_0= 'scalar' otherlv_1= '[' ( (lv_sizeExpression_2_0= ruleExpression ) ) otherlv_3= ']' ) )
            // InternalUppaalXML.g:4303:2: (otherlv_0= 'scalar' otherlv_1= '[' ( (lv_sizeExpression_2_0= ruleExpression ) ) otherlv_3= ']' )
            {
            // InternalUppaalXML.g:4303:2: (otherlv_0= 'scalar' otherlv_1= '[' ( (lv_sizeExpression_2_0= ruleExpression ) ) otherlv_3= ']' )
            // InternalUppaalXML.g:4304:3: otherlv_0= 'scalar' otherlv_1= '[' ( (lv_sizeExpression_2_0= ruleExpression ) ) otherlv_3= ']'
            {
            otherlv_0=(Token)match(input,62,FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getScalarTypeSpecificationAccess().getScalarKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,55,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getScalarTypeSpecificationAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalUppaalXML.g:4312:3: ( (lv_sizeExpression_2_0= ruleExpression ) )
            // InternalUppaalXML.g:4313:4: (lv_sizeExpression_2_0= ruleExpression )
            {
            // InternalUppaalXML.g:4313:4: (lv_sizeExpression_2_0= ruleExpression )
            // InternalUppaalXML.g:4314:5: lv_sizeExpression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScalarTypeSpecificationAccess().getSizeExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_68);
            lv_sizeExpression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScalarTypeSpecificationRule());
              					}
              					set(
              						current,
              						"sizeExpression",
              						lv_sizeExpression_2_0,
              						"org.muml.uppaal.UppaalXML.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getScalarTypeSpecificationAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScalarTypeSpecification"


    // $ANTLR start "entryRuleTypeDeclaration"
    // InternalUppaalXML.g:4339:1: entryRuleTypeDeclaration returns [EObject current=null] : iv_ruleTypeDeclaration= ruleTypeDeclaration EOF ;
    public final EObject entryRuleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDeclaration = null;


        try {
            // InternalUppaalXML.g:4339:56: (iv_ruleTypeDeclaration= ruleTypeDeclaration EOF )
            // InternalUppaalXML.g:4340:2: iv_ruleTypeDeclaration= ruleTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDeclaration=ruleTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDeclaration"


    // $ANTLR start "ruleTypeDeclaration"
    // InternalUppaalXML.g:4346:1: ruleTypeDeclaration returns [EObject current=null] : (otherlv_0= 'typedef' ( (lv_typeDefinition_1_0= ruleTypeExpression ) ) ( (lv_type_2_0= ruleDeclaredType ) ) (otherlv_3= ',' ( (lv_type_4_0= ruleDeclaredType ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_typeDefinition_1_0 = null;

        EObject lv_type_2_0 = null;

        EObject lv_type_4_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4352:2: ( (otherlv_0= 'typedef' ( (lv_typeDefinition_1_0= ruleTypeExpression ) ) ( (lv_type_2_0= ruleDeclaredType ) ) (otherlv_3= ',' ( (lv_type_4_0= ruleDeclaredType ) ) )* otherlv_5= ';' ) )
            // InternalUppaalXML.g:4353:2: (otherlv_0= 'typedef' ( (lv_typeDefinition_1_0= ruleTypeExpression ) ) ( (lv_type_2_0= ruleDeclaredType ) ) (otherlv_3= ',' ( (lv_type_4_0= ruleDeclaredType ) ) )* otherlv_5= ';' )
            {
            // InternalUppaalXML.g:4353:2: (otherlv_0= 'typedef' ( (lv_typeDefinition_1_0= ruleTypeExpression ) ) ( (lv_type_2_0= ruleDeclaredType ) ) (otherlv_3= ',' ( (lv_type_4_0= ruleDeclaredType ) ) )* otherlv_5= ';' )
            // InternalUppaalXML.g:4354:3: otherlv_0= 'typedef' ( (lv_typeDefinition_1_0= ruleTypeExpression ) ) ( (lv_type_2_0= ruleDeclaredType ) ) (otherlv_3= ',' ( (lv_type_4_0= ruleDeclaredType ) ) )* otherlv_5= ';'
            {
            otherlv_0=(Token)match(input,63,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeDeclarationAccess().getTypedefKeyword_0());
              		
            }
            // InternalUppaalXML.g:4358:3: ( (lv_typeDefinition_1_0= ruleTypeExpression ) )
            // InternalUppaalXML.g:4359:4: (lv_typeDefinition_1_0= ruleTypeExpression )
            {
            // InternalUppaalXML.g:4359:4: (lv_typeDefinition_1_0= ruleTypeExpression )
            // InternalUppaalXML.g:4360:5: lv_typeDefinition_1_0= ruleTypeExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeDefinitionTypeExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_typeDefinition_1_0=ruleTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
              					}
              					set(
              						current,
              						"typeDefinition",
              						lv_typeDefinition_1_0,
              						"org.muml.uppaal.UppaalXML.TypeExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:4377:3: ( (lv_type_2_0= ruleDeclaredType ) )
            // InternalUppaalXML.g:4378:4: (lv_type_2_0= ruleDeclaredType )
            {
            // InternalUppaalXML.g:4378:4: (lv_type_2_0= ruleDeclaredType )
            // InternalUppaalXML.g:4379:5: lv_type_2_0= ruleDeclaredType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeDeclaredTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_65);
            lv_type_2_0=ruleDeclaredType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
              					}
              					add(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.muml.uppaal.UppaalXML.DeclaredType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:4396:3: (otherlv_3= ',' ( (lv_type_4_0= ruleDeclaredType ) ) )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==28) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalUppaalXML.g:4397:4: otherlv_3= ',' ( (lv_type_4_0= ruleDeclaredType ) )
            	    {
            	    otherlv_3=(Token)match(input,28,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTypeDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalUppaalXML.g:4401:4: ( (lv_type_4_0= ruleDeclaredType ) )
            	    // InternalUppaalXML.g:4402:5: (lv_type_4_0= ruleDeclaredType )
            	    {
            	    // InternalUppaalXML.g:4402:5: (lv_type_4_0= ruleDeclaredType )
            	    // InternalUppaalXML.g:4403:6: lv_type_4_0= ruleDeclaredType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeDeclaredTypeParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_type_4_0=ruleDeclaredType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"type",
            	      							lv_type_4_0,
            	      							"org.muml.uppaal.UppaalXML.DeclaredType");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            otherlv_5=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDeclaration"


    // $ANTLR start "entryRuleDeclaredType"
    // InternalUppaalXML.g:4429:1: entryRuleDeclaredType returns [EObject current=null] : iv_ruleDeclaredType= ruleDeclaredType EOF ;
    public final EObject entryRuleDeclaredType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaredType = null;


        try {
            // InternalUppaalXML.g:4429:53: (iv_ruleDeclaredType= ruleDeclaredType EOF )
            // InternalUppaalXML.g:4430:2: iv_ruleDeclaredType= ruleDeclaredType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclaredTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeclaredType=ruleDeclaredType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaredType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaredType"


    // $ANTLR start "ruleDeclaredType"
    // InternalUppaalXML.g:4436:1: ruleDeclaredType returns [EObject current=null] : ( () ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) ) ) ;
    public final EObject ruleDeclaredType() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4442:2: ( ( () ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) ) ) )
            // InternalUppaalXML.g:4443:2: ( () ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) ) )
            {
            // InternalUppaalXML.g:4443:2: ( () ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) ) )
            // InternalUppaalXML.g:4444:3: () ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) )
            {
            // InternalUppaalXML.g:4444:3: ()
            // InternalUppaalXML.g:4445:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDeclaredTypeAccess().getDeclaredTypeAction_0(),
              					current);
              			
            }

            }

            // InternalUppaalXML.g:4451:3: ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) )
            // InternalUppaalXML.g:4452:4: (lv_name_1_0= ruleUPPAAL_IDENTIFIER )
            {
            // InternalUppaalXML.g:4452:4: (lv_name_1_0= ruleUPPAAL_IDENTIFIER )
            // InternalUppaalXML.g:4453:5: lv_name_1_0= ruleUPPAAL_IDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeclaredTypeAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleUPPAAL_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeclaredTypeRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.muml.uppaal.UppaalXML.UPPAAL_IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaredType"


    // $ANTLR start "entryRuleChannelPriorityDeclaration"
    // InternalUppaalXML.g:4474:1: entryRuleChannelPriorityDeclaration returns [EObject current=null] : iv_ruleChannelPriorityDeclaration= ruleChannelPriorityDeclaration EOF ;
    public final EObject entryRuleChannelPriorityDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannelPriorityDeclaration = null;


        try {
            // InternalUppaalXML.g:4474:67: (iv_ruleChannelPriorityDeclaration= ruleChannelPriorityDeclaration EOF )
            // InternalUppaalXML.g:4475:2: iv_ruleChannelPriorityDeclaration= ruleChannelPriorityDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelPriorityDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannelPriorityDeclaration=ruleChannelPriorityDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannelPriorityDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannelPriorityDeclaration"


    // $ANTLR start "ruleChannelPriorityDeclaration"
    // InternalUppaalXML.g:4481:1: ruleChannelPriorityDeclaration returns [EObject current=null] : (otherlv_0= 'chan' otherlv_1= 'priority' ( (lv_groups_2_0= ruleChannelPriorityGroup ) ) (otherlv_3= '&lt;' ( (lv_groups_4_0= ruleChannelPriorityGroup ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleChannelPriorityDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_groups_2_0 = null;

        EObject lv_groups_4_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4487:2: ( (otherlv_0= 'chan' otherlv_1= 'priority' ( (lv_groups_2_0= ruleChannelPriorityGroup ) ) (otherlv_3= '&lt;' ( (lv_groups_4_0= ruleChannelPriorityGroup ) ) )* otherlv_5= ';' ) )
            // InternalUppaalXML.g:4488:2: (otherlv_0= 'chan' otherlv_1= 'priority' ( (lv_groups_2_0= ruleChannelPriorityGroup ) ) (otherlv_3= '&lt;' ( (lv_groups_4_0= ruleChannelPriorityGroup ) ) )* otherlv_5= ';' )
            {
            // InternalUppaalXML.g:4488:2: (otherlv_0= 'chan' otherlv_1= 'priority' ( (lv_groups_2_0= ruleChannelPriorityGroup ) ) (otherlv_3= '&lt;' ( (lv_groups_4_0= ruleChannelPriorityGroup ) ) )* otherlv_5= ';' )
            // InternalUppaalXML.g:4489:3: otherlv_0= 'chan' otherlv_1= 'priority' ( (lv_groups_2_0= ruleChannelPriorityGroup ) ) (otherlv_3= '&lt;' ( (lv_groups_4_0= ruleChannelPriorityGroup ) ) )* otherlv_5= ';'
            {
            otherlv_0=(Token)match(input,57,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChannelPriorityDeclarationAccess().getChanKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,64,FOLLOW_77); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChannelPriorityDeclarationAccess().getPriorityKeyword_1());
              		
            }
            // InternalUppaalXML.g:4497:3: ( (lv_groups_2_0= ruleChannelPriorityGroup ) )
            // InternalUppaalXML.g:4498:4: (lv_groups_2_0= ruleChannelPriorityGroup )
            {
            // InternalUppaalXML.g:4498:4: (lv_groups_2_0= ruleChannelPriorityGroup )
            // InternalUppaalXML.g:4499:5: lv_groups_2_0= ruleChannelPriorityGroup
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsChannelPriorityGroupParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_63);
            lv_groups_2_0=ruleChannelPriorityGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChannelPriorityDeclarationRule());
              					}
              					add(
              						current,
              						"groups",
              						lv_groups_2_0,
              						"org.muml.uppaal.UppaalXML.ChannelPriorityGroup");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:4516:3: (otherlv_3= '&lt;' ( (lv_groups_4_0= ruleChannelPriorityGroup ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==54) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalUppaalXML.g:4517:4: otherlv_3= '&lt;' ( (lv_groups_4_0= ruleChannelPriorityGroup ) )
            	    {
            	    otherlv_3=(Token)match(input,54,FOLLOW_77); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getChannelPriorityDeclarationAccess().getLtKeyword_3_0());
            	      			
            	    }
            	    // InternalUppaalXML.g:4521:4: ( (lv_groups_4_0= ruleChannelPriorityGroup ) )
            	    // InternalUppaalXML.g:4522:5: (lv_groups_4_0= ruleChannelPriorityGroup )
            	    {
            	    // InternalUppaalXML.g:4522:5: (lv_groups_4_0= ruleChannelPriorityGroup )
            	    // InternalUppaalXML.g:4523:6: lv_groups_4_0= ruleChannelPriorityGroup
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getChannelPriorityDeclarationAccess().getGroupsChannelPriorityGroupParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_63);
            	    lv_groups_4_0=ruleChannelPriorityGroup();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getChannelPriorityDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"groups",
            	      							lv_groups_4_0,
            	      							"org.muml.uppaal.UppaalXML.ChannelPriorityGroup");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            otherlv_5=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getChannelPriorityDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannelPriorityDeclaration"


    // $ANTLR start "entryRuleChannelPriorityGroup"
    // InternalUppaalXML.g:4549:1: entryRuleChannelPriorityGroup returns [EObject current=null] : iv_ruleChannelPriorityGroup= ruleChannelPriorityGroup EOF ;
    public final EObject entryRuleChannelPriorityGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannelPriorityGroup = null;


        try {
            // InternalUppaalXML.g:4549:61: (iv_ruleChannelPriorityGroup= ruleChannelPriorityGroup EOF )
            // InternalUppaalXML.g:4550:2: iv_ruleChannelPriorityGroup= ruleChannelPriorityGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelPriorityGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannelPriorityGroup=ruleChannelPriorityGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannelPriorityGroup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannelPriorityGroup"


    // $ANTLR start "ruleChannelPriorityGroup"
    // InternalUppaalXML.g:4556:1: ruleChannelPriorityGroup returns [EObject current=null] : ( ( (lv_items_0_0= rulePriorityItem ) ) (otherlv_1= ',' ( (lv_items_2_0= rulePriorityItem ) ) )* ) ;
    public final EObject ruleChannelPriorityGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_items_0_0 = null;

        EObject lv_items_2_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4562:2: ( ( ( (lv_items_0_0= rulePriorityItem ) ) (otherlv_1= ',' ( (lv_items_2_0= rulePriorityItem ) ) )* ) )
            // InternalUppaalXML.g:4563:2: ( ( (lv_items_0_0= rulePriorityItem ) ) (otherlv_1= ',' ( (lv_items_2_0= rulePriorityItem ) ) )* )
            {
            // InternalUppaalXML.g:4563:2: ( ( (lv_items_0_0= rulePriorityItem ) ) (otherlv_1= ',' ( (lv_items_2_0= rulePriorityItem ) ) )* )
            // InternalUppaalXML.g:4564:3: ( (lv_items_0_0= rulePriorityItem ) ) (otherlv_1= ',' ( (lv_items_2_0= rulePriorityItem ) ) )*
            {
            // InternalUppaalXML.g:4564:3: ( (lv_items_0_0= rulePriorityItem ) )
            // InternalUppaalXML.g:4565:4: (lv_items_0_0= rulePriorityItem )
            {
            // InternalUppaalXML.g:4565:4: (lv_items_0_0= rulePriorityItem )
            // InternalUppaalXML.g:4566:5: lv_items_0_0= rulePriorityItem
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChannelPriorityGroupAccess().getItemsPriorityItemParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_64);
            lv_items_0_0=rulePriorityItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChannelPriorityGroupRule());
              					}
              					add(
              						current,
              						"items",
              						lv_items_0_0,
              						"org.muml.uppaal.UppaalXML.PriorityItem");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:4583:3: (otherlv_1= ',' ( (lv_items_2_0= rulePriorityItem ) ) )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==28) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalUppaalXML.g:4584:4: otherlv_1= ',' ( (lv_items_2_0= rulePriorityItem ) )
            	    {
            	    otherlv_1=(Token)match(input,28,FOLLOW_77); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getChannelPriorityGroupAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalUppaalXML.g:4588:4: ( (lv_items_2_0= rulePriorityItem ) )
            	    // InternalUppaalXML.g:4589:5: (lv_items_2_0= rulePriorityItem )
            	    {
            	    // InternalUppaalXML.g:4589:5: (lv_items_2_0= rulePriorityItem )
            	    // InternalUppaalXML.g:4590:6: lv_items_2_0= rulePriorityItem
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getChannelPriorityGroupAccess().getItemsPriorityItemParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_64);
            	    lv_items_2_0=rulePriorityItem();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getChannelPriorityGroupRule());
            	      						}
            	      						add(
            	      							current,
            	      							"items",
            	      							lv_items_2_0,
            	      							"org.muml.uppaal.UppaalXML.PriorityItem");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannelPriorityGroup"


    // $ANTLR start "entryRulePriorityItem"
    // InternalUppaalXML.g:4612:1: entryRulePriorityItem returns [EObject current=null] : iv_rulePriorityItem= rulePriorityItem EOF ;
    public final EObject entryRulePriorityItem() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePriorityItem = null;


        try {
            // InternalUppaalXML.g:4612:53: (iv_rulePriorityItem= rulePriorityItem EOF )
            // InternalUppaalXML.g:4613:2: iv_rulePriorityItem= rulePriorityItem EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPriorityItemRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePriorityItem=rulePriorityItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePriorityItem; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePriorityItem"


    // $ANTLR start "rulePriorityItem"
    // InternalUppaalXML.g:4619:1: rulePriorityItem returns [EObject current=null] : (this_DefaultItem_0= ruleDefaultItem | this_ChannelItem_1= ruleChannelItem ) ;
    public final EObject rulePriorityItem() throws RecognitionException {
        EObject current = null;

        EObject this_DefaultItem_0 = null;

        EObject this_ChannelItem_1 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4625:2: ( (this_DefaultItem_0= ruleDefaultItem | this_ChannelItem_1= ruleChannelItem ) )
            // InternalUppaalXML.g:4626:2: (this_DefaultItem_0= ruleDefaultItem | this_ChannelItem_1= ruleChannelItem )
            {
            // InternalUppaalXML.g:4626:2: (this_DefaultItem_0= ruleDefaultItem | this_ChannelItem_1= ruleChannelItem )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==65) ) {
                alt64=1;
            }
            else if ( (LA64_0==RULE_ID||LA64_0==15||LA64_0==17||(LA64_0>=19 && LA64_0<=21)||(LA64_0>=23 && LA64_0<=24)||(LA64_0>=26 && LA64_0<=27)||LA64_0==30||(LA64_0>=32 && LA64_0<=36)||(LA64_0>=39 && LA64_0<=41)||LA64_0==46||LA64_0==57||LA64_0==60||(LA64_0>=79 && LA64_0<=81)||LA64_0==135) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalUppaalXML.g:4627:3: this_DefaultItem_0= ruleDefaultItem
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPriorityItemAccess().getDefaultItemParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DefaultItem_0=ruleDefaultItem();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DefaultItem_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:4636:3: this_ChannelItem_1= ruleChannelItem
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPriorityItemAccess().getChannelItemParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChannelItem_1=ruleChannelItem();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChannelItem_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePriorityItem"


    // $ANTLR start "entryRuleDefaultItem"
    // InternalUppaalXML.g:4648:1: entryRuleDefaultItem returns [EObject current=null] : iv_ruleDefaultItem= ruleDefaultItem EOF ;
    public final EObject entryRuleDefaultItem() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefaultItem = null;


        try {
            // InternalUppaalXML.g:4648:52: (iv_ruleDefaultItem= ruleDefaultItem EOF )
            // InternalUppaalXML.g:4649:2: iv_ruleDefaultItem= ruleDefaultItem EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefaultItemRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefaultItem=ruleDefaultItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefaultItem; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefaultItem"


    // $ANTLR start "ruleDefaultItem"
    // InternalUppaalXML.g:4655:1: ruleDefaultItem returns [EObject current=null] : ( () otherlv_1= 'default' ) ;
    public final EObject ruleDefaultItem() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:4661:2: ( ( () otherlv_1= 'default' ) )
            // InternalUppaalXML.g:4662:2: ( () otherlv_1= 'default' )
            {
            // InternalUppaalXML.g:4662:2: ( () otherlv_1= 'default' )
            // InternalUppaalXML.g:4663:3: () otherlv_1= 'default'
            {
            // InternalUppaalXML.g:4663:3: ()
            // InternalUppaalXML.g:4664:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDefaultItemAccess().getDefaultItemAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDefaultItemAccess().getDefaultKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefaultItem"


    // $ANTLR start "entryRuleChannelItem"
    // InternalUppaalXML.g:4678:1: entryRuleChannelItem returns [EObject current=null] : iv_ruleChannelItem= ruleChannelItem EOF ;
    public final EObject entryRuleChannelItem() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannelItem = null;


        try {
            // InternalUppaalXML.g:4678:52: (iv_ruleChannelItem= ruleChannelItem EOF )
            // InternalUppaalXML.g:4679:2: iv_ruleChannelItem= ruleChannelItem EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelItemRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannelItem=ruleChannelItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannelItem; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannelItem"


    // $ANTLR start "ruleChannelItem"
    // InternalUppaalXML.g:4685:1: ruleChannelItem returns [EObject current=null] : ( (lv_channelExpression_0_0= ruleIdentifierExpression ) ) ;
    public final EObject ruleChannelItem() throws RecognitionException {
        EObject current = null;

        EObject lv_channelExpression_0_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4691:2: ( ( (lv_channelExpression_0_0= ruleIdentifierExpression ) ) )
            // InternalUppaalXML.g:4692:2: ( (lv_channelExpression_0_0= ruleIdentifierExpression ) )
            {
            // InternalUppaalXML.g:4692:2: ( (lv_channelExpression_0_0= ruleIdentifierExpression ) )
            // InternalUppaalXML.g:4693:3: (lv_channelExpression_0_0= ruleIdentifierExpression )
            {
            // InternalUppaalXML.g:4693:3: (lv_channelExpression_0_0= ruleIdentifierExpression )
            // InternalUppaalXML.g:4694:4: lv_channelExpression_0_0= ruleIdentifierExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getChannelItemAccess().getChannelExpressionIdentifierExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_channelExpression_0_0=ruleIdentifierExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getChannelItemRule());
              				}
              				set(
              					current,
              					"channelExpression",
              					lv_channelExpression_0_0,
              					"org.muml.uppaal.UppaalXML.IdentifierExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannelItem"


    // $ANTLR start "entryRuleFunction"
    // InternalUppaalXML.g:4714:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalUppaalXML.g:4714:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalUppaalXML.g:4715:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalUppaalXML.g:4721:1: ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '(' ( ( (lv_parameter_2_0= ruleParameterContainer ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleParameterContainer ) ) )* )? otherlv_5= ')' ( (lv_block_6_0= ruleBlock ) ) ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameter_2_0 = null;

        EObject lv_parameter_4_0 = null;

        EObject lv_block_6_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4727:2: ( ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '(' ( ( (lv_parameter_2_0= ruleParameterContainer ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleParameterContainer ) ) )* )? otherlv_5= ')' ( (lv_block_6_0= ruleBlock ) ) ) )
            // InternalUppaalXML.g:4728:2: ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '(' ( ( (lv_parameter_2_0= ruleParameterContainer ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleParameterContainer ) ) )* )? otherlv_5= ')' ( (lv_block_6_0= ruleBlock ) ) )
            {
            // InternalUppaalXML.g:4728:2: ( ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '(' ( ( (lv_parameter_2_0= ruleParameterContainer ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleParameterContainer ) ) )* )? otherlv_5= ')' ( (lv_block_6_0= ruleBlock ) ) )
            // InternalUppaalXML.g:4729:3: ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '(' ( ( (lv_parameter_2_0= ruleParameterContainer ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleParameterContainer ) ) )* )? otherlv_5= ')' ( (lv_block_6_0= ruleBlock ) )
            {
            // InternalUppaalXML.g:4729:3: ( (lv_name_0_0= ruleUPPAAL_IDENTIFIER ) )
            // InternalUppaalXML.g:4730:4: (lv_name_0_0= ruleUPPAAL_IDENTIFIER )
            {
            // InternalUppaalXML.g:4730:4: (lv_name_0_0= ruleUPPAAL_IDENTIFIER )
            // InternalUppaalXML.g:4731:5: lv_name_0_0= ruleUPPAAL_IDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_name_0_0=ruleUPPAAL_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.muml.uppaal.UppaalXML.UPPAAL_IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,52,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalUppaalXML.g:4752:3: ( ( (lv_parameter_2_0= ruleParameterContainer ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleParameterContainer ) ) )* )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_ID||LA66_0==15||LA66_0==17||(LA66_0>=19 && LA66_0<=21)||(LA66_0>=23 && LA66_0<=24)||(LA66_0>=26 && LA66_0<=27)||LA66_0==30||(LA66_0>=32 && LA66_0<=36)||(LA66_0>=39 && LA66_0<=41)||LA66_0==46||(LA66_0>=57 && LA66_0<=62)||(LA66_0>=79 && LA66_0<=81)||LA66_0==83||LA66_0==99||LA66_0==135) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalUppaalXML.g:4753:4: ( (lv_parameter_2_0= ruleParameterContainer ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleParameterContainer ) ) )*
                    {
                    // InternalUppaalXML.g:4753:4: ( (lv_parameter_2_0= ruleParameterContainer ) )
                    // InternalUppaalXML.g:4754:5: (lv_parameter_2_0= ruleParameterContainer )
                    {
                    // InternalUppaalXML.g:4754:5: (lv_parameter_2_0= ruleParameterContainer )
                    // InternalUppaalXML.g:4755:6: lv_parameter_2_0= ruleParameterContainer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionAccess().getParameterParameterContainerParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_parameter_2_0=ruleParameterContainer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionRule());
                      						}
                      						add(
                      							current,
                      							"parameter",
                      							lv_parameter_2_0,
                      							"org.muml.uppaal.UppaalXML.ParameterContainer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalUppaalXML.g:4772:4: (otherlv_3= ',' ( (lv_parameter_4_0= ruleParameterContainer ) ) )*
                    loop65:
                    do {
                        int alt65=2;
                        int LA65_0 = input.LA(1);

                        if ( (LA65_0==28) ) {
                            alt65=1;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // InternalUppaalXML.g:4773:5: otherlv_3= ',' ( (lv_parameter_4_0= ruleParameterContainer ) )
                    	    {
                    	    otherlv_3=(Token)match(input,28,FOLLOW_24); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalUppaalXML.g:4777:5: ( (lv_parameter_4_0= ruleParameterContainer ) )
                    	    // InternalUppaalXML.g:4778:6: (lv_parameter_4_0= ruleParameterContainer )
                    	    {
                    	    // InternalUppaalXML.g:4778:6: (lv_parameter_4_0= ruleParameterContainer )
                    	    // InternalUppaalXML.g:4779:7: lv_parameter_4_0= ruleParameterContainer
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionAccess().getParameterParameterContainerParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_parameter_4_0=ruleParameterContainer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameter",
                    	      								lv_parameter_4_0,
                    	      								"org.muml.uppaal.UppaalXML.ParameterContainer");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop65;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,53,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalUppaalXML.g:4802:3: ( (lv_block_6_0= ruleBlock ) )
            // InternalUppaalXML.g:4803:4: (lv_block_6_0= ruleBlock )
            {
            // InternalUppaalXML.g:4803:4: (lv_block_6_0= ruleBlock )
            // InternalUppaalXML.g:4804:5: lv_block_6_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getBlockBlockParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_6_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_6_0,
              						"org.muml.uppaal.UppaalXML.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleParameterContainer"
    // InternalUppaalXML.g:4825:1: entryRuleParameterContainer returns [EObject current=null] : iv_ruleParameterContainer= ruleParameterContainer EOF ;
    public final EObject entryRuleParameterContainer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterContainer = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:4827:2: (iv_ruleParameterContainer= ruleParameterContainer EOF )
            // InternalUppaalXML.g:4828:2: iv_ruleParameterContainer= ruleParameterContainer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterContainerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterContainer=ruleParameterContainer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterContainer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleParameterContainer"


    // $ANTLR start "ruleParameterContainer"
    // InternalUppaalXML.g:4837:1: ruleParameterContainer returns [EObject current=null] : ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleParameter ) ) ) ;
    public final EObject ruleParameterContainer() throws RecognitionException {
        EObject current = null;

        EObject lv_typeDefinition_0_0 = null;

        EObject lv_elements_1_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:4844:2: ( ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleParameter ) ) ) )
            // InternalUppaalXML.g:4845:2: ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleParameter ) ) )
            {
            // InternalUppaalXML.g:4845:2: ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleParameter ) ) )
            // InternalUppaalXML.g:4846:3: ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleParameter ) )
            {
            // InternalUppaalXML.g:4846:3: ( (lv_typeDefinition_0_0= ruleTypeExpression ) )
            // InternalUppaalXML.g:4847:4: (lv_typeDefinition_0_0= ruleTypeExpression )
            {
            // InternalUppaalXML.g:4847:4: (lv_typeDefinition_0_0= ruleTypeExpression )
            // InternalUppaalXML.g:4848:5: lv_typeDefinition_0_0= ruleTypeExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterContainerAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_79);
            lv_typeDefinition_0_0=ruleTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterContainerRule());
              					}
              					set(
              						current,
              						"typeDefinition",
              						lv_typeDefinition_0_0,
              						"org.muml.uppaal.UppaalXML.TypeExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:4865:3: ( (lv_elements_1_0= ruleParameter ) )
            // InternalUppaalXML.g:4866:4: (lv_elements_1_0= ruleParameter )
            {
            // InternalUppaalXML.g:4866:4: (lv_elements_1_0= ruleParameter )
            // InternalUppaalXML.g:4867:5: lv_elements_1_0= ruleParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterContainerAccess().getElementsParameterParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elements_1_0=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterContainerRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_1_0,
              						"org.muml.uppaal.UppaalXML.Parameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleParameterContainer"


    // $ANTLR start "entryRuleParameter"
    // InternalUppaalXML.g:4891:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalUppaalXML.g:4891:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalUppaalXML.g:4892:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalUppaalXML.g:4898:1: ruleParameter returns [EObject current=null] : ( ( (lv_callType_0_0= ruleCallType ) )? ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Enumerator lv_callType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4904:2: ( ( ( (lv_callType_0_0= ruleCallType ) )? ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) ) ) )
            // InternalUppaalXML.g:4905:2: ( ( (lv_callType_0_0= ruleCallType ) )? ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) ) )
            {
            // InternalUppaalXML.g:4905:2: ( ( (lv_callType_0_0= ruleCallType ) )? ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) ) )
            // InternalUppaalXML.g:4906:3: ( (lv_callType_0_0= ruleCallType ) )? ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) )
            {
            // InternalUppaalXML.g:4906:3: ( (lv_callType_0_0= ruleCallType ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==119) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalUppaalXML.g:4907:4: (lv_callType_0_0= ruleCallType )
                    {
                    // InternalUppaalXML.g:4907:4: (lv_callType_0_0= ruleCallType )
                    // InternalUppaalXML.g:4908:5: lv_callType_0_0= ruleCallType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterAccess().getCallTypeCallTypeEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_47);
                    lv_callType_0_0=ruleCallType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterRule());
                      					}
                      					set(
                      						current,
                      						"callType",
                      						lv_callType_0_0,
                      						"org.muml.uppaal.UppaalXML.CallType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalUppaalXML.g:4925:3: ( (lv_name_1_0= ruleUPPAAL_IDENTIFIER ) )
            // InternalUppaalXML.g:4926:4: (lv_name_1_0= ruleUPPAAL_IDENTIFIER )
            {
            // InternalUppaalXML.g:4926:4: (lv_name_1_0= ruleUPPAAL_IDENTIFIER )
            // InternalUppaalXML.g:4927:5: lv_name_1_0= ruleUPPAAL_IDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterAccess().getNameUPPAAL_IDENTIFIERParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleUPPAAL_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.muml.uppaal.UppaalXML.UPPAAL_IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleStatement"
    // InternalUppaalXML.g:4948:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalUppaalXML.g:4948:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalUppaalXML.g:4949:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalUppaalXML.g:4955:1: ruleStatement returns [EObject current=null] : (this_Block_0= ruleBlock | this_EmptyStatement_1= ruleEmptyStatement | this_ExpressionStatement_2= ruleExpressionStatement | this_ForLoop_3= ruleForLoop | this_Iteration_4= ruleIteration | this_WhileLoop_5= ruleWhileLoop | this_DoWhileLoop_6= ruleDoWhileLoop | this_IfStatement_7= ruleIfStatement | this_ReturnStatement_8= ruleReturnStatement ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_Block_0 = null;

        EObject this_EmptyStatement_1 = null;

        EObject this_ExpressionStatement_2 = null;

        EObject this_ForLoop_3 = null;

        EObject this_Iteration_4 = null;

        EObject this_WhileLoop_5 = null;

        EObject this_DoWhileLoop_6 = null;

        EObject this_IfStatement_7 = null;

        EObject this_ReturnStatement_8 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:4961:2: ( (this_Block_0= ruleBlock | this_EmptyStatement_1= ruleEmptyStatement | this_ExpressionStatement_2= ruleExpressionStatement | this_ForLoop_3= ruleForLoop | this_Iteration_4= ruleIteration | this_WhileLoop_5= ruleWhileLoop | this_DoWhileLoop_6= ruleDoWhileLoop | this_IfStatement_7= ruleIfStatement | this_ReturnStatement_8= ruleReturnStatement ) )
            // InternalUppaalXML.g:4962:2: (this_Block_0= ruleBlock | this_EmptyStatement_1= ruleEmptyStatement | this_ExpressionStatement_2= ruleExpressionStatement | this_ForLoop_3= ruleForLoop | this_Iteration_4= ruleIteration | this_WhileLoop_5= ruleWhileLoop | this_DoWhileLoop_6= ruleDoWhileLoop | this_IfStatement_7= ruleIfStatement | this_ReturnStatement_8= ruleReturnStatement )
            {
            // InternalUppaalXML.g:4962:2: (this_Block_0= ruleBlock | this_EmptyStatement_1= ruleEmptyStatement | this_ExpressionStatement_2= ruleExpressionStatement | this_ForLoop_3= ruleForLoop | this_Iteration_4= ruleIteration | this_WhileLoop_5= ruleWhileLoop | this_DoWhileLoop_6= ruleDoWhileLoop | this_IfStatement_7= ruleIfStatement | this_ReturnStatement_8= ruleReturnStatement )
            int alt68=9;
            alt68 = dfa68.predict(input);
            switch (alt68) {
                case 1 :
                    // InternalUppaalXML.g:4963:3: this_Block_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getBlockParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Block_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Block_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:4972:3: this_EmptyStatement_1= ruleEmptyStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EmptyStatement_1=ruleEmptyStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EmptyStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:4981:3: this_ExpressionStatement_2= ruleExpressionStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionStatement_2=ruleExpressionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionStatement_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:4990:3: this_ForLoop_3= ruleForLoop
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getForLoopParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ForLoop_3=ruleForLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ForLoop_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalUppaalXML.g:4999:3: this_Iteration_4= ruleIteration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getIterationParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Iteration_4=ruleIteration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Iteration_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalUppaalXML.g:5008:3: this_WhileLoop_5= ruleWhileLoop
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_WhileLoop_5=ruleWhileLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_WhileLoop_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalUppaalXML.g:5017:3: this_DoWhileLoop_6= ruleDoWhileLoop
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getDoWhileLoopParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DoWhileLoop_6=ruleDoWhileLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DoWhileLoop_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalUppaalXML.g:5026:3: this_IfStatement_7= ruleIfStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IfStatement_7=ruleIfStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IfStatement_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalUppaalXML.g:5035:3: this_ReturnStatement_8= ruleReturnStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ReturnStatement_8=ruleReturnStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReturnStatement_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleBlock"
    // InternalUppaalXML.g:5047:1: entryRuleBlock returns [EObject current=null] : iv_ruleBlock= ruleBlock EOF ;
    public final EObject entryRuleBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlock = null;


        try {
            // InternalUppaalXML.g:5047:46: (iv_ruleBlock= ruleBlock EOF )
            // InternalUppaalXML.g:5048:2: iv_ruleBlock= ruleBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlock=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlock"


    // $ANTLR start "ruleBlock"
    // InternalUppaalXML.g:5054:1: ruleBlock returns [EObject current=null] : (otherlv_0= '{' () ( (lv_declarations_2_0= ruleBlockDeclarations ) ) ( (lv_statement_3_0= ruleStatement ) )* otherlv_4= '}' ) ;
    public final EObject ruleBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        EObject lv_declarations_2_0 = null;

        EObject lv_statement_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:5060:2: ( (otherlv_0= '{' () ( (lv_declarations_2_0= ruleBlockDeclarations ) ) ( (lv_statement_3_0= ruleStatement ) )* otherlv_4= '}' ) )
            // InternalUppaalXML.g:5061:2: (otherlv_0= '{' () ( (lv_declarations_2_0= ruleBlockDeclarations ) ) ( (lv_statement_3_0= ruleStatement ) )* otherlv_4= '}' )
            {
            // InternalUppaalXML.g:5061:2: (otherlv_0= '{' () ( (lv_declarations_2_0= ruleBlockDeclarations ) ) ( (lv_statement_3_0= ruleStatement ) )* otherlv_4= '}' )
            // InternalUppaalXML.g:5062:3: otherlv_0= '{' () ( (lv_declarations_2_0= ruleBlockDeclarations ) ) ( (lv_statement_3_0= ruleStatement ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,49,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalUppaalXML.g:5066:3: ()
            // InternalUppaalXML.g:5067:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBlockAccess().getBlockAction_1(),
              					current);
              			
            }

            }

            // InternalUppaalXML.g:5073:3: ( (lv_declarations_2_0= ruleBlockDeclarations ) )
            // InternalUppaalXML.g:5074:4: (lv_declarations_2_0= ruleBlockDeclarations )
            {
            // InternalUppaalXML.g:5074:4: (lv_declarations_2_0= ruleBlockDeclarations )
            // InternalUppaalXML.g:5075:5: lv_declarations_2_0= ruleBlockDeclarations
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockAccess().getDeclarationsBlockDeclarationsParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_81);
            lv_declarations_2_0=ruleBlockDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockRule());
              					}
              					set(
              						current,
              						"declarations",
              						lv_declarations_2_0,
              						"org.muml.uppaal.UppaalXML.BlockDeclarations");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:5092:3: ( (lv_statement_3_0= ruleStatement ) )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( ((LA69_0>=RULE_ID && LA69_0<=RULE_INT)||LA69_0==15||LA69_0==17||(LA69_0>=19 && LA69_0<=21)||(LA69_0>=23 && LA69_0<=24)||(LA69_0>=26 && LA69_0<=27)||LA69_0==30||(LA69_0>=32 && LA69_0<=36)||(LA69_0>=39 && LA69_0<=41)||LA69_0==46||(LA69_0>=49 && LA69_0<=50)||LA69_0==52||LA69_0==57||LA69_0==60||(LA69_0>=66 && LA69_0<=69)||(LA69_0>=71 && LA69_0<=72)||LA69_0==74||(LA69_0>=76 && LA69_0<=81)||(LA69_0>=94 && LA69_0<=95)||LA69_0==109||LA69_0==135) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalUppaalXML.g:5093:4: (lv_statement_3_0= ruleStatement )
            	    {
            	    // InternalUppaalXML.g:5093:4: (lv_statement_3_0= ruleStatement )
            	    // InternalUppaalXML.g:5094:5: lv_statement_3_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBlockAccess().getStatementStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_81);
            	    lv_statement_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBlockRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statement",
            	      						lv_statement_3_0,
            	      						"org.muml.uppaal.UppaalXML.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            otherlv_4=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlock"


    // $ANTLR start "entryRuleBlockDeclarations"
    // InternalUppaalXML.g:5119:1: entryRuleBlockDeclarations returns [EObject current=null] : iv_ruleBlockDeclarations= ruleBlockDeclarations EOF ;
    public final EObject entryRuleBlockDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlockDeclarations = null;


        try {
            // InternalUppaalXML.g:5119:58: (iv_ruleBlockDeclarations= ruleBlockDeclarations EOF )
            // InternalUppaalXML.g:5120:2: iv_ruleBlockDeclarations= ruleBlockDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlockDeclarations=ruleBlockDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlockDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlockDeclarations"


    // $ANTLR start "ruleBlockDeclarations"
    // InternalUppaalXML.g:5126:1: ruleBlockDeclarations returns [EObject current=null] : ( () ( ( ( ( ruleBlockTypedDeclaration | ruleTypeDeclaration ) ) )=> ( (lv_declaration_1_1= ruleBlockTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )* ) ;
    public final EObject ruleBlockDeclarations() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_1_1 = null;

        EObject lv_declaration_1_2 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:5132:2: ( ( () ( ( ( ( ruleBlockTypedDeclaration | ruleTypeDeclaration ) ) )=> ( (lv_declaration_1_1= ruleBlockTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )* ) )
            // InternalUppaalXML.g:5133:2: ( () ( ( ( ( ruleBlockTypedDeclaration | ruleTypeDeclaration ) ) )=> ( (lv_declaration_1_1= ruleBlockTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )* )
            {
            // InternalUppaalXML.g:5133:2: ( () ( ( ( ( ruleBlockTypedDeclaration | ruleTypeDeclaration ) ) )=> ( (lv_declaration_1_1= ruleBlockTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )* )
            // InternalUppaalXML.g:5134:3: () ( ( ( ( ruleBlockTypedDeclaration | ruleTypeDeclaration ) ) )=> ( (lv_declaration_1_1= ruleBlockTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )*
            {
            // InternalUppaalXML.g:5134:3: ()
            // InternalUppaalXML.g:5135:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBlockDeclarationsAccess().getLocalDeclarationsAction_0(),
              					current);
              			
            }

            }

            // InternalUppaalXML.g:5141:3: ( ( ( ( ruleBlockTypedDeclaration | ruleTypeDeclaration ) ) )=> ( (lv_declaration_1_1= ruleBlockTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )*
            loop71:
            do {
                int alt71=2;
                alt71 = dfa71.predict(input);
                switch (alt71) {
            	case 1 :
            	    // InternalUppaalXML.g:5142:4: ( ( ( ruleBlockTypedDeclaration | ruleTypeDeclaration ) ) )=> ( (lv_declaration_1_1= ruleBlockTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) )
            	    {
            	    // InternalUppaalXML.g:5149:4: ( (lv_declaration_1_1= ruleBlockTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) )
            	    // InternalUppaalXML.g:5150:5: (lv_declaration_1_1= ruleBlockTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration )
            	    {
            	    // InternalUppaalXML.g:5150:5: (lv_declaration_1_1= ruleBlockTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration )
            	    int alt70=2;
            	    int LA70_0 = input.LA(1);

            	    if ( (LA70_0==RULE_ID||LA70_0==15||LA70_0==17||(LA70_0>=19 && LA70_0<=21)||(LA70_0>=23 && LA70_0<=24)||(LA70_0>=26 && LA70_0<=27)||LA70_0==30||(LA70_0>=32 && LA70_0<=36)||(LA70_0>=39 && LA70_0<=41)||LA70_0==46||(LA70_0>=57 && LA70_0<=62)||(LA70_0>=79 && LA70_0<=81)||LA70_0==83||LA70_0==99||LA70_0==135) ) {
            	        alt70=1;
            	    }
            	    else if ( (LA70_0==63) ) {
            	        alt70=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 70, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt70) {
            	        case 1 :
            	            // InternalUppaalXML.g:5151:6: lv_declaration_1_1= ruleBlockTypedDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getBlockDeclarationsAccess().getDeclarationBlockTypedDeclarationParserRuleCall_1_0_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_55);
            	            lv_declaration_1_1=ruleBlockTypedDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getBlockDeclarationsRule());
            	              						}
            	              						add(
            	              							current,
            	              							"declaration",
            	              							lv_declaration_1_1,
            	              							"org.muml.uppaal.UppaalXML.BlockTypedDeclaration");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalUppaalXML.g:5167:6: lv_declaration_1_2= ruleTypeDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getBlockDeclarationsAccess().getDeclarationTypeDeclarationParserRuleCall_1_0_1());
            	              					
            	            }
            	            pushFollow(FOLLOW_55);
            	            lv_declaration_1_2=ruleTypeDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getBlockDeclarationsRule());
            	              						}
            	              						add(
            	              							current,
            	              							"declaration",
            	              							lv_declaration_1_2,
            	              							"org.muml.uppaal.UppaalXML.TypeDeclaration");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlockDeclarations"


    // $ANTLR start "entryRuleBlockTypedDeclaration"
    // InternalUppaalXML.g:5189:1: entryRuleBlockTypedDeclaration returns [EObject current=null] : iv_ruleBlockTypedDeclaration= ruleBlockTypedDeclaration EOF ;
    public final EObject entryRuleBlockTypedDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlockTypedDeclaration = null;


        try {
            // InternalUppaalXML.g:5189:62: (iv_ruleBlockTypedDeclaration= ruleBlockTypedDeclaration EOF )
            // InternalUppaalXML.g:5190:2: iv_ruleBlockTypedDeclaration= ruleBlockTypedDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockTypedDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlockTypedDeclaration=ruleBlockTypedDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlockTypedDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlockTypedDeclaration"


    // $ANTLR start "ruleBlockTypedDeclaration"
    // InternalUppaalXML.g:5196:1: ruleBlockTypedDeclaration returns [EObject current=null] : ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleVariable ) ) (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )* otherlv_4= ';' ) ;
    public final EObject ruleBlockTypedDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_typeDefinition_0_0 = null;

        EObject lv_elements_1_0 = null;

        EObject lv_elements_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:5202:2: ( ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleVariable ) ) (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )* otherlv_4= ';' ) )
            // InternalUppaalXML.g:5203:2: ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleVariable ) ) (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )* otherlv_4= ';' )
            {
            // InternalUppaalXML.g:5203:2: ( ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleVariable ) ) (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )* otherlv_4= ';' )
            // InternalUppaalXML.g:5204:3: ( (lv_typeDefinition_0_0= ruleTypeExpression ) ) ( (lv_elements_1_0= ruleVariable ) ) (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )* otherlv_4= ';'
            {
            // InternalUppaalXML.g:5204:3: ( (lv_typeDefinition_0_0= ruleTypeExpression ) )
            // InternalUppaalXML.g:5205:4: (lv_typeDefinition_0_0= ruleTypeExpression )
            {
            // InternalUppaalXML.g:5205:4: (lv_typeDefinition_0_0= ruleTypeExpression )
            // InternalUppaalXML.g:5206:5: lv_typeDefinition_0_0= ruleTypeExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockTypedDeclarationAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_typeDefinition_0_0=ruleTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockTypedDeclarationRule());
              					}
              					set(
              						current,
              						"typeDefinition",
              						lv_typeDefinition_0_0,
              						"org.muml.uppaal.UppaalXML.TypeExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:5223:3: ( (lv_elements_1_0= ruleVariable ) )
            // InternalUppaalXML.g:5224:4: (lv_elements_1_0= ruleVariable )
            {
            // InternalUppaalXML.g:5224:4: (lv_elements_1_0= ruleVariable )
            // InternalUppaalXML.g:5225:5: lv_elements_1_0= ruleVariable
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockTypedDeclarationAccess().getElementsVariableParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_65);
            lv_elements_1_0=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockTypedDeclarationRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_1_0,
              						"org.muml.uppaal.UppaalXML.Variable");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:5242:3: (otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==28) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalUppaalXML.g:5243:4: otherlv_2= ',' ( (lv_elements_3_0= ruleVariable ) )
            	    {
            	    otherlv_2=(Token)match(input,28,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getBlockTypedDeclarationAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalUppaalXML.g:5247:4: ( (lv_elements_3_0= ruleVariable ) )
            	    // InternalUppaalXML.g:5248:5: (lv_elements_3_0= ruleVariable )
            	    {
            	    // InternalUppaalXML.g:5248:5: (lv_elements_3_0= ruleVariable )
            	    // InternalUppaalXML.g:5249:6: lv_elements_3_0= ruleVariable
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBlockTypedDeclarationAccess().getElementsVariableParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_elements_3_0=ruleVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBlockTypedDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_3_0,
            	      							"org.muml.uppaal.UppaalXML.Variable");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            otherlv_4=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getBlockTypedDeclarationAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlockTypedDeclaration"


    // $ANTLR start "entryRuleEmptyStatement"
    // InternalUppaalXML.g:5275:1: entryRuleEmptyStatement returns [EObject current=null] : iv_ruleEmptyStatement= ruleEmptyStatement EOF ;
    public final EObject entryRuleEmptyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyStatement = null;


        try {
            // InternalUppaalXML.g:5275:55: (iv_ruleEmptyStatement= ruleEmptyStatement EOF )
            // InternalUppaalXML.g:5276:2: iv_ruleEmptyStatement= ruleEmptyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyStatement=ruleEmptyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyStatement"


    // $ANTLR start "ruleEmptyStatement"
    // InternalUppaalXML.g:5282:1: ruleEmptyStatement returns [EObject current=null] : (otherlv_0= ';' () ) ;
    public final EObject ruleEmptyStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:5288:2: ( (otherlv_0= ';' () ) )
            // InternalUppaalXML.g:5289:2: (otherlv_0= ';' () )
            {
            // InternalUppaalXML.g:5289:2: (otherlv_0= ';' () )
            // InternalUppaalXML.g:5290:3: otherlv_0= ';' ()
            {
            otherlv_0=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_0());
              		
            }
            // InternalUppaalXML.g:5294:3: ()
            // InternalUppaalXML.g:5295:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_1(),
              					current);
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyStatement"


    // $ANTLR start "entryRuleExpressionStatement"
    // InternalUppaalXML.g:5305:1: entryRuleExpressionStatement returns [EObject current=null] : iv_ruleExpressionStatement= ruleExpressionStatement EOF ;
    public final EObject entryRuleExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionStatement = null;


        try {
            // InternalUppaalXML.g:5305:60: (iv_ruleExpressionStatement= ruleExpressionStatement EOF )
            // InternalUppaalXML.g:5306:2: iv_ruleExpressionStatement= ruleExpressionStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionStatement=ruleExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionStatement"


    // $ANTLR start "ruleExpressionStatement"
    // InternalUppaalXML.g:5312:1: ruleExpressionStatement returns [EObject current=null] : ( ( (lv_expression_0_0= ruleExpression ) ) otherlv_1= ';' ) ;
    public final EObject ruleExpressionStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_0_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:5318:2: ( ( ( (lv_expression_0_0= ruleExpression ) ) otherlv_1= ';' ) )
            // InternalUppaalXML.g:5319:2: ( ( (lv_expression_0_0= ruleExpression ) ) otherlv_1= ';' )
            {
            // InternalUppaalXML.g:5319:2: ( ( (lv_expression_0_0= ruleExpression ) ) otherlv_1= ';' )
            // InternalUppaalXML.g:5320:3: ( (lv_expression_0_0= ruleExpression ) ) otherlv_1= ';'
            {
            // InternalUppaalXML.g:5320:3: ( (lv_expression_0_0= ruleExpression ) )
            // InternalUppaalXML.g:5321:4: (lv_expression_0_0= ruleExpression )
            {
            // InternalUppaalXML.g:5321:4: (lv_expression_0_0= ruleExpression )
            // InternalUppaalXML.g:5322:5: lv_expression_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_58);
            lv_expression_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_0_0,
              						"org.muml.uppaal.UppaalXML.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionStatement"


    // $ANTLR start "entryRuleForLoop"
    // InternalUppaalXML.g:5347:1: entryRuleForLoop returns [EObject current=null] : iv_ruleForLoop= ruleForLoop EOF ;
    public final EObject entryRuleForLoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForLoop = null;


        try {
            // InternalUppaalXML.g:5347:48: (iv_ruleForLoop= ruleForLoop EOF )
            // InternalUppaalXML.g:5348:2: iv_ruleForLoop= ruleForLoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForLoopRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForLoop=ruleForLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForLoop; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForLoop"


    // $ANTLR start "ruleForLoop"
    // InternalUppaalXML.g:5354:1: ruleForLoop returns [EObject current=null] : (otherlv_0= 'for' otherlv_1= '(' ( (lv_initialization_2_0= ruleExpression ) ) otherlv_3= ';' ( (lv_condition_4_0= ruleExpression ) ) otherlv_5= ';' ( (lv_iteration_6_0= ruleExpression ) ) otherlv_7= ')' ( (lv_statement_8_0= ruleStatement ) ) ) ;
    public final EObject ruleForLoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_initialization_2_0 = null;

        EObject lv_condition_4_0 = null;

        EObject lv_iteration_6_0 = null;

        EObject lv_statement_8_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:5360:2: ( (otherlv_0= 'for' otherlv_1= '(' ( (lv_initialization_2_0= ruleExpression ) ) otherlv_3= ';' ( (lv_condition_4_0= ruleExpression ) ) otherlv_5= ';' ( (lv_iteration_6_0= ruleExpression ) ) otherlv_7= ')' ( (lv_statement_8_0= ruleStatement ) ) ) )
            // InternalUppaalXML.g:5361:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_initialization_2_0= ruleExpression ) ) otherlv_3= ';' ( (lv_condition_4_0= ruleExpression ) ) otherlv_5= ';' ( (lv_iteration_6_0= ruleExpression ) ) otherlv_7= ')' ( (lv_statement_8_0= ruleStatement ) ) )
            {
            // InternalUppaalXML.g:5361:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_initialization_2_0= ruleExpression ) ) otherlv_3= ';' ( (lv_condition_4_0= ruleExpression ) ) otherlv_5= ';' ( (lv_iteration_6_0= ruleExpression ) ) otherlv_7= ')' ( (lv_statement_8_0= ruleStatement ) ) )
            // InternalUppaalXML.g:5362:3: otherlv_0= 'for' otherlv_1= '(' ( (lv_initialization_2_0= ruleExpression ) ) otherlv_3= ';' ( (lv_condition_4_0= ruleExpression ) ) otherlv_5= ';' ( (lv_iteration_6_0= ruleExpression ) ) otherlv_7= ')' ( (lv_statement_8_0= ruleStatement ) )
            {
            otherlv_0=(Token)match(input,66,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForLoopAccess().getForKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,52,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalUppaalXML.g:5370:3: ( (lv_initialization_2_0= ruleExpression ) )
            // InternalUppaalXML.g:5371:4: (lv_initialization_2_0= ruleExpression )
            {
            // InternalUppaalXML.g:5371:4: (lv_initialization_2_0= ruleExpression )
            // InternalUppaalXML.g:5372:5: lv_initialization_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForLoopAccess().getInitializationExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_58);
            lv_initialization_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForLoopRule());
              					}
              					set(
              						current,
              						"initialization",
              						lv_initialization_2_0,
              						"org.muml.uppaal.UppaalXML.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getForLoopAccess().getSemicolonKeyword_3());
              		
            }
            // InternalUppaalXML.g:5393:3: ( (lv_condition_4_0= ruleExpression ) )
            // InternalUppaalXML.g:5394:4: (lv_condition_4_0= ruleExpression )
            {
            // InternalUppaalXML.g:5394:4: (lv_condition_4_0= ruleExpression )
            // InternalUppaalXML.g:5395:5: lv_condition_4_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForLoopAccess().getConditionExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_58);
            lv_condition_4_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForLoopRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_4_0,
              						"org.muml.uppaal.UppaalXML.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getForLoopAccess().getSemicolonKeyword_5());
              		
            }
            // InternalUppaalXML.g:5416:3: ( (lv_iteration_6_0= ruleExpression ) )
            // InternalUppaalXML.g:5417:4: (lv_iteration_6_0= ruleExpression )
            {
            // InternalUppaalXML.g:5417:4: (lv_iteration_6_0= ruleExpression )
            // InternalUppaalXML.g:5418:5: lv_iteration_6_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForLoopAccess().getIterationExpressionParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_iteration_6_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForLoopRule());
              					}
              					set(
              						current,
              						"iteration",
              						lv_iteration_6_0,
              						"org.muml.uppaal.UppaalXML.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,53,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7());
              		
            }
            // InternalUppaalXML.g:5439:3: ( (lv_statement_8_0= ruleStatement ) )
            // InternalUppaalXML.g:5440:4: (lv_statement_8_0= ruleStatement )
            {
            // InternalUppaalXML.g:5440:4: (lv_statement_8_0= ruleStatement )
            // InternalUppaalXML.g:5441:5: lv_statement_8_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForLoopAccess().getStatementStatementParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statement_8_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForLoopRule());
              					}
              					set(
              						current,
              						"statement",
              						lv_statement_8_0,
              						"org.muml.uppaal.UppaalXML.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForLoop"


    // $ANTLR start "entryRuleIteration"
    // InternalUppaalXML.g:5462:1: entryRuleIteration returns [EObject current=null] : iv_ruleIteration= ruleIteration EOF ;
    public final EObject entryRuleIteration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIteration = null;


        try {
            // InternalUppaalXML.g:5462:50: (iv_ruleIteration= ruleIteration EOF )
            // InternalUppaalXML.g:5463:2: iv_ruleIteration= ruleIteration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIterationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIteration=ruleIteration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIteration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIteration"


    // $ANTLR start "ruleIteration"
    // InternalUppaalXML.g:5469:1: ruleIteration returns [EObject current=null] : (otherlv_0= 'for' otherlv_1= '(' ( (lv_elements_2_0= ruleVariableNameOnly ) ) otherlv_3= ':' ( (lv_typeDefinition_4_0= ruleTypeExpression ) ) otherlv_5= ')' ( (lv_statement_6_0= ruleStatement ) ) ) ;
    public final EObject ruleIteration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_typeDefinition_4_0 = null;

        EObject lv_statement_6_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:5475:2: ( (otherlv_0= 'for' otherlv_1= '(' ( (lv_elements_2_0= ruleVariableNameOnly ) ) otherlv_3= ':' ( (lv_typeDefinition_4_0= ruleTypeExpression ) ) otherlv_5= ')' ( (lv_statement_6_0= ruleStatement ) ) ) )
            // InternalUppaalXML.g:5476:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_elements_2_0= ruleVariableNameOnly ) ) otherlv_3= ':' ( (lv_typeDefinition_4_0= ruleTypeExpression ) ) otherlv_5= ')' ( (lv_statement_6_0= ruleStatement ) ) )
            {
            // InternalUppaalXML.g:5476:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_elements_2_0= ruleVariableNameOnly ) ) otherlv_3= ':' ( (lv_typeDefinition_4_0= ruleTypeExpression ) ) otherlv_5= ')' ( (lv_statement_6_0= ruleStatement ) ) )
            // InternalUppaalXML.g:5477:3: otherlv_0= 'for' otherlv_1= '(' ( (lv_elements_2_0= ruleVariableNameOnly ) ) otherlv_3= ':' ( (lv_typeDefinition_4_0= ruleTypeExpression ) ) otherlv_5= ')' ( (lv_statement_6_0= ruleStatement ) )
            {
            otherlv_0=(Token)match(input,66,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIterationAccess().getForKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,52,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIterationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalUppaalXML.g:5485:3: ( (lv_elements_2_0= ruleVariableNameOnly ) )
            // InternalUppaalXML.g:5486:4: (lv_elements_2_0= ruleVariableNameOnly )
            {
            // InternalUppaalXML.g:5486:4: (lv_elements_2_0= ruleVariableNameOnly )
            // InternalUppaalXML.g:5487:5: lv_elements_2_0= ruleVariableNameOnly
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIterationAccess().getElementsVariableNameOnlyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_elements_2_0=ruleVariableNameOnly();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIterationRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_2_0,
              						"org.muml.uppaal.UppaalXML.VariableNameOnly");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,47,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getIterationAccess().getColonKeyword_3());
              		
            }
            // InternalUppaalXML.g:5508:3: ( (lv_typeDefinition_4_0= ruleTypeExpression ) )
            // InternalUppaalXML.g:5509:4: (lv_typeDefinition_4_0= ruleTypeExpression )
            {
            // InternalUppaalXML.g:5509:4: (lv_typeDefinition_4_0= ruleTypeExpression )
            // InternalUppaalXML.g:5510:5: lv_typeDefinition_4_0= ruleTypeExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIterationAccess().getTypeDefinitionTypeExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_typeDefinition_4_0=ruleTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIterationRule());
              					}
              					set(
              						current,
              						"typeDefinition",
              						lv_typeDefinition_4_0,
              						"org.muml.uppaal.UppaalXML.TypeExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,53,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getIterationAccess().getRightParenthesisKeyword_5());
              		
            }
            // InternalUppaalXML.g:5531:3: ( (lv_statement_6_0= ruleStatement ) )
            // InternalUppaalXML.g:5532:4: (lv_statement_6_0= ruleStatement )
            {
            // InternalUppaalXML.g:5532:4: (lv_statement_6_0= ruleStatement )
            // InternalUppaalXML.g:5533:5: lv_statement_6_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIterationAccess().getStatementStatementParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statement_6_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIterationRule());
              					}
              					set(
              						current,
              						"statement",
              						lv_statement_6_0,
              						"org.muml.uppaal.UppaalXML.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIteration"


    // $ANTLR start "entryRuleWhileLoop"
    // InternalUppaalXML.g:5554:1: entryRuleWhileLoop returns [EObject current=null] : iv_ruleWhileLoop= ruleWhileLoop EOF ;
    public final EObject entryRuleWhileLoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileLoop = null;


        try {
            // InternalUppaalXML.g:5554:50: (iv_ruleWhileLoop= ruleWhileLoop EOF )
            // InternalUppaalXML.g:5555:2: iv_ruleWhileLoop= ruleWhileLoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhileLoopRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhileLoop=ruleWhileLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhileLoop; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhileLoop"


    // $ANTLR start "ruleWhileLoop"
    // InternalUppaalXML.g:5561:1: ruleWhileLoop returns [EObject current=null] : (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ')' ( (lv_statement_4_0= ruleStatement ) ) ) ;
    public final EObject ruleWhileLoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:5567:2: ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ')' ( (lv_statement_4_0= ruleStatement ) ) ) )
            // InternalUppaalXML.g:5568:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ')' ( (lv_statement_4_0= ruleStatement ) ) )
            {
            // InternalUppaalXML.g:5568:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ')' ( (lv_statement_4_0= ruleStatement ) ) )
            // InternalUppaalXML.g:5569:3: otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ')' ( (lv_statement_4_0= ruleStatement ) )
            {
            otherlv_0=(Token)match(input,67,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getWhileLoopAccess().getWhileKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,52,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalUppaalXML.g:5577:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalUppaalXML.g:5578:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalUppaalXML.g:5578:4: (lv_expression_2_0= ruleExpression )
            // InternalUppaalXML.g:5579:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhileLoopAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhileLoopRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.muml.uppaal.UppaalXML.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,53,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalUppaalXML.g:5600:3: ( (lv_statement_4_0= ruleStatement ) )
            // InternalUppaalXML.g:5601:4: (lv_statement_4_0= ruleStatement )
            {
            // InternalUppaalXML.g:5601:4: (lv_statement_4_0= ruleStatement )
            // InternalUppaalXML.g:5602:5: lv_statement_4_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhileLoopRule());
              					}
              					set(
              						current,
              						"statement",
              						lv_statement_4_0,
              						"org.muml.uppaal.UppaalXML.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhileLoop"


    // $ANTLR start "entryRuleDoWhileLoop"
    // InternalUppaalXML.g:5623:1: entryRuleDoWhileLoop returns [EObject current=null] : iv_ruleDoWhileLoop= ruleDoWhileLoop EOF ;
    public final EObject entryRuleDoWhileLoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDoWhileLoop = null;


        try {
            // InternalUppaalXML.g:5623:52: (iv_ruleDoWhileLoop= ruleDoWhileLoop EOF )
            // InternalUppaalXML.g:5624:2: iv_ruleDoWhileLoop= ruleDoWhileLoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDoWhileLoopRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDoWhileLoop=ruleDoWhileLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDoWhileLoop; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDoWhileLoop"


    // $ANTLR start "ruleDoWhileLoop"
    // InternalUppaalXML.g:5630:1: ruleDoWhileLoop returns [EObject current=null] : (otherlv_0= 'do' ( (lv_statement_1_0= ruleStatement ) ) otherlv_2= 'while' otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' otherlv_6= ';' ) ;
    public final EObject ruleDoWhileLoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_statement_1_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:5636:2: ( (otherlv_0= 'do' ( (lv_statement_1_0= ruleStatement ) ) otherlv_2= 'while' otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' otherlv_6= ';' ) )
            // InternalUppaalXML.g:5637:2: (otherlv_0= 'do' ( (lv_statement_1_0= ruleStatement ) ) otherlv_2= 'while' otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' otherlv_6= ';' )
            {
            // InternalUppaalXML.g:5637:2: (otherlv_0= 'do' ( (lv_statement_1_0= ruleStatement ) ) otherlv_2= 'while' otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' otherlv_6= ';' )
            // InternalUppaalXML.g:5638:3: otherlv_0= 'do' ( (lv_statement_1_0= ruleStatement ) ) otherlv_2= 'while' otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' otherlv_6= ';'
            {
            otherlv_0=(Token)match(input,68,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDoWhileLoopAccess().getDoKeyword_0());
              		
            }
            // InternalUppaalXML.g:5642:3: ( (lv_statement_1_0= ruleStatement ) )
            // InternalUppaalXML.g:5643:4: (lv_statement_1_0= ruleStatement )
            {
            // InternalUppaalXML.g:5643:4: (lv_statement_1_0= ruleStatement )
            // InternalUppaalXML.g:5644:5: lv_statement_1_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDoWhileLoopAccess().getStatementStatementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_84);
            lv_statement_1_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDoWhileLoopRule());
              					}
              					set(
              						current,
              						"statement",
              						lv_statement_1_0,
              						"org.muml.uppaal.UppaalXML.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,67,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDoWhileLoopAccess().getWhileKeyword_2());
              		
            }
            otherlv_3=(Token)match(input,52,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDoWhileLoopAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalUppaalXML.g:5669:3: ( (lv_expression_4_0= ruleExpression ) )
            // InternalUppaalXML.g:5670:4: (lv_expression_4_0= ruleExpression )
            {
            // InternalUppaalXML.g:5670:4: (lv_expression_4_0= ruleExpression )
            // InternalUppaalXML.g:5671:5: lv_expression_4_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDoWhileLoopAccess().getExpressionExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_expression_4_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDoWhileLoopRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_4_0,
              						"org.muml.uppaal.UppaalXML.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,53,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDoWhileLoopAccess().getRightParenthesisKeyword_5());
              		
            }
            otherlv_6=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDoWhileLoopAccess().getSemicolonKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDoWhileLoop"


    // $ANTLR start "entryRuleIfStatement"
    // InternalUppaalXML.g:5700:1: entryRuleIfStatement returns [EObject current=null] : iv_ruleIfStatement= ruleIfStatement EOF ;
    public final EObject entryRuleIfStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStatement = null;


        try {
            // InternalUppaalXML.g:5700:52: (iv_ruleIfStatement= ruleIfStatement EOF )
            // InternalUppaalXML.g:5701:2: iv_ruleIfStatement= ruleIfStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfStatement=ruleIfStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfStatement"


    // $ANTLR start "ruleIfStatement"
    // InternalUppaalXML.g:5707:1: ruleIfStatement returns [EObject current=null] : (otherlv_0= 'if' otherlv_1= '(' ( (lv_ifExpression_2_0= ruleExpression ) ) otherlv_3= ')' ( (lv_thenStatement_4_0= ruleStatement ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_elseStatement_6_0= ruleStatement ) ) )? ) ;
    public final EObject ruleIfStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ifExpression_2_0 = null;

        EObject lv_thenStatement_4_0 = null;

        EObject lv_elseStatement_6_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:5713:2: ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_ifExpression_2_0= ruleExpression ) ) otherlv_3= ')' ( (lv_thenStatement_4_0= ruleStatement ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_elseStatement_6_0= ruleStatement ) ) )? ) )
            // InternalUppaalXML.g:5714:2: (otherlv_0= 'if' otherlv_1= '(' ( (lv_ifExpression_2_0= ruleExpression ) ) otherlv_3= ')' ( (lv_thenStatement_4_0= ruleStatement ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_elseStatement_6_0= ruleStatement ) ) )? )
            {
            // InternalUppaalXML.g:5714:2: (otherlv_0= 'if' otherlv_1= '(' ( (lv_ifExpression_2_0= ruleExpression ) ) otherlv_3= ')' ( (lv_thenStatement_4_0= ruleStatement ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_elseStatement_6_0= ruleStatement ) ) )? )
            // InternalUppaalXML.g:5715:3: otherlv_0= 'if' otherlv_1= '(' ( (lv_ifExpression_2_0= ruleExpression ) ) otherlv_3= ')' ( (lv_thenStatement_4_0= ruleStatement ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_elseStatement_6_0= ruleStatement ) ) )?
            {
            otherlv_0=(Token)match(input,69,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,52,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalUppaalXML.g:5723:3: ( (lv_ifExpression_2_0= ruleExpression ) )
            // InternalUppaalXML.g:5724:4: (lv_ifExpression_2_0= ruleExpression )
            {
            // InternalUppaalXML.g:5724:4: (lv_ifExpression_2_0= ruleExpression )
            // InternalUppaalXML.g:5725:5: lv_ifExpression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStatementAccess().getIfExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_ifExpression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStatementRule());
              					}
              					set(
              						current,
              						"ifExpression",
              						lv_ifExpression_2_0,
              						"org.muml.uppaal.UppaalXML.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,53,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalUppaalXML.g:5746:3: ( (lv_thenStatement_4_0= ruleStatement ) )
            // InternalUppaalXML.g:5747:4: (lv_thenStatement_4_0= ruleStatement )
            {
            // InternalUppaalXML.g:5747:4: (lv_thenStatement_4_0= ruleStatement )
            // InternalUppaalXML.g:5748:5: lv_thenStatement_4_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStatementAccess().getThenStatementStatementParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_85);
            lv_thenStatement_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStatementRule());
              					}
              					set(
              						current,
              						"thenStatement",
              						lv_thenStatement_4_0,
              						"org.muml.uppaal.UppaalXML.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:5765:3: ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_elseStatement_6_0= ruleStatement ) ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==70) ) {
                int LA73_1 = input.LA(2);

                if ( (synpred2_InternalUppaalXML()) ) {
                    alt73=1;
                }
            }
            switch (alt73) {
                case 1 :
                    // InternalUppaalXML.g:5766:4: ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_elseStatement_6_0= ruleStatement ) )
                    {
                    // InternalUppaalXML.g:5766:4: ( ( 'else' )=>otherlv_5= 'else' )
                    // InternalUppaalXML.g:5767:5: ( 'else' )=>otherlv_5= 'else'
                    {
                    otherlv_5=(Token)match(input,70,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
                      				
                    }

                    }

                    // InternalUppaalXML.g:5773:4: ( (lv_elseStatement_6_0= ruleStatement ) )
                    // InternalUppaalXML.g:5774:5: (lv_elseStatement_6_0= ruleStatement )
                    {
                    // InternalUppaalXML.g:5774:5: (lv_elseStatement_6_0= ruleStatement )
                    // InternalUppaalXML.g:5775:6: lv_elseStatement_6_0= ruleStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfStatementAccess().getElseStatementStatementParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_elseStatement_6_0=ruleStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfStatementRule());
                      						}
                      						set(
                      							current,
                      							"elseStatement",
                      							lv_elseStatement_6_0,
                      							"org.muml.uppaal.UppaalXML.Statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfStatement"


    // $ANTLR start "entryRuleReturnStatement"
    // InternalUppaalXML.g:5797:1: entryRuleReturnStatement returns [EObject current=null] : iv_ruleReturnStatement= ruleReturnStatement EOF ;
    public final EObject entryRuleReturnStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStatement = null;


        try {
            // InternalUppaalXML.g:5797:56: (iv_ruleReturnStatement= ruleReturnStatement EOF )
            // InternalUppaalXML.g:5798:2: iv_ruleReturnStatement= ruleReturnStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnStatement=ruleReturnStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnStatement"


    // $ANTLR start "ruleReturnStatement"
    // InternalUppaalXML.g:5804:1: ruleReturnStatement returns [EObject current=null] : ( () otherlv_1= 'return' ( (lv_returnExpression_2_0= ruleExpression ) )? otherlv_3= ';' ) ;
    public final EObject ruleReturnStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_returnExpression_2_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:5810:2: ( ( () otherlv_1= 'return' ( (lv_returnExpression_2_0= ruleExpression ) )? otherlv_3= ';' ) )
            // InternalUppaalXML.g:5811:2: ( () otherlv_1= 'return' ( (lv_returnExpression_2_0= ruleExpression ) )? otherlv_3= ';' )
            {
            // InternalUppaalXML.g:5811:2: ( () otherlv_1= 'return' ( (lv_returnExpression_2_0= ruleExpression ) )? otherlv_3= ';' )
            // InternalUppaalXML.g:5812:3: () otherlv_1= 'return' ( (lv_returnExpression_2_0= ruleExpression ) )? otherlv_3= ';'
            {
            // InternalUppaalXML.g:5812:3: ()
            // InternalUppaalXML.g:5813:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getReturnStatementAccess().getReturnStatementAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnStatementAccess().getReturnKeyword_1());
              		
            }
            // InternalUppaalXML.g:5823:3: ( (lv_returnExpression_2_0= ruleExpression ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( ((LA74_0>=RULE_ID && LA74_0<=RULE_INT)||LA74_0==15||LA74_0==17||(LA74_0>=19 && LA74_0<=21)||(LA74_0>=23 && LA74_0<=24)||(LA74_0>=26 && LA74_0<=27)||LA74_0==30||(LA74_0>=32 && LA74_0<=36)||(LA74_0>=39 && LA74_0<=41)||LA74_0==46||LA74_0==52||LA74_0==57||LA74_0==60||LA74_0==72||LA74_0==74||(LA74_0>=76 && LA74_0<=81)||(LA74_0>=94 && LA74_0<=95)||LA74_0==109||LA74_0==135) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalUppaalXML.g:5824:4: (lv_returnExpression_2_0= ruleExpression )
                    {
                    // InternalUppaalXML.g:5824:4: (lv_returnExpression_2_0= ruleExpression )
                    // InternalUppaalXML.g:5825:5: lv_returnExpression_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnStatementAccess().getReturnExpressionExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_58);
                    lv_returnExpression_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnStatementRule());
                      					}
                      					set(
                      						current,
                      						"returnExpression",
                      						lv_returnExpression_2_0,
                      						"org.muml.uppaal.UppaalXML.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnStatement"


    // $ANTLR start "entryRuleExpression"
    // InternalUppaalXML.g:5850:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:5852:2: (iv_ruleExpression= ruleExpression EOF )
            // InternalUppaalXML.g:5853:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalUppaalXML.g:5862:1: ruleExpression returns [EObject current=null] : this_QuantificationExpression_0= ruleQuantificationExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_QuantificationExpression_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SINGLE_LINE_COMMENT", "RULE_MULTI_LINE_COMMENT");

        try {
            // InternalUppaalXML.g:5869:2: (this_QuantificationExpression_0= ruleQuantificationExpression )
            // InternalUppaalXML.g:5870:2: this_QuantificationExpression_0= ruleQuantificationExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getQuantificationExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_QuantificationExpression_0=ruleQuantificationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_QuantificationExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleQuantificationExpression"
    // InternalUppaalXML.g:5884:1: entryRuleQuantificationExpression returns [EObject current=null] : iv_ruleQuantificationExpression= ruleQuantificationExpression EOF ;
    public final EObject entryRuleQuantificationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuantificationExpression = null;


        try {
            // InternalUppaalXML.g:5884:65: (iv_ruleQuantificationExpression= ruleQuantificationExpression EOF )
            // InternalUppaalXML.g:5885:2: iv_ruleQuantificationExpression= ruleQuantificationExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuantificationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuantificationExpression=ruleQuantificationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuantificationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuantificationExpression"


    // $ANTLR start "ruleQuantificationExpression"
    // InternalUppaalXML.g:5891:1: ruleQuantificationExpression returns [EObject current=null] : ( ( () ( (lv_quantifier_1_0= ruleQuantifier ) ) otherlv_2= '(' ( (lv_elements_3_0= ruleVariableNameOnly ) ) otherlv_4= ':' ( (lv_typeDefinition_5_0= ruleTypeExpression ) ) otherlv_6= ')' ( (lv_expression_7_0= ruleLogicalExpression_OrImply ) ) ) | this_LogicalExpression_OrImply_8= ruleLogicalExpression_OrImply ) ;
    public final EObject ruleQuantificationExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Enumerator lv_quantifier_1_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_typeDefinition_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject this_LogicalExpression_OrImply_8 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:5897:2: ( ( ( () ( (lv_quantifier_1_0= ruleQuantifier ) ) otherlv_2= '(' ( (lv_elements_3_0= ruleVariableNameOnly ) ) otherlv_4= ':' ( (lv_typeDefinition_5_0= ruleTypeExpression ) ) otherlv_6= ')' ( (lv_expression_7_0= ruleLogicalExpression_OrImply ) ) ) | this_LogicalExpression_OrImply_8= ruleLogicalExpression_OrImply ) )
            // InternalUppaalXML.g:5898:2: ( ( () ( (lv_quantifier_1_0= ruleQuantifier ) ) otherlv_2= '(' ( (lv_elements_3_0= ruleVariableNameOnly ) ) otherlv_4= ':' ( (lv_typeDefinition_5_0= ruleTypeExpression ) ) otherlv_6= ')' ( (lv_expression_7_0= ruleLogicalExpression_OrImply ) ) ) | this_LogicalExpression_OrImply_8= ruleLogicalExpression_OrImply )
            {
            // InternalUppaalXML.g:5898:2: ( ( () ( (lv_quantifier_1_0= ruleQuantifier ) ) otherlv_2= '(' ( (lv_elements_3_0= ruleVariableNameOnly ) ) otherlv_4= ':' ( (lv_typeDefinition_5_0= ruleTypeExpression ) ) otherlv_6= ')' ( (lv_expression_7_0= ruleLogicalExpression_OrImply ) ) ) | this_LogicalExpression_OrImply_8= ruleLogicalExpression_OrImply )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( ((LA75_0>=94 && LA75_0<=95)) ) {
                alt75=1;
            }
            else if ( ((LA75_0>=RULE_ID && LA75_0<=RULE_INT)||LA75_0==15||LA75_0==17||(LA75_0>=19 && LA75_0<=21)||(LA75_0>=23 && LA75_0<=24)||(LA75_0>=26 && LA75_0<=27)||LA75_0==30||(LA75_0>=32 && LA75_0<=36)||(LA75_0>=39 && LA75_0<=41)||LA75_0==46||LA75_0==52||LA75_0==57||LA75_0==60||LA75_0==72||LA75_0==74||(LA75_0>=76 && LA75_0<=81)||LA75_0==109||LA75_0==135) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalUppaalXML.g:5899:3: ( () ( (lv_quantifier_1_0= ruleQuantifier ) ) otherlv_2= '(' ( (lv_elements_3_0= ruleVariableNameOnly ) ) otherlv_4= ':' ( (lv_typeDefinition_5_0= ruleTypeExpression ) ) otherlv_6= ')' ( (lv_expression_7_0= ruleLogicalExpression_OrImply ) ) )
                    {
                    // InternalUppaalXML.g:5899:3: ( () ( (lv_quantifier_1_0= ruleQuantifier ) ) otherlv_2= '(' ( (lv_elements_3_0= ruleVariableNameOnly ) ) otherlv_4= ':' ( (lv_typeDefinition_5_0= ruleTypeExpression ) ) otherlv_6= ')' ( (lv_expression_7_0= ruleLogicalExpression_OrImply ) ) )
                    // InternalUppaalXML.g:5900:4: () ( (lv_quantifier_1_0= ruleQuantifier ) ) otherlv_2= '(' ( (lv_elements_3_0= ruleVariableNameOnly ) ) otherlv_4= ':' ( (lv_typeDefinition_5_0= ruleTypeExpression ) ) otherlv_6= ')' ( (lv_expression_7_0= ruleLogicalExpression_OrImply ) )
                    {
                    // InternalUppaalXML.g:5900:4: ()
                    // InternalUppaalXML.g:5901:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getQuantificationExpressionAccess().getQuantificationExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalUppaalXML.g:5907:4: ( (lv_quantifier_1_0= ruleQuantifier ) )
                    // InternalUppaalXML.g:5908:5: (lv_quantifier_1_0= ruleQuantifier )
                    {
                    // InternalUppaalXML.g:5908:5: (lv_quantifier_1_0= ruleQuantifier )
                    // InternalUppaalXML.g:5909:6: lv_quantifier_1_0= ruleQuantifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantificationExpressionAccess().getQuantifierQuantifierEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    lv_quantifier_1_0=ruleQuantifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantificationExpressionRule());
                      						}
                      						set(
                      							current,
                      							"quantifier",
                      							lv_quantifier_1_0,
                      							"org.muml.uppaal.UppaalXML.Quantifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,52,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getQuantificationExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
                    // InternalUppaalXML.g:5930:4: ( (lv_elements_3_0= ruleVariableNameOnly ) )
                    // InternalUppaalXML.g:5931:5: (lv_elements_3_0= ruleVariableNameOnly )
                    {
                    // InternalUppaalXML.g:5931:5: (lv_elements_3_0= ruleVariableNameOnly )
                    // InternalUppaalXML.g:5932:6: lv_elements_3_0= ruleVariableNameOnly
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantificationExpressionAccess().getElementsVariableNameOnlyParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_elements_3_0=ruleVariableNameOnly();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantificationExpressionRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.muml.uppaal.UppaalXML.VariableNameOnly");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,47,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getQuantificationExpressionAccess().getColonKeyword_0_4());
                      			
                    }
                    // InternalUppaalXML.g:5953:4: ( (lv_typeDefinition_5_0= ruleTypeExpression ) )
                    // InternalUppaalXML.g:5954:5: (lv_typeDefinition_5_0= ruleTypeExpression )
                    {
                    // InternalUppaalXML.g:5954:5: (lv_typeDefinition_5_0= ruleTypeExpression )
                    // InternalUppaalXML.g:5955:6: lv_typeDefinition_5_0= ruleTypeExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantificationExpressionAccess().getTypeDefinitionTypeExpressionParserRuleCall_0_5_0());
                      					
                    }
                    pushFollow(FOLLOW_82);
                    lv_typeDefinition_5_0=ruleTypeExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantificationExpressionRule());
                      						}
                      						set(
                      							current,
                      							"typeDefinition",
                      							lv_typeDefinition_5_0,
                      							"org.muml.uppaal.UppaalXML.TypeExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,53,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getQuantificationExpressionAccess().getRightParenthesisKeyword_0_6());
                      			
                    }
                    // InternalUppaalXML.g:5976:4: ( (lv_expression_7_0= ruleLogicalExpression_OrImply ) )
                    // InternalUppaalXML.g:5977:5: (lv_expression_7_0= ruleLogicalExpression_OrImply )
                    {
                    // InternalUppaalXML.g:5977:5: (lv_expression_7_0= ruleLogicalExpression_OrImply )
                    // InternalUppaalXML.g:5978:6: lv_expression_7_0= ruleLogicalExpression_OrImply
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantificationExpressionAccess().getExpressionLogicalExpression_OrImplyParserRuleCall_0_7_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_7_0=ruleLogicalExpression_OrImply();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantificationExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_7_0,
                      							"org.muml.uppaal.UppaalXML.LogicalExpression_OrImply");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:5997:3: this_LogicalExpression_OrImply_8= ruleLogicalExpression_OrImply
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuantificationExpressionAccess().getLogicalExpression_OrImplyParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LogicalExpression_OrImply_8=ruleLogicalExpression_OrImply();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LogicalExpression_OrImply_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantificationExpression"


    // $ANTLR start "entryRuleLogicalExpression_OrImply"
    // InternalUppaalXML.g:6009:1: entryRuleLogicalExpression_OrImply returns [EObject current=null] : iv_ruleLogicalExpression_OrImply= ruleLogicalExpression_OrImply EOF ;
    public final EObject entryRuleLogicalExpression_OrImply() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalExpression_OrImply = null;


        try {
            // InternalUppaalXML.g:6009:66: (iv_ruleLogicalExpression_OrImply= ruleLogicalExpression_OrImply EOF )
            // InternalUppaalXML.g:6010:2: iv_ruleLogicalExpression_OrImply= ruleLogicalExpression_OrImply EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalExpression_OrImplyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalExpression_OrImply=ruleLogicalExpression_OrImply();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalExpression_OrImply; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalExpression_OrImply"


    // $ANTLR start "ruleLogicalExpression_OrImply"
    // InternalUppaalXML.g:6016:1: ruleLogicalExpression_OrImply returns [EObject current=null] : (this_LogicalExpression_And_0= ruleLogicalExpression_And ( () ( (lv_operator_2_0= ruleLogicalOperator_OrImply ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_And ) ) )* ) ;
    public final EObject ruleLogicalExpression_OrImply() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalExpression_And_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6022:2: ( (this_LogicalExpression_And_0= ruleLogicalExpression_And ( () ( (lv_operator_2_0= ruleLogicalOperator_OrImply ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_And ) ) )* ) )
            // InternalUppaalXML.g:6023:2: (this_LogicalExpression_And_0= ruleLogicalExpression_And ( () ( (lv_operator_2_0= ruleLogicalOperator_OrImply ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_And ) ) )* )
            {
            // InternalUppaalXML.g:6023:2: (this_LogicalExpression_And_0= ruleLogicalExpression_And ( () ( (lv_operator_2_0= ruleLogicalOperator_OrImply ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_And ) ) )* )
            // InternalUppaalXML.g:6024:3: this_LogicalExpression_And_0= ruleLogicalExpression_And ( () ( (lv_operator_2_0= ruleLogicalOperator_OrImply ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_And ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalExpression_OrImplyAccess().getLogicalExpression_AndParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_87);
            this_LogicalExpression_And_0=ruleLogicalExpression_And();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalExpression_And_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6032:3: ( () ( (lv_operator_2_0= ruleLogicalOperator_OrImply ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_And ) ) )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( ((LA76_0>=92 && LA76_0<=93)) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalUppaalXML.g:6033:4: () ( (lv_operator_2_0= ruleLogicalOperator_OrImply ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_And ) )
            	    {
            	    // InternalUppaalXML.g:6033:4: ()
            	    // InternalUppaalXML.g:6034:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLogicalExpression_OrImplyAccess().getLogicalExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:6040:4: ( (lv_operator_2_0= ruleLogicalOperator_OrImply ) )
            	    // InternalUppaalXML.g:6041:5: (lv_operator_2_0= ruleLogicalOperator_OrImply )
            	    {
            	    // InternalUppaalXML.g:6041:5: (lv_operator_2_0= ruleLogicalOperator_OrImply )
            	    // InternalUppaalXML.g:6042:6: lv_operator_2_0= ruleLogicalOperator_OrImply
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLogicalExpression_OrImplyAccess().getOperatorLogicalOperator_OrImplyEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleLogicalOperator_OrImply();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLogicalExpression_OrImplyRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.LogicalOperator_OrImply");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:6059:4: ( (lv_secondExpr_3_0= ruleLogicalExpression_And ) )
            	    // InternalUppaalXML.g:6060:5: (lv_secondExpr_3_0= ruleLogicalExpression_And )
            	    {
            	    // InternalUppaalXML.g:6060:5: (lv_secondExpr_3_0= ruleLogicalExpression_And )
            	    // InternalUppaalXML.g:6061:6: lv_secondExpr_3_0= ruleLogicalExpression_And
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLogicalExpression_OrImplyAccess().getSecondExprLogicalExpression_AndParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_secondExpr_3_0=ruleLogicalExpression_And();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLogicalExpression_OrImplyRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.LogicalExpression_And");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalExpression_OrImply"


    // $ANTLR start "entryRuleLogicalExpression_And"
    // InternalUppaalXML.g:6083:1: entryRuleLogicalExpression_And returns [EObject current=null] : iv_ruleLogicalExpression_And= ruleLogicalExpression_And EOF ;
    public final EObject entryRuleLogicalExpression_And() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalExpression_And = null;


        try {
            // InternalUppaalXML.g:6083:62: (iv_ruleLogicalExpression_And= ruleLogicalExpression_And EOF )
            // InternalUppaalXML.g:6084:2: iv_ruleLogicalExpression_And= ruleLogicalExpression_And EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalExpression_AndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalExpression_And=ruleLogicalExpression_And();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalExpression_And; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalExpression_And"


    // $ANTLR start "ruleLogicalExpression_And"
    // InternalUppaalXML.g:6090:1: ruleLogicalExpression_And returns [EObject current=null] : (this_NegationExpression_0= ruleNegationExpression ( () ( (lv_operator_2_0= ruleLogicalOperator_And ) ) ( (lv_secondExpr_3_0= ruleNegationExpression ) ) )* ) ;
    public final EObject ruleLogicalExpression_And() throws RecognitionException {
        EObject current = null;

        EObject this_NegationExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6096:2: ( (this_NegationExpression_0= ruleNegationExpression ( () ( (lv_operator_2_0= ruleLogicalOperator_And ) ) ( (lv_secondExpr_3_0= ruleNegationExpression ) ) )* ) )
            // InternalUppaalXML.g:6097:2: (this_NegationExpression_0= ruleNegationExpression ( () ( (lv_operator_2_0= ruleLogicalOperator_And ) ) ( (lv_secondExpr_3_0= ruleNegationExpression ) ) )* )
            {
            // InternalUppaalXML.g:6097:2: (this_NegationExpression_0= ruleNegationExpression ( () ( (lv_operator_2_0= ruleLogicalOperator_And ) ) ( (lv_secondExpr_3_0= ruleNegationExpression ) ) )* )
            // InternalUppaalXML.g:6098:3: this_NegationExpression_0= ruleNegationExpression ( () ( (lv_operator_2_0= ruleLogicalOperator_And ) ) ( (lv_secondExpr_3_0= ruleNegationExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalExpression_AndAccess().getNegationExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_88);
            this_NegationExpression_0=ruleNegationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegationExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6106:3: ( () ( (lv_operator_2_0= ruleLogicalOperator_And ) ) ( (lv_secondExpr_3_0= ruleNegationExpression ) ) )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==91) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalUppaalXML.g:6107:4: () ( (lv_operator_2_0= ruleLogicalOperator_And ) ) ( (lv_secondExpr_3_0= ruleNegationExpression ) )
            	    {
            	    // InternalUppaalXML.g:6107:4: ()
            	    // InternalUppaalXML.g:6108:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLogicalExpression_AndAccess().getLogicalExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:6114:4: ( (lv_operator_2_0= ruleLogicalOperator_And ) )
            	    // InternalUppaalXML.g:6115:5: (lv_operator_2_0= ruleLogicalOperator_And )
            	    {
            	    // InternalUppaalXML.g:6115:5: (lv_operator_2_0= ruleLogicalOperator_And )
            	    // InternalUppaalXML.g:6116:6: lv_operator_2_0= ruleLogicalOperator_And
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLogicalExpression_AndAccess().getOperatorLogicalOperator_AndEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleLogicalOperator_And();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLogicalExpression_AndRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.LogicalOperator_And");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:6133:4: ( (lv_secondExpr_3_0= ruleNegationExpression ) )
            	    // InternalUppaalXML.g:6134:5: (lv_secondExpr_3_0= ruleNegationExpression )
            	    {
            	    // InternalUppaalXML.g:6134:5: (lv_secondExpr_3_0= ruleNegationExpression )
            	    // InternalUppaalXML.g:6135:6: lv_secondExpr_3_0= ruleNegationExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLogicalExpression_AndAccess().getSecondExprNegationExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_88);
            	    lv_secondExpr_3_0=ruleNegationExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLogicalExpression_AndRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.NegationExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalExpression_And"


    // $ANTLR start "entryRuleNegationExpression"
    // InternalUppaalXML.g:6157:1: entryRuleNegationExpression returns [EObject current=null] : iv_ruleNegationExpression= ruleNegationExpression EOF ;
    public final EObject entryRuleNegationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegationExpression = null;


        try {
            // InternalUppaalXML.g:6157:59: (iv_ruleNegationExpression= ruleNegationExpression EOF )
            // InternalUppaalXML.g:6158:2: iv_ruleNegationExpression= ruleNegationExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNegationExpression=ruleNegationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegationExpression"


    // $ANTLR start "ruleNegationExpression"
    // InternalUppaalXML.g:6164:1: ruleNegationExpression returns [EObject current=null] : ( ( () otherlv_1= 'not' ( (lv_negatedExpression_2_0= ruleAssignmentExpression ) ) ) | this_AssignmentExpression_3= ruleAssignmentExpression ) ;
    public final EObject ruleNegationExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_negatedExpression_2_0 = null;

        EObject this_AssignmentExpression_3 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6170:2: ( ( ( () otherlv_1= 'not' ( (lv_negatedExpression_2_0= ruleAssignmentExpression ) ) ) | this_AssignmentExpression_3= ruleAssignmentExpression ) )
            // InternalUppaalXML.g:6171:2: ( ( () otherlv_1= 'not' ( (lv_negatedExpression_2_0= ruleAssignmentExpression ) ) ) | this_AssignmentExpression_3= ruleAssignmentExpression )
            {
            // InternalUppaalXML.g:6171:2: ( ( () otherlv_1= 'not' ( (lv_negatedExpression_2_0= ruleAssignmentExpression ) ) ) | this_AssignmentExpression_3= ruleAssignmentExpression )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==72) ) {
                alt78=1;
            }
            else if ( ((LA78_0>=RULE_ID && LA78_0<=RULE_INT)||LA78_0==15||LA78_0==17||(LA78_0>=19 && LA78_0<=21)||(LA78_0>=23 && LA78_0<=24)||(LA78_0>=26 && LA78_0<=27)||LA78_0==30||(LA78_0>=32 && LA78_0<=36)||(LA78_0>=39 && LA78_0<=41)||LA78_0==46||LA78_0==52||LA78_0==57||LA78_0==60||LA78_0==74||(LA78_0>=76 && LA78_0<=81)||LA78_0==109||LA78_0==135) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // InternalUppaalXML.g:6172:3: ( () otherlv_1= 'not' ( (lv_negatedExpression_2_0= ruleAssignmentExpression ) ) )
                    {
                    // InternalUppaalXML.g:6172:3: ( () otherlv_1= 'not' ( (lv_negatedExpression_2_0= ruleAssignmentExpression ) ) )
                    // InternalUppaalXML.g:6173:4: () otherlv_1= 'not' ( (lv_negatedExpression_2_0= ruleAssignmentExpression ) )
                    {
                    // InternalUppaalXML.g:6173:4: ()
                    // InternalUppaalXML.g:6174:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNegationExpressionAccess().getNegationExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,72,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNegationExpressionAccess().getNotKeyword_0_1());
                      			
                    }
                    // InternalUppaalXML.g:6184:4: ( (lv_negatedExpression_2_0= ruleAssignmentExpression ) )
                    // InternalUppaalXML.g:6185:5: (lv_negatedExpression_2_0= ruleAssignmentExpression )
                    {
                    // InternalUppaalXML.g:6185:5: (lv_negatedExpression_2_0= ruleAssignmentExpression )
                    // InternalUppaalXML.g:6186:6: lv_negatedExpression_2_0= ruleAssignmentExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegationExpressionAccess().getNegatedExpressionAssignmentExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_negatedExpression_2_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegationExpressionRule());
                      						}
                      						set(
                      							current,
                      							"negatedExpression",
                      							lv_negatedExpression_2_0,
                      							"org.muml.uppaal.UppaalXML.AssignmentExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:6205:3: this_AssignmentExpression_3= ruleAssignmentExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNegationExpressionAccess().getAssignmentExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AssignmentExpression_3=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AssignmentExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegationExpression"


    // $ANTLR start "entryRuleAssignmentExpression"
    // InternalUppaalXML.g:6217:1: entryRuleAssignmentExpression returns [EObject current=null] : iv_ruleAssignmentExpression= ruleAssignmentExpression EOF ;
    public final EObject entryRuleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignmentExpression = null;


        try {
            // InternalUppaalXML.g:6217:61: (iv_ruleAssignmentExpression= ruleAssignmentExpression EOF )
            // InternalUppaalXML.g:6218:2: iv_ruleAssignmentExpression= ruleAssignmentExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignmentExpression=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignmentExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignmentExpression"


    // $ANTLR start "ruleAssignmentExpression"
    // InternalUppaalXML.g:6224:1: ruleAssignmentExpression returns [EObject current=null] : (this_ConditionExpression_0= ruleConditionExpression ( () ( (lv_operator_2_0= ruleAssignmentOperator ) ) ( (lv_secondExpr_3_0= ruleConditionExpression ) ) )? ) ;
    public final EObject ruleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ConditionExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6230:2: ( (this_ConditionExpression_0= ruleConditionExpression ( () ( (lv_operator_2_0= ruleAssignmentOperator ) ) ( (lv_secondExpr_3_0= ruleConditionExpression ) ) )? ) )
            // InternalUppaalXML.g:6231:2: (this_ConditionExpression_0= ruleConditionExpression ( () ( (lv_operator_2_0= ruleAssignmentOperator ) ) ( (lv_secondExpr_3_0= ruleConditionExpression ) ) )? )
            {
            // InternalUppaalXML.g:6231:2: (this_ConditionExpression_0= ruleConditionExpression ( () ( (lv_operator_2_0= ruleAssignmentOperator ) ) ( (lv_secondExpr_3_0= ruleConditionExpression ) ) )? )
            // InternalUppaalXML.g:6232:3: this_ConditionExpression_0= ruleConditionExpression ( () ( (lv_operator_2_0= ruleAssignmentOperator ) ) ( (lv_secondExpr_3_0= ruleConditionExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_89);
            this_ConditionExpression_0=ruleConditionExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConditionExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6240:3: ( () ( (lv_operator_2_0= ruleAssignmentOperator ) ) ( (lv_secondExpr_3_0= ruleConditionExpression ) ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==25||(LA79_0>=125 && LA79_0<=134)||LA79_0==138) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalUppaalXML.g:6241:4: () ( (lv_operator_2_0= ruleAssignmentOperator ) ) ( (lv_secondExpr_3_0= ruleConditionExpression ) )
                    {
                    // InternalUppaalXML.g:6241:4: ()
                    // InternalUppaalXML.g:6242:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionFirstExprAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalUppaalXML.g:6248:4: ( (lv_operator_2_0= ruleAssignmentOperator ) )
                    // InternalUppaalXML.g:6249:5: (lv_operator_2_0= ruleAssignmentOperator )
                    {
                    // InternalUppaalXML.g:6249:5: (lv_operator_2_0= ruleAssignmentOperator )
                    // InternalUppaalXML.g:6250:6: lv_operator_2_0= ruleAssignmentOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignmentOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_operator_2_0=ruleAssignmentOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"org.muml.uppaal.UppaalXML.AssignmentOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalUppaalXML.g:6267:4: ( (lv_secondExpr_3_0= ruleConditionExpression ) )
                    // InternalUppaalXML.g:6268:5: (lv_secondExpr_3_0= ruleConditionExpression )
                    {
                    // InternalUppaalXML.g:6268:5: (lv_secondExpr_3_0= ruleConditionExpression )
                    // InternalUppaalXML.g:6269:6: lv_secondExpr_3_0= ruleConditionExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getSecondExprConditionExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_secondExpr_3_0=ruleConditionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                      						}
                      						set(
                      							current,
                      							"secondExpr",
                      							lv_secondExpr_3_0,
                      							"org.muml.uppaal.UppaalXML.ConditionExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignmentExpression"


    // $ANTLR start "entryRuleConditionExpression"
    // InternalUppaalXML.g:6291:1: entryRuleConditionExpression returns [EObject current=null] : iv_ruleConditionExpression= ruleConditionExpression EOF ;
    public final EObject entryRuleConditionExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionExpression = null;


        try {
            // InternalUppaalXML.g:6291:60: (iv_ruleConditionExpression= ruleConditionExpression EOF )
            // InternalUppaalXML.g:6292:2: iv_ruleConditionExpression= ruleConditionExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionExpression=ruleConditionExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionExpression"


    // $ANTLR start "ruleConditionExpression"
    // InternalUppaalXML.g:6298:1: ruleConditionExpression returns [EObject current=null] : (this_LogicalExpression_OrAlternative_0= ruleLogicalExpression_OrAlternative ( () otherlv_2= '?' ( (lv_thenExpression_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_elseExpression_5_0= ruleLogicalExpression_OrAlternative ) ) )? ) ;
    public final EObject ruleConditionExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalExpression_OrAlternative_0 = null;

        EObject lv_thenExpression_3_0 = null;

        EObject lv_elseExpression_5_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6304:2: ( (this_LogicalExpression_OrAlternative_0= ruleLogicalExpression_OrAlternative ( () otherlv_2= '?' ( (lv_thenExpression_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_elseExpression_5_0= ruleLogicalExpression_OrAlternative ) ) )? ) )
            // InternalUppaalXML.g:6305:2: (this_LogicalExpression_OrAlternative_0= ruleLogicalExpression_OrAlternative ( () otherlv_2= '?' ( (lv_thenExpression_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_elseExpression_5_0= ruleLogicalExpression_OrAlternative ) ) )? )
            {
            // InternalUppaalXML.g:6305:2: (this_LogicalExpression_OrAlternative_0= ruleLogicalExpression_OrAlternative ( () otherlv_2= '?' ( (lv_thenExpression_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_elseExpression_5_0= ruleLogicalExpression_OrAlternative ) ) )? )
            // InternalUppaalXML.g:6306:3: this_LogicalExpression_OrAlternative_0= ruleLogicalExpression_OrAlternative ( () otherlv_2= '?' ( (lv_thenExpression_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_elseExpression_5_0= ruleLogicalExpression_OrAlternative ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getConditionExpressionAccess().getLogicalExpression_OrAlternativeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_90);
            this_LogicalExpression_OrAlternative_0=ruleLogicalExpression_OrAlternative();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalExpression_OrAlternative_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6314:3: ( () otherlv_2= '?' ( (lv_thenExpression_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_elseExpression_5_0= ruleLogicalExpression_OrAlternative ) ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==73) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalUppaalXML.g:6315:4: () otherlv_2= '?' ( (lv_thenExpression_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_elseExpression_5_0= ruleLogicalExpression_OrAlternative ) )
                    {
                    // InternalUppaalXML.g:6315:4: ()
                    // InternalUppaalXML.g:6316:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getConditionExpressionAccess().getConditionExpressionIfExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,73,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getConditionExpressionAccess().getQuestionMarkKeyword_1_1());
                      			
                    }
                    // InternalUppaalXML.g:6326:4: ( (lv_thenExpression_3_0= ruleExpression ) )
                    // InternalUppaalXML.g:6327:5: (lv_thenExpression_3_0= ruleExpression )
                    {
                    // InternalUppaalXML.g:6327:5: (lv_thenExpression_3_0= ruleExpression )
                    // InternalUppaalXML.g:6328:6: lv_thenExpression_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionExpressionAccess().getThenExpressionExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_thenExpression_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionExpressionRule());
                      						}
                      						set(
                      							current,
                      							"thenExpression",
                      							lv_thenExpression_3_0,
                      							"org.muml.uppaal.UppaalXML.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,47,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConditionExpressionAccess().getColonKeyword_1_3());
                      			
                    }
                    // InternalUppaalXML.g:6349:4: ( (lv_elseExpression_5_0= ruleLogicalExpression_OrAlternative ) )
                    // InternalUppaalXML.g:6350:5: (lv_elseExpression_5_0= ruleLogicalExpression_OrAlternative )
                    {
                    // InternalUppaalXML.g:6350:5: (lv_elseExpression_5_0= ruleLogicalExpression_OrAlternative )
                    // InternalUppaalXML.g:6351:6: lv_elseExpression_5_0= ruleLogicalExpression_OrAlternative
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionExpressionAccess().getElseExpressionLogicalExpression_OrAlternativeParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_elseExpression_5_0=ruleLogicalExpression_OrAlternative();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionExpressionRule());
                      						}
                      						set(
                      							current,
                      							"elseExpression",
                      							lv_elseExpression_5_0,
                      							"org.muml.uppaal.UppaalXML.LogicalExpression_OrAlternative");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionExpression"


    // $ANTLR start "entryRuleLogicalExpression_OrAlternative"
    // InternalUppaalXML.g:6373:1: entryRuleLogicalExpression_OrAlternative returns [EObject current=null] : iv_ruleLogicalExpression_OrAlternative= ruleLogicalExpression_OrAlternative EOF ;
    public final EObject entryRuleLogicalExpression_OrAlternative() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalExpression_OrAlternative = null;


        try {
            // InternalUppaalXML.g:6373:72: (iv_ruleLogicalExpression_OrAlternative= ruleLogicalExpression_OrAlternative EOF )
            // InternalUppaalXML.g:6374:2: iv_ruleLogicalExpression_OrAlternative= ruleLogicalExpression_OrAlternative EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalExpression_OrAlternativeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalExpression_OrAlternative=ruleLogicalExpression_OrAlternative();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalExpression_OrAlternative; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalExpression_OrAlternative"


    // $ANTLR start "ruleLogicalExpression_OrAlternative"
    // InternalUppaalXML.g:6380:1: ruleLogicalExpression_OrAlternative returns [EObject current=null] : (this_LogicalExpression_AndAlternative_0= ruleLogicalExpression_AndAlternative ( () ( (lv_operator_2_0= ruleLogicalOperator_OrAlternative ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_AndAlternative ) ) )* ) ;
    public final EObject ruleLogicalExpression_OrAlternative() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalExpression_AndAlternative_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6386:2: ( (this_LogicalExpression_AndAlternative_0= ruleLogicalExpression_AndAlternative ( () ( (lv_operator_2_0= ruleLogicalOperator_OrAlternative ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_AndAlternative ) ) )* ) )
            // InternalUppaalXML.g:6387:2: (this_LogicalExpression_AndAlternative_0= ruleLogicalExpression_AndAlternative ( () ( (lv_operator_2_0= ruleLogicalOperator_OrAlternative ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_AndAlternative ) ) )* )
            {
            // InternalUppaalXML.g:6387:2: (this_LogicalExpression_AndAlternative_0= ruleLogicalExpression_AndAlternative ( () ( (lv_operator_2_0= ruleLogicalOperator_OrAlternative ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_AndAlternative ) ) )* )
            // InternalUppaalXML.g:6388:3: this_LogicalExpression_AndAlternative_0= ruleLogicalExpression_AndAlternative ( () ( (lv_operator_2_0= ruleLogicalOperator_OrAlternative ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_AndAlternative ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalExpression_OrAlternativeAccess().getLogicalExpression_AndAlternativeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_91);
            this_LogicalExpression_AndAlternative_0=ruleLogicalExpression_AndAlternative();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalExpression_AndAlternative_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6396:3: ( () ( (lv_operator_2_0= ruleLogicalOperator_OrAlternative ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_AndAlternative ) ) )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==124) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalUppaalXML.g:6397:4: () ( (lv_operator_2_0= ruleLogicalOperator_OrAlternative ) ) ( (lv_secondExpr_3_0= ruleLogicalExpression_AndAlternative ) )
            	    {
            	    // InternalUppaalXML.g:6397:4: ()
            	    // InternalUppaalXML.g:6398:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLogicalExpression_OrAlternativeAccess().getLogicalExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:6404:4: ( (lv_operator_2_0= ruleLogicalOperator_OrAlternative ) )
            	    // InternalUppaalXML.g:6405:5: (lv_operator_2_0= ruleLogicalOperator_OrAlternative )
            	    {
            	    // InternalUppaalXML.g:6405:5: (lv_operator_2_0= ruleLogicalOperator_OrAlternative )
            	    // InternalUppaalXML.g:6406:6: lv_operator_2_0= ruleLogicalOperator_OrAlternative
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLogicalExpression_OrAlternativeAccess().getOperatorLogicalOperator_OrAlternativeEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleLogicalOperator_OrAlternative();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLogicalExpression_OrAlternativeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.LogicalOperator_OrAlternative");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:6423:4: ( (lv_secondExpr_3_0= ruleLogicalExpression_AndAlternative ) )
            	    // InternalUppaalXML.g:6424:5: (lv_secondExpr_3_0= ruleLogicalExpression_AndAlternative )
            	    {
            	    // InternalUppaalXML.g:6424:5: (lv_secondExpr_3_0= ruleLogicalExpression_AndAlternative )
            	    // InternalUppaalXML.g:6425:6: lv_secondExpr_3_0= ruleLogicalExpression_AndAlternative
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLogicalExpression_OrAlternativeAccess().getSecondExprLogicalExpression_AndAlternativeParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_secondExpr_3_0=ruleLogicalExpression_AndAlternative();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLogicalExpression_OrAlternativeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.LogicalExpression_AndAlternative");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalExpression_OrAlternative"


    // $ANTLR start "entryRuleLogicalExpression_AndAlternative"
    // InternalUppaalXML.g:6447:1: entryRuleLogicalExpression_AndAlternative returns [EObject current=null] : iv_ruleLogicalExpression_AndAlternative= ruleLogicalExpression_AndAlternative EOF ;
    public final EObject entryRuleLogicalExpression_AndAlternative() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalExpression_AndAlternative = null;


        try {
            // InternalUppaalXML.g:6447:73: (iv_ruleLogicalExpression_AndAlternative= ruleLogicalExpression_AndAlternative EOF )
            // InternalUppaalXML.g:6448:2: iv_ruleLogicalExpression_AndAlternative= ruleLogicalExpression_AndAlternative EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalExpression_AndAlternativeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalExpression_AndAlternative=ruleLogicalExpression_AndAlternative();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalExpression_AndAlternative; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalExpression_AndAlternative"


    // $ANTLR start "ruleLogicalExpression_AndAlternative"
    // InternalUppaalXML.g:6454:1: ruleLogicalExpression_AndAlternative returns [EObject current=null] : (this_BitwiseExpression_Or_0= ruleBitwiseExpression_Or ( () ( (lv_operator_2_0= ruleLogicalOperator_AndAlternative ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Or ) ) )* ) ;
    public final EObject ruleLogicalExpression_AndAlternative() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseExpression_Or_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6460:2: ( (this_BitwiseExpression_Or_0= ruleBitwiseExpression_Or ( () ( (lv_operator_2_0= ruleLogicalOperator_AndAlternative ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Or ) ) )* ) )
            // InternalUppaalXML.g:6461:2: (this_BitwiseExpression_Or_0= ruleBitwiseExpression_Or ( () ( (lv_operator_2_0= ruleLogicalOperator_AndAlternative ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Or ) ) )* )
            {
            // InternalUppaalXML.g:6461:2: (this_BitwiseExpression_Or_0= ruleBitwiseExpression_Or ( () ( (lv_operator_2_0= ruleLogicalOperator_AndAlternative ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Or ) ) )* )
            // InternalUppaalXML.g:6462:3: this_BitwiseExpression_Or_0= ruleBitwiseExpression_Or ( () ( (lv_operator_2_0= ruleLogicalOperator_AndAlternative ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Or ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalExpression_AndAlternativeAccess().getBitwiseExpression_OrParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_92);
            this_BitwiseExpression_Or_0=ruleBitwiseExpression_Or();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseExpression_Or_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6470:3: ( () ( (lv_operator_2_0= ruleLogicalOperator_AndAlternative ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Or ) ) )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==123) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalUppaalXML.g:6471:4: () ( (lv_operator_2_0= ruleLogicalOperator_AndAlternative ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Or ) )
            	    {
            	    // InternalUppaalXML.g:6471:4: ()
            	    // InternalUppaalXML.g:6472:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLogicalExpression_AndAlternativeAccess().getLogicalExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:6478:4: ( (lv_operator_2_0= ruleLogicalOperator_AndAlternative ) )
            	    // InternalUppaalXML.g:6479:5: (lv_operator_2_0= ruleLogicalOperator_AndAlternative )
            	    {
            	    // InternalUppaalXML.g:6479:5: (lv_operator_2_0= ruleLogicalOperator_AndAlternative )
            	    // InternalUppaalXML.g:6480:6: lv_operator_2_0= ruleLogicalOperator_AndAlternative
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLogicalExpression_AndAlternativeAccess().getOperatorLogicalOperator_AndAlternativeEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleLogicalOperator_AndAlternative();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLogicalExpression_AndAlternativeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.LogicalOperator_AndAlternative");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:6497:4: ( (lv_secondExpr_3_0= ruleBitwiseExpression_Or ) )
            	    // InternalUppaalXML.g:6498:5: (lv_secondExpr_3_0= ruleBitwiseExpression_Or )
            	    {
            	    // InternalUppaalXML.g:6498:5: (lv_secondExpr_3_0= ruleBitwiseExpression_Or )
            	    // InternalUppaalXML.g:6499:6: lv_secondExpr_3_0= ruleBitwiseExpression_Or
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLogicalExpression_AndAlternativeAccess().getSecondExprBitwiseExpression_OrParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_92);
            	    lv_secondExpr_3_0=ruleBitwiseExpression_Or();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLogicalExpression_AndAlternativeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.BitwiseExpression_Or");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalExpression_AndAlternative"


    // $ANTLR start "entryRuleBitwiseExpression_Or"
    // InternalUppaalXML.g:6521:1: entryRuleBitwiseExpression_Or returns [EObject current=null] : iv_ruleBitwiseExpression_Or= ruleBitwiseExpression_Or EOF ;
    public final EObject entryRuleBitwiseExpression_Or() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseExpression_Or = null;


        try {
            // InternalUppaalXML.g:6521:61: (iv_ruleBitwiseExpression_Or= ruleBitwiseExpression_Or EOF )
            // InternalUppaalXML.g:6522:2: iv_ruleBitwiseExpression_Or= ruleBitwiseExpression_Or EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseExpression_OrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseExpression_Or=ruleBitwiseExpression_Or();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseExpression_Or; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseExpression_Or"


    // $ANTLR start "ruleBitwiseExpression_Or"
    // InternalUppaalXML.g:6528:1: ruleBitwiseExpression_Or returns [EObject current=null] : (this_BitwiseExpression_Xor_0= ruleBitwiseExpression_Xor ( () ( (lv_operator_2_0= ruleBitwiseOperator_Or ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Xor ) ) )* ) ;
    public final EObject ruleBitwiseExpression_Or() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseExpression_Xor_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6534:2: ( (this_BitwiseExpression_Xor_0= ruleBitwiseExpression_Xor ( () ( (lv_operator_2_0= ruleBitwiseOperator_Or ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Xor ) ) )* ) )
            // InternalUppaalXML.g:6535:2: (this_BitwiseExpression_Xor_0= ruleBitwiseExpression_Xor ( () ( (lv_operator_2_0= ruleBitwiseOperator_Or ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Xor ) ) )* )
            {
            // InternalUppaalXML.g:6535:2: (this_BitwiseExpression_Xor_0= ruleBitwiseExpression_Xor ( () ( (lv_operator_2_0= ruleBitwiseOperator_Or ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Xor ) ) )* )
            // InternalUppaalXML.g:6536:3: this_BitwiseExpression_Xor_0= ruleBitwiseExpression_Xor ( () ( (lv_operator_2_0= ruleBitwiseOperator_Or ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Xor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseExpression_OrAccess().getBitwiseExpression_XorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_93);
            this_BitwiseExpression_Xor_0=ruleBitwiseExpression_Xor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseExpression_Xor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6544:3: ( () ( (lv_operator_2_0= ruleBitwiseOperator_Or ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Xor ) ) )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==121) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalUppaalXML.g:6545:4: () ( (lv_operator_2_0= ruleBitwiseOperator_Or ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_Xor ) )
            	    {
            	    // InternalUppaalXML.g:6545:4: ()
            	    // InternalUppaalXML.g:6546:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getBitwiseExpression_OrAccess().getBitwiseExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:6552:4: ( (lv_operator_2_0= ruleBitwiseOperator_Or ) )
            	    // InternalUppaalXML.g:6553:5: (lv_operator_2_0= ruleBitwiseOperator_Or )
            	    {
            	    // InternalUppaalXML.g:6553:5: (lv_operator_2_0= ruleBitwiseOperator_Or )
            	    // InternalUppaalXML.g:6554:6: lv_operator_2_0= ruleBitwiseOperator_Or
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBitwiseExpression_OrAccess().getOperatorBitwiseOperator_OrEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleBitwiseOperator_Or();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBitwiseExpression_OrRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.BitwiseOperator_Or");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:6571:4: ( (lv_secondExpr_3_0= ruleBitwiseExpression_Xor ) )
            	    // InternalUppaalXML.g:6572:5: (lv_secondExpr_3_0= ruleBitwiseExpression_Xor )
            	    {
            	    // InternalUppaalXML.g:6572:5: (lv_secondExpr_3_0= ruleBitwiseExpression_Xor )
            	    // InternalUppaalXML.g:6573:6: lv_secondExpr_3_0= ruleBitwiseExpression_Xor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBitwiseExpression_OrAccess().getSecondExprBitwiseExpression_XorParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_93);
            	    lv_secondExpr_3_0=ruleBitwiseExpression_Xor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBitwiseExpression_OrRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.BitwiseExpression_Xor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseExpression_Or"


    // $ANTLR start "entryRuleBitwiseExpression_Xor"
    // InternalUppaalXML.g:6595:1: entryRuleBitwiseExpression_Xor returns [EObject current=null] : iv_ruleBitwiseExpression_Xor= ruleBitwiseExpression_Xor EOF ;
    public final EObject entryRuleBitwiseExpression_Xor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseExpression_Xor = null;


        try {
            // InternalUppaalXML.g:6595:62: (iv_ruleBitwiseExpression_Xor= ruleBitwiseExpression_Xor EOF )
            // InternalUppaalXML.g:6596:2: iv_ruleBitwiseExpression_Xor= ruleBitwiseExpression_Xor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseExpression_XorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseExpression_Xor=ruleBitwiseExpression_Xor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseExpression_Xor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseExpression_Xor"


    // $ANTLR start "ruleBitwiseExpression_Xor"
    // InternalUppaalXML.g:6602:1: ruleBitwiseExpression_Xor returns [EObject current=null] : (this_BitwiseExpression_And_0= ruleBitwiseExpression_And ( () ( (lv_operator_2_0= ruleBitwiseOperator_Xor ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_And ) ) )* ) ;
    public final EObject ruleBitwiseExpression_Xor() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseExpression_And_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6608:2: ( (this_BitwiseExpression_And_0= ruleBitwiseExpression_And ( () ( (lv_operator_2_0= ruleBitwiseOperator_Xor ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_And ) ) )* ) )
            // InternalUppaalXML.g:6609:2: (this_BitwiseExpression_And_0= ruleBitwiseExpression_And ( () ( (lv_operator_2_0= ruleBitwiseOperator_Xor ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_And ) ) )* )
            {
            // InternalUppaalXML.g:6609:2: (this_BitwiseExpression_And_0= ruleBitwiseExpression_And ( () ( (lv_operator_2_0= ruleBitwiseOperator_Xor ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_And ) ) )* )
            // InternalUppaalXML.g:6610:3: this_BitwiseExpression_And_0= ruleBitwiseExpression_And ( () ( (lv_operator_2_0= ruleBitwiseOperator_Xor ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_And ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseExpression_XorAccess().getBitwiseExpression_AndParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_94);
            this_BitwiseExpression_And_0=ruleBitwiseExpression_And();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseExpression_And_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6618:3: ( () ( (lv_operator_2_0= ruleBitwiseOperator_Xor ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_And ) ) )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==120) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // InternalUppaalXML.g:6619:4: () ( (lv_operator_2_0= ruleBitwiseOperator_Xor ) ) ( (lv_secondExpr_3_0= ruleBitwiseExpression_And ) )
            	    {
            	    // InternalUppaalXML.g:6619:4: ()
            	    // InternalUppaalXML.g:6620:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getBitwiseExpression_XorAccess().getBitwiseExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:6626:4: ( (lv_operator_2_0= ruleBitwiseOperator_Xor ) )
            	    // InternalUppaalXML.g:6627:5: (lv_operator_2_0= ruleBitwiseOperator_Xor )
            	    {
            	    // InternalUppaalXML.g:6627:5: (lv_operator_2_0= ruleBitwiseOperator_Xor )
            	    // InternalUppaalXML.g:6628:6: lv_operator_2_0= ruleBitwiseOperator_Xor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBitwiseExpression_XorAccess().getOperatorBitwiseOperator_XorEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleBitwiseOperator_Xor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBitwiseExpression_XorRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.BitwiseOperator_Xor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:6645:4: ( (lv_secondExpr_3_0= ruleBitwiseExpression_And ) )
            	    // InternalUppaalXML.g:6646:5: (lv_secondExpr_3_0= ruleBitwiseExpression_And )
            	    {
            	    // InternalUppaalXML.g:6646:5: (lv_secondExpr_3_0= ruleBitwiseExpression_And )
            	    // InternalUppaalXML.g:6647:6: lv_secondExpr_3_0= ruleBitwiseExpression_And
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBitwiseExpression_XorAccess().getSecondExprBitwiseExpression_AndParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_secondExpr_3_0=ruleBitwiseExpression_And();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBitwiseExpression_XorRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.BitwiseExpression_And");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseExpression_Xor"


    // $ANTLR start "entryRuleBitwiseExpression_And"
    // InternalUppaalXML.g:6669:1: entryRuleBitwiseExpression_And returns [EObject current=null] : iv_ruleBitwiseExpression_And= ruleBitwiseExpression_And EOF ;
    public final EObject entryRuleBitwiseExpression_And() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseExpression_And = null;


        try {
            // InternalUppaalXML.g:6669:62: (iv_ruleBitwiseExpression_And= ruleBitwiseExpression_And EOF )
            // InternalUppaalXML.g:6670:2: iv_ruleBitwiseExpression_And= ruleBitwiseExpression_And EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseExpression_AndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseExpression_And=ruleBitwiseExpression_And();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseExpression_And; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseExpression_And"


    // $ANTLR start "ruleBitwiseExpression_And"
    // InternalUppaalXML.g:6676:1: ruleBitwiseExpression_And returns [EObject current=null] : (this_CompareExpression_EqualUnequal_0= ruleCompareExpression_EqualUnequal ( () ( (lv_operator_2_0= ruleBitwiseOperator_And ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_EqualUnequal ) ) )* ) ;
    public final EObject ruleBitwiseExpression_And() throws RecognitionException {
        EObject current = null;

        EObject this_CompareExpression_EqualUnequal_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6682:2: ( (this_CompareExpression_EqualUnequal_0= ruleCompareExpression_EqualUnequal ( () ( (lv_operator_2_0= ruleBitwiseOperator_And ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_EqualUnequal ) ) )* ) )
            // InternalUppaalXML.g:6683:2: (this_CompareExpression_EqualUnequal_0= ruleCompareExpression_EqualUnequal ( () ( (lv_operator_2_0= ruleBitwiseOperator_And ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_EqualUnequal ) ) )* )
            {
            // InternalUppaalXML.g:6683:2: (this_CompareExpression_EqualUnequal_0= ruleCompareExpression_EqualUnequal ( () ( (lv_operator_2_0= ruleBitwiseOperator_And ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_EqualUnequal ) ) )* )
            // InternalUppaalXML.g:6684:3: this_CompareExpression_EqualUnequal_0= ruleCompareExpression_EqualUnequal ( () ( (lv_operator_2_0= ruleBitwiseOperator_And ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_EqualUnequal ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseExpression_AndAccess().getCompareExpression_EqualUnequalParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_95);
            this_CompareExpression_EqualUnequal_0=ruleCompareExpression_EqualUnequal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareExpression_EqualUnequal_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6692:3: ( () ( (lv_operator_2_0= ruleBitwiseOperator_And ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_EqualUnequal ) ) )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==119) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalUppaalXML.g:6693:4: () ( (lv_operator_2_0= ruleBitwiseOperator_And ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_EqualUnequal ) )
            	    {
            	    // InternalUppaalXML.g:6693:4: ()
            	    // InternalUppaalXML.g:6694:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getBitwiseExpression_AndAccess().getBitwiseExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:6700:4: ( (lv_operator_2_0= ruleBitwiseOperator_And ) )
            	    // InternalUppaalXML.g:6701:5: (lv_operator_2_0= ruleBitwiseOperator_And )
            	    {
            	    // InternalUppaalXML.g:6701:5: (lv_operator_2_0= ruleBitwiseOperator_And )
            	    // InternalUppaalXML.g:6702:6: lv_operator_2_0= ruleBitwiseOperator_And
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBitwiseExpression_AndAccess().getOperatorBitwiseOperator_AndEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleBitwiseOperator_And();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBitwiseExpression_AndRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.BitwiseOperator_And");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:6719:4: ( (lv_secondExpr_3_0= ruleCompareExpression_EqualUnequal ) )
            	    // InternalUppaalXML.g:6720:5: (lv_secondExpr_3_0= ruleCompareExpression_EqualUnequal )
            	    {
            	    // InternalUppaalXML.g:6720:5: (lv_secondExpr_3_0= ruleCompareExpression_EqualUnequal )
            	    // InternalUppaalXML.g:6721:6: lv_secondExpr_3_0= ruleCompareExpression_EqualUnequal
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBitwiseExpression_AndAccess().getSecondExprCompareExpression_EqualUnequalParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_secondExpr_3_0=ruleCompareExpression_EqualUnequal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBitwiseExpression_AndRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.CompareExpression_EqualUnequal");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseExpression_And"


    // $ANTLR start "entryRuleCompareExpression_EqualUnequal"
    // InternalUppaalXML.g:6743:1: entryRuleCompareExpression_EqualUnequal returns [EObject current=null] : iv_ruleCompareExpression_EqualUnequal= ruleCompareExpression_EqualUnequal EOF ;
    public final EObject entryRuleCompareExpression_EqualUnequal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareExpression_EqualUnequal = null;


        try {
            // InternalUppaalXML.g:6743:71: (iv_ruleCompareExpression_EqualUnequal= ruleCompareExpression_EqualUnequal EOF )
            // InternalUppaalXML.g:6744:2: iv_ruleCompareExpression_EqualUnequal= ruleCompareExpression_EqualUnequal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareExpression_EqualUnequalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompareExpression_EqualUnequal=ruleCompareExpression_EqualUnequal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareExpression_EqualUnequal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareExpression_EqualUnequal"


    // $ANTLR start "ruleCompareExpression_EqualUnequal"
    // InternalUppaalXML.g:6750:1: ruleCompareExpression_EqualUnequal returns [EObject current=null] : (this_CompareExpression_Other_0= ruleCompareExpression_Other ( () ( (lv_operator_2_0= ruleCompareOperator_EqualUnequal ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_Other ) ) )* ) ;
    public final EObject ruleCompareExpression_EqualUnequal() throws RecognitionException {
        EObject current = null;

        EObject this_CompareExpression_Other_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6756:2: ( (this_CompareExpression_Other_0= ruleCompareExpression_Other ( () ( (lv_operator_2_0= ruleCompareOperator_EqualUnequal ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_Other ) ) )* ) )
            // InternalUppaalXML.g:6757:2: (this_CompareExpression_Other_0= ruleCompareExpression_Other ( () ( (lv_operator_2_0= ruleCompareOperator_EqualUnequal ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_Other ) ) )* )
            {
            // InternalUppaalXML.g:6757:2: (this_CompareExpression_Other_0= ruleCompareExpression_Other ( () ( (lv_operator_2_0= ruleCompareOperator_EqualUnequal ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_Other ) ) )* )
            // InternalUppaalXML.g:6758:3: this_CompareExpression_Other_0= ruleCompareExpression_Other ( () ( (lv_operator_2_0= ruleCompareOperator_EqualUnequal ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_Other ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareExpression_EqualUnequalAccess().getCompareExpression_OtherParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_96);
            this_CompareExpression_Other_0=ruleCompareExpression_Other();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareExpression_Other_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6766:3: ( () ( (lv_operator_2_0= ruleCompareOperator_EqualUnequal ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_Other ) ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( ((LA86_0>=116 && LA86_0<=117)) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalUppaalXML.g:6767:4: () ( (lv_operator_2_0= ruleCompareOperator_EqualUnequal ) ) ( (lv_secondExpr_3_0= ruleCompareExpression_Other ) )
            	    {
            	    // InternalUppaalXML.g:6767:4: ()
            	    // InternalUppaalXML.g:6768:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getCompareExpression_EqualUnequalAccess().getCompareExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:6774:4: ( (lv_operator_2_0= ruleCompareOperator_EqualUnequal ) )
            	    // InternalUppaalXML.g:6775:5: (lv_operator_2_0= ruleCompareOperator_EqualUnequal )
            	    {
            	    // InternalUppaalXML.g:6775:5: (lv_operator_2_0= ruleCompareOperator_EqualUnequal )
            	    // InternalUppaalXML.g:6776:6: lv_operator_2_0= ruleCompareOperator_EqualUnequal
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCompareExpression_EqualUnequalAccess().getOperatorCompareOperator_EqualUnequalEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleCompareOperator_EqualUnequal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCompareExpression_EqualUnequalRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.CompareOperator_EqualUnequal");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:6793:4: ( (lv_secondExpr_3_0= ruleCompareExpression_Other ) )
            	    // InternalUppaalXML.g:6794:5: (lv_secondExpr_3_0= ruleCompareExpression_Other )
            	    {
            	    // InternalUppaalXML.g:6794:5: (lv_secondExpr_3_0= ruleCompareExpression_Other )
            	    // InternalUppaalXML.g:6795:6: lv_secondExpr_3_0= ruleCompareExpression_Other
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCompareExpression_EqualUnequalAccess().getSecondExprCompareExpression_OtherParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_secondExpr_3_0=ruleCompareExpression_Other();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCompareExpression_EqualUnequalRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.CompareExpression_Other");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareExpression_EqualUnequal"


    // $ANTLR start "entryRuleCompareExpression_Other"
    // InternalUppaalXML.g:6817:1: entryRuleCompareExpression_Other returns [EObject current=null] : iv_ruleCompareExpression_Other= ruleCompareExpression_Other EOF ;
    public final EObject entryRuleCompareExpression_Other() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareExpression_Other = null;


        try {
            // InternalUppaalXML.g:6817:64: (iv_ruleCompareExpression_Other= ruleCompareExpression_Other EOF )
            // InternalUppaalXML.g:6818:2: iv_ruleCompareExpression_Other= ruleCompareExpression_Other EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareExpression_OtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompareExpression_Other=ruleCompareExpression_Other();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareExpression_Other; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareExpression_Other"


    // $ANTLR start "ruleCompareExpression_Other"
    // InternalUppaalXML.g:6824:1: ruleCompareExpression_Other returns [EObject current=null] : (this_MinMaxExpression_0= ruleMinMaxExpression ( () ( (lv_operator_2_0= ruleCompareOperator_Other ) ) ( (lv_secondExpr_3_0= ruleMinMaxExpression ) ) )* ) ;
    public final EObject ruleCompareExpression_Other() throws RecognitionException {
        EObject current = null;

        EObject this_MinMaxExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6830:2: ( (this_MinMaxExpression_0= ruleMinMaxExpression ( () ( (lv_operator_2_0= ruleCompareOperator_Other ) ) ( (lv_secondExpr_3_0= ruleMinMaxExpression ) ) )* ) )
            // InternalUppaalXML.g:6831:2: (this_MinMaxExpression_0= ruleMinMaxExpression ( () ( (lv_operator_2_0= ruleCompareOperator_Other ) ) ( (lv_secondExpr_3_0= ruleMinMaxExpression ) ) )* )
            {
            // InternalUppaalXML.g:6831:2: (this_MinMaxExpression_0= ruleMinMaxExpression ( () ( (lv_operator_2_0= ruleCompareOperator_Other ) ) ( (lv_secondExpr_3_0= ruleMinMaxExpression ) ) )* )
            // InternalUppaalXML.g:6832:3: this_MinMaxExpression_0= ruleMinMaxExpression ( () ( (lv_operator_2_0= ruleCompareOperator_Other ) ) ( (lv_secondExpr_3_0= ruleMinMaxExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareExpression_OtherAccess().getMinMaxExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_97);
            this_MinMaxExpression_0=ruleMinMaxExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MinMaxExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6840:3: ( () ( (lv_operator_2_0= ruleCompareOperator_Other ) ) ( (lv_secondExpr_3_0= ruleMinMaxExpression ) ) )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==54||(LA87_0>=114 && LA87_0<=115)||LA87_0==139) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalUppaalXML.g:6841:4: () ( (lv_operator_2_0= ruleCompareOperator_Other ) ) ( (lv_secondExpr_3_0= ruleMinMaxExpression ) )
            	    {
            	    // InternalUppaalXML.g:6841:4: ()
            	    // InternalUppaalXML.g:6842:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getCompareExpression_OtherAccess().getCompareExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:6848:4: ( (lv_operator_2_0= ruleCompareOperator_Other ) )
            	    // InternalUppaalXML.g:6849:5: (lv_operator_2_0= ruleCompareOperator_Other )
            	    {
            	    // InternalUppaalXML.g:6849:5: (lv_operator_2_0= ruleCompareOperator_Other )
            	    // InternalUppaalXML.g:6850:6: lv_operator_2_0= ruleCompareOperator_Other
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCompareExpression_OtherAccess().getOperatorCompareOperator_OtherEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleCompareOperator_Other();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCompareExpression_OtherRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.CompareOperator_Other");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:6867:4: ( (lv_secondExpr_3_0= ruleMinMaxExpression ) )
            	    // InternalUppaalXML.g:6868:5: (lv_secondExpr_3_0= ruleMinMaxExpression )
            	    {
            	    // InternalUppaalXML.g:6868:5: (lv_secondExpr_3_0= ruleMinMaxExpression )
            	    // InternalUppaalXML.g:6869:6: lv_secondExpr_3_0= ruleMinMaxExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCompareExpression_OtherAccess().getSecondExprMinMaxExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_secondExpr_3_0=ruleMinMaxExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCompareExpression_OtherRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.MinMaxExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareExpression_Other"


    // $ANTLR start "entryRuleMinMaxExpression"
    // InternalUppaalXML.g:6891:1: entryRuleMinMaxExpression returns [EObject current=null] : iv_ruleMinMaxExpression= ruleMinMaxExpression EOF ;
    public final EObject entryRuleMinMaxExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMinMaxExpression = null;


        try {
            // InternalUppaalXML.g:6891:57: (iv_ruleMinMaxExpression= ruleMinMaxExpression EOF )
            // InternalUppaalXML.g:6892:2: iv_ruleMinMaxExpression= ruleMinMaxExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMinMaxExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMinMaxExpression=ruleMinMaxExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMinMaxExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMinMaxExpression"


    // $ANTLR start "ruleMinMaxExpression"
    // InternalUppaalXML.g:6898:1: ruleMinMaxExpression returns [EObject current=null] : (this_BitShiftExpression_0= ruleBitShiftExpression ( () ( (lv_operator_2_0= ruleMinMaxOperator ) ) ( (lv_secondExpr_3_0= ruleBitShiftExpression ) ) )* ) ;
    public final EObject ruleMinMaxExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitShiftExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6904:2: ( (this_BitShiftExpression_0= ruleBitShiftExpression ( () ( (lv_operator_2_0= ruleMinMaxOperator ) ) ( (lv_secondExpr_3_0= ruleBitShiftExpression ) ) )* ) )
            // InternalUppaalXML.g:6905:2: (this_BitShiftExpression_0= ruleBitShiftExpression ( () ( (lv_operator_2_0= ruleMinMaxOperator ) ) ( (lv_secondExpr_3_0= ruleBitShiftExpression ) ) )* )
            {
            // InternalUppaalXML.g:6905:2: (this_BitShiftExpression_0= ruleBitShiftExpression ( () ( (lv_operator_2_0= ruleMinMaxOperator ) ) ( (lv_secondExpr_3_0= ruleBitShiftExpression ) ) )* )
            // InternalUppaalXML.g:6906:3: this_BitShiftExpression_0= ruleBitShiftExpression ( () ( (lv_operator_2_0= ruleMinMaxOperator ) ) ( (lv_secondExpr_3_0= ruleBitShiftExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMinMaxExpressionAccess().getBitShiftExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_98);
            this_BitShiftExpression_0=ruleBitShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitShiftExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6914:3: ( () ( (lv_operator_2_0= ruleMinMaxOperator ) ) ( (lv_secondExpr_3_0= ruleBitShiftExpression ) ) )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( ((LA88_0>=112 && LA88_0<=113)) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalUppaalXML.g:6915:4: () ( (lv_operator_2_0= ruleMinMaxOperator ) ) ( (lv_secondExpr_3_0= ruleBitShiftExpression ) )
            	    {
            	    // InternalUppaalXML.g:6915:4: ()
            	    // InternalUppaalXML.g:6916:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMinMaxExpressionAccess().getMinMaxExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:6922:4: ( (lv_operator_2_0= ruleMinMaxOperator ) )
            	    // InternalUppaalXML.g:6923:5: (lv_operator_2_0= ruleMinMaxOperator )
            	    {
            	    // InternalUppaalXML.g:6923:5: (lv_operator_2_0= ruleMinMaxOperator )
            	    // InternalUppaalXML.g:6924:6: lv_operator_2_0= ruleMinMaxOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMinMaxExpressionAccess().getOperatorMinMaxOperatorEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleMinMaxOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMinMaxExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.MinMaxOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:6941:4: ( (lv_secondExpr_3_0= ruleBitShiftExpression ) )
            	    // InternalUppaalXML.g:6942:5: (lv_secondExpr_3_0= ruleBitShiftExpression )
            	    {
            	    // InternalUppaalXML.g:6942:5: (lv_secondExpr_3_0= ruleBitShiftExpression )
            	    // InternalUppaalXML.g:6943:6: lv_secondExpr_3_0= ruleBitShiftExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMinMaxExpressionAccess().getSecondExprBitShiftExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_secondExpr_3_0=ruleBitShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMinMaxExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.BitShiftExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMinMaxExpression"


    // $ANTLR start "entryRuleBitShiftExpression"
    // InternalUppaalXML.g:6965:1: entryRuleBitShiftExpression returns [EObject current=null] : iv_ruleBitShiftExpression= ruleBitShiftExpression EOF ;
    public final EObject entryRuleBitShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitShiftExpression = null;


        try {
            // InternalUppaalXML.g:6965:59: (iv_ruleBitShiftExpression= ruleBitShiftExpression EOF )
            // InternalUppaalXML.g:6966:2: iv_ruleBitShiftExpression= ruleBitShiftExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitShiftExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitShiftExpression=ruleBitShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitShiftExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitShiftExpression"


    // $ANTLR start "ruleBitShiftExpression"
    // InternalUppaalXML.g:6972:1: ruleBitShiftExpression returns [EObject current=null] : (this_ArithmeticExpression_PlusMinus_0= ruleArithmeticExpression_PlusMinus ( () ( (lv_operator_2_0= ruleBitShiftOperator ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_PlusMinus ) ) )* ) ;
    public final EObject ruleBitShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ArithmeticExpression_PlusMinus_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:6978:2: ( (this_ArithmeticExpression_PlusMinus_0= ruleArithmeticExpression_PlusMinus ( () ( (lv_operator_2_0= ruleBitShiftOperator ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_PlusMinus ) ) )* ) )
            // InternalUppaalXML.g:6979:2: (this_ArithmeticExpression_PlusMinus_0= ruleArithmeticExpression_PlusMinus ( () ( (lv_operator_2_0= ruleBitShiftOperator ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_PlusMinus ) ) )* )
            {
            // InternalUppaalXML.g:6979:2: (this_ArithmeticExpression_PlusMinus_0= ruleArithmeticExpression_PlusMinus ( () ( (lv_operator_2_0= ruleBitShiftOperator ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_PlusMinus ) ) )* )
            // InternalUppaalXML.g:6980:3: this_ArithmeticExpression_PlusMinus_0= ruleArithmeticExpression_PlusMinus ( () ( (lv_operator_2_0= ruleBitShiftOperator ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_PlusMinus ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitShiftExpressionAccess().getArithmeticExpression_PlusMinusParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_99);
            this_ArithmeticExpression_PlusMinus_0=ruleArithmeticExpression_PlusMinus();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ArithmeticExpression_PlusMinus_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:6988:3: ( () ( (lv_operator_2_0= ruleBitShiftOperator ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_PlusMinus ) ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( ((LA89_0>=110 && LA89_0<=111)) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalUppaalXML.g:6989:4: () ( (lv_operator_2_0= ruleBitShiftOperator ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_PlusMinus ) )
            	    {
            	    // InternalUppaalXML.g:6989:4: ()
            	    // InternalUppaalXML.g:6990:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getBitShiftExpressionAccess().getBitShiftExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:6996:4: ( (lv_operator_2_0= ruleBitShiftOperator ) )
            	    // InternalUppaalXML.g:6997:5: (lv_operator_2_0= ruleBitShiftOperator )
            	    {
            	    // InternalUppaalXML.g:6997:5: (lv_operator_2_0= ruleBitShiftOperator )
            	    // InternalUppaalXML.g:6998:6: lv_operator_2_0= ruleBitShiftOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBitShiftExpressionAccess().getOperatorBitShiftOperatorEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleBitShiftOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBitShiftExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.BitShiftOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:7015:4: ( (lv_secondExpr_3_0= ruleArithmeticExpression_PlusMinus ) )
            	    // InternalUppaalXML.g:7016:5: (lv_secondExpr_3_0= ruleArithmeticExpression_PlusMinus )
            	    {
            	    // InternalUppaalXML.g:7016:5: (lv_secondExpr_3_0= ruleArithmeticExpression_PlusMinus )
            	    // InternalUppaalXML.g:7017:6: lv_secondExpr_3_0= ruleArithmeticExpression_PlusMinus
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBitShiftExpressionAccess().getSecondExprArithmeticExpression_PlusMinusParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_99);
            	    lv_secondExpr_3_0=ruleArithmeticExpression_PlusMinus();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBitShiftExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.ArithmeticExpression_PlusMinus");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitShiftExpression"


    // $ANTLR start "entryRuleArithmeticExpression_PlusMinus"
    // InternalUppaalXML.g:7039:1: entryRuleArithmeticExpression_PlusMinus returns [EObject current=null] : iv_ruleArithmeticExpression_PlusMinus= ruleArithmeticExpression_PlusMinus EOF ;
    public final EObject entryRuleArithmeticExpression_PlusMinus() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArithmeticExpression_PlusMinus = null;


        try {
            // InternalUppaalXML.g:7039:71: (iv_ruleArithmeticExpression_PlusMinus= ruleArithmeticExpression_PlusMinus EOF )
            // InternalUppaalXML.g:7040:2: iv_ruleArithmeticExpression_PlusMinus= ruleArithmeticExpression_PlusMinus EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArithmeticExpression_PlusMinusRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArithmeticExpression_PlusMinus=ruleArithmeticExpression_PlusMinus();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArithmeticExpression_PlusMinus; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArithmeticExpression_PlusMinus"


    // $ANTLR start "ruleArithmeticExpression_PlusMinus"
    // InternalUppaalXML.g:7046:1: ruleArithmeticExpression_PlusMinus returns [EObject current=null] : (this_ArithmeticExpression_Other_0= ruleArithmeticExpression_Other ( () ( (lv_operator_2_0= ruleArithmeticOperator_PlusMinus ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_Other ) ) )* ) ;
    public final EObject ruleArithmeticExpression_PlusMinus() throws RecognitionException {
        EObject current = null;

        EObject this_ArithmeticExpression_Other_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7052:2: ( (this_ArithmeticExpression_Other_0= ruleArithmeticExpression_Other ( () ( (lv_operator_2_0= ruleArithmeticOperator_PlusMinus ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_Other ) ) )* ) )
            // InternalUppaalXML.g:7053:2: (this_ArithmeticExpression_Other_0= ruleArithmeticExpression_Other ( () ( (lv_operator_2_0= ruleArithmeticOperator_PlusMinus ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_Other ) ) )* )
            {
            // InternalUppaalXML.g:7053:2: (this_ArithmeticExpression_Other_0= ruleArithmeticExpression_Other ( () ( (lv_operator_2_0= ruleArithmeticOperator_PlusMinus ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_Other ) ) )* )
            // InternalUppaalXML.g:7054:3: this_ArithmeticExpression_Other_0= ruleArithmeticExpression_Other ( () ( (lv_operator_2_0= ruleArithmeticOperator_PlusMinus ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_Other ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getArithmeticExpression_PlusMinusAccess().getArithmeticExpression_OtherParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_100);
            this_ArithmeticExpression_Other_0=ruleArithmeticExpression_Other();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ArithmeticExpression_Other_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:7062:3: ( () ( (lv_operator_2_0= ruleArithmeticOperator_PlusMinus ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_Other ) ) )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==78||LA90_0==109) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalUppaalXML.g:7063:4: () ( (lv_operator_2_0= ruleArithmeticOperator_PlusMinus ) ) ( (lv_secondExpr_3_0= ruleArithmeticExpression_Other ) )
            	    {
            	    // InternalUppaalXML.g:7063:4: ()
            	    // InternalUppaalXML.g:7064:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getArithmeticExpression_PlusMinusAccess().getArithmeticExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:7070:4: ( (lv_operator_2_0= ruleArithmeticOperator_PlusMinus ) )
            	    // InternalUppaalXML.g:7071:5: (lv_operator_2_0= ruleArithmeticOperator_PlusMinus )
            	    {
            	    // InternalUppaalXML.g:7071:5: (lv_operator_2_0= ruleArithmeticOperator_PlusMinus )
            	    // InternalUppaalXML.g:7072:6: lv_operator_2_0= ruleArithmeticOperator_PlusMinus
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getArithmeticExpression_PlusMinusAccess().getOperatorArithmeticOperator_PlusMinusEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleArithmeticOperator_PlusMinus();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getArithmeticExpression_PlusMinusRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.ArithmeticOperator_PlusMinus");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:7089:4: ( (lv_secondExpr_3_0= ruleArithmeticExpression_Other ) )
            	    // InternalUppaalXML.g:7090:5: (lv_secondExpr_3_0= ruleArithmeticExpression_Other )
            	    {
            	    // InternalUppaalXML.g:7090:5: (lv_secondExpr_3_0= ruleArithmeticExpression_Other )
            	    // InternalUppaalXML.g:7091:6: lv_secondExpr_3_0= ruleArithmeticExpression_Other
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getArithmeticExpression_PlusMinusAccess().getSecondExprArithmeticExpression_OtherParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_secondExpr_3_0=ruleArithmeticExpression_Other();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getArithmeticExpression_PlusMinusRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.ArithmeticExpression_Other");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArithmeticExpression_PlusMinus"


    // $ANTLR start "entryRuleArithmeticExpression_Other"
    // InternalUppaalXML.g:7113:1: entryRuleArithmeticExpression_Other returns [EObject current=null] : iv_ruleArithmeticExpression_Other= ruleArithmeticExpression_Other EOF ;
    public final EObject entryRuleArithmeticExpression_Other() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArithmeticExpression_Other = null;


        try {
            // InternalUppaalXML.g:7113:67: (iv_ruleArithmeticExpression_Other= ruleArithmeticExpression_Other EOF )
            // InternalUppaalXML.g:7114:2: iv_ruleArithmeticExpression_Other= ruleArithmeticExpression_Other EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArithmeticExpression_OtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArithmeticExpression_Other=ruleArithmeticExpression_Other();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArithmeticExpression_Other; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArithmeticExpression_Other"


    // $ANTLR start "ruleArithmeticExpression_Other"
    // InternalUppaalXML.g:7120:1: ruleArithmeticExpression_Other returns [EObject current=null] : (this_NegationExpression_Alternative_0= ruleNegationExpression_Alternative ( () ( (lv_operator_2_0= ruleArithmeticOperator_Other ) ) ( (lv_secondExpr_3_0= ruleNegationExpression_Alternative ) ) )* ) ;
    public final EObject ruleArithmeticExpression_Other() throws RecognitionException {
        EObject current = null;

        EObject this_NegationExpression_Alternative_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_secondExpr_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7126:2: ( (this_NegationExpression_Alternative_0= ruleNegationExpression_Alternative ( () ( (lv_operator_2_0= ruleArithmeticOperator_Other ) ) ( (lv_secondExpr_3_0= ruleNegationExpression_Alternative ) ) )* ) )
            // InternalUppaalXML.g:7127:2: (this_NegationExpression_Alternative_0= ruleNegationExpression_Alternative ( () ( (lv_operator_2_0= ruleArithmeticOperator_Other ) ) ( (lv_secondExpr_3_0= ruleNegationExpression_Alternative ) ) )* )
            {
            // InternalUppaalXML.g:7127:2: (this_NegationExpression_Alternative_0= ruleNegationExpression_Alternative ( () ( (lv_operator_2_0= ruleArithmeticOperator_Other ) ) ( (lv_secondExpr_3_0= ruleNegationExpression_Alternative ) ) )* )
            // InternalUppaalXML.g:7128:3: this_NegationExpression_Alternative_0= ruleNegationExpression_Alternative ( () ( (lv_operator_2_0= ruleArithmeticOperator_Other ) ) ( (lv_secondExpr_3_0= ruleNegationExpression_Alternative ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getArithmeticExpression_OtherAccess().getNegationExpression_AlternativeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_101);
            this_NegationExpression_Alternative_0=ruleNegationExpression_Alternative();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegationExpression_Alternative_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:7136:3: ( () ( (lv_operator_2_0= ruleArithmeticOperator_Other ) ) ( (lv_secondExpr_3_0= ruleNegationExpression_Alternative ) ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( ((LA91_0>=106 && LA91_0<=108)) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalUppaalXML.g:7137:4: () ( (lv_operator_2_0= ruleArithmeticOperator_Other ) ) ( (lv_secondExpr_3_0= ruleNegationExpression_Alternative ) )
            	    {
            	    // InternalUppaalXML.g:7137:4: ()
            	    // InternalUppaalXML.g:7138:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getArithmeticExpression_OtherAccess().getArithmeticExpressionFirstExprAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalUppaalXML.g:7144:4: ( (lv_operator_2_0= ruleArithmeticOperator_Other ) )
            	    // InternalUppaalXML.g:7145:5: (lv_operator_2_0= ruleArithmeticOperator_Other )
            	    {
            	    // InternalUppaalXML.g:7145:5: (lv_operator_2_0= ruleArithmeticOperator_Other )
            	    // InternalUppaalXML.g:7146:6: lv_operator_2_0= ruleArithmeticOperator_Other
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getArithmeticExpression_OtherAccess().getOperatorArithmeticOperator_OtherEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_operator_2_0=ruleArithmeticOperator_Other();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getArithmeticExpression_OtherRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.muml.uppaal.UppaalXML.ArithmeticOperator_Other");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalUppaalXML.g:7163:4: ( (lv_secondExpr_3_0= ruleNegationExpression_Alternative ) )
            	    // InternalUppaalXML.g:7164:5: (lv_secondExpr_3_0= ruleNegationExpression_Alternative )
            	    {
            	    // InternalUppaalXML.g:7164:5: (lv_secondExpr_3_0= ruleNegationExpression_Alternative )
            	    // InternalUppaalXML.g:7165:6: lv_secondExpr_3_0= ruleNegationExpression_Alternative
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getArithmeticExpression_OtherAccess().getSecondExprNegationExpression_AlternativeParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_101);
            	    lv_secondExpr_3_0=ruleNegationExpression_Alternative();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getArithmeticExpression_OtherRule());
            	      						}
            	      						set(
            	      							current,
            	      							"secondExpr",
            	      							lv_secondExpr_3_0,
            	      							"org.muml.uppaal.UppaalXML.NegationExpression_Alternative");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArithmeticExpression_Other"


    // $ANTLR start "entryRuleNegationExpression_Alternative"
    // InternalUppaalXML.g:7187:1: entryRuleNegationExpression_Alternative returns [EObject current=null] : iv_ruleNegationExpression_Alternative= ruleNegationExpression_Alternative EOF ;
    public final EObject entryRuleNegationExpression_Alternative() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegationExpression_Alternative = null;


        try {
            // InternalUppaalXML.g:7187:71: (iv_ruleNegationExpression_Alternative= ruleNegationExpression_Alternative EOF )
            // InternalUppaalXML.g:7188:2: iv_ruleNegationExpression_Alternative= ruleNegationExpression_Alternative EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegationExpression_AlternativeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNegationExpression_Alternative=ruleNegationExpression_Alternative();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegationExpression_Alternative; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegationExpression_Alternative"


    // $ANTLR start "ruleNegationExpression_Alternative"
    // InternalUppaalXML.g:7194:1: ruleNegationExpression_Alternative returns [EObject current=null] : ( ( () otherlv_1= '!' ( (lv_negatedExpression_2_0= ruleIncrementDecrementExpression ) ) ) | this_IncrementDecrementExpression_3= ruleIncrementDecrementExpression ) ;
    public final EObject ruleNegationExpression_Alternative() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_negatedExpression_2_0 = null;

        EObject this_IncrementDecrementExpression_3 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7200:2: ( ( ( () otherlv_1= '!' ( (lv_negatedExpression_2_0= ruleIncrementDecrementExpression ) ) ) | this_IncrementDecrementExpression_3= ruleIncrementDecrementExpression ) )
            // InternalUppaalXML.g:7201:2: ( ( () otherlv_1= '!' ( (lv_negatedExpression_2_0= ruleIncrementDecrementExpression ) ) ) | this_IncrementDecrementExpression_3= ruleIncrementDecrementExpression )
            {
            // InternalUppaalXML.g:7201:2: ( ( () otherlv_1= '!' ( (lv_negatedExpression_2_0= ruleIncrementDecrementExpression ) ) ) | this_IncrementDecrementExpression_3= ruleIncrementDecrementExpression )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==74) ) {
                alt92=1;
            }
            else if ( ((LA92_0>=RULE_ID && LA92_0<=RULE_INT)||LA92_0==15||LA92_0==17||(LA92_0>=19 && LA92_0<=21)||(LA92_0>=23 && LA92_0<=24)||(LA92_0>=26 && LA92_0<=27)||LA92_0==30||(LA92_0>=32 && LA92_0<=36)||(LA92_0>=39 && LA92_0<=41)||LA92_0==46||LA92_0==52||LA92_0==57||LA92_0==60||(LA92_0>=76 && LA92_0<=81)||LA92_0==109||LA92_0==135) ) {
                alt92=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // InternalUppaalXML.g:7202:3: ( () otherlv_1= '!' ( (lv_negatedExpression_2_0= ruleIncrementDecrementExpression ) ) )
                    {
                    // InternalUppaalXML.g:7202:3: ( () otherlv_1= '!' ( (lv_negatedExpression_2_0= ruleIncrementDecrementExpression ) ) )
                    // InternalUppaalXML.g:7203:4: () otherlv_1= '!' ( (lv_negatedExpression_2_0= ruleIncrementDecrementExpression ) )
                    {
                    // InternalUppaalXML.g:7203:4: ()
                    // InternalUppaalXML.g:7204:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNegationExpression_AlternativeAccess().getNegationExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,74,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNegationExpression_AlternativeAccess().getExclamationMarkKeyword_0_1());
                      			
                    }
                    // InternalUppaalXML.g:7214:4: ( (lv_negatedExpression_2_0= ruleIncrementDecrementExpression ) )
                    // InternalUppaalXML.g:7215:5: (lv_negatedExpression_2_0= ruleIncrementDecrementExpression )
                    {
                    // InternalUppaalXML.g:7215:5: (lv_negatedExpression_2_0= ruleIncrementDecrementExpression )
                    // InternalUppaalXML.g:7216:6: lv_negatedExpression_2_0= ruleIncrementDecrementExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegationExpression_AlternativeAccess().getNegatedExpressionIncrementDecrementExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_negatedExpression_2_0=ruleIncrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegationExpression_AlternativeRule());
                      						}
                      						set(
                      							current,
                      							"negatedExpression",
                      							lv_negatedExpression_2_0,
                      							"org.muml.uppaal.UppaalXML.IncrementDecrementExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:7235:3: this_IncrementDecrementExpression_3= ruleIncrementDecrementExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNegationExpression_AlternativeAccess().getIncrementDecrementExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IncrementDecrementExpression_3=ruleIncrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IncrementDecrementExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegationExpression_Alternative"


    // $ANTLR start "entryRuleIncrementDecrementExpression"
    // InternalUppaalXML.g:7247:1: entryRuleIncrementDecrementExpression returns [EObject current=null] : iv_ruleIncrementDecrementExpression= ruleIncrementDecrementExpression EOF ;
    public final EObject entryRuleIncrementDecrementExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIncrementDecrementExpression = null;


        try {
            // InternalUppaalXML.g:7247:69: (iv_ruleIncrementDecrementExpression= ruleIncrementDecrementExpression EOF )
            // InternalUppaalXML.g:7248:2: iv_ruleIncrementDecrementExpression= ruleIncrementDecrementExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncrementDecrementExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIncrementDecrementExpression=ruleIncrementDecrementExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIncrementDecrementExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIncrementDecrementExpression"


    // $ANTLR start "ruleIncrementDecrementExpression"
    // InternalUppaalXML.g:7254:1: ruleIncrementDecrementExpression returns [EObject current=null] : this_PreIncrementDecrementExpression_0= rulePreIncrementDecrementExpression ;
    public final EObject ruleIncrementDecrementExpression() throws RecognitionException {
        EObject current = null;

        EObject this_PreIncrementDecrementExpression_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7260:2: (this_PreIncrementDecrementExpression_0= rulePreIncrementDecrementExpression )
            // InternalUppaalXML.g:7261:2: this_PreIncrementDecrementExpression_0= rulePreIncrementDecrementExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getIncrementDecrementExpressionAccess().getPreIncrementDecrementExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_PreIncrementDecrementExpression_0=rulePreIncrementDecrementExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_PreIncrementDecrementExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncrementDecrementExpression"


    // $ANTLR start "entryRulePreIncrementDecrementExpression"
    // InternalUppaalXML.g:7272:1: entryRulePreIncrementDecrementExpression returns [EObject current=null] : iv_rulePreIncrementDecrementExpression= rulePreIncrementDecrementExpression EOF ;
    public final EObject entryRulePreIncrementDecrementExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreIncrementDecrementExpression = null;


        try {
            // InternalUppaalXML.g:7272:72: (iv_rulePreIncrementDecrementExpression= rulePreIncrementDecrementExpression EOF )
            // InternalUppaalXML.g:7273:2: iv_rulePreIncrementDecrementExpression= rulePreIncrementDecrementExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreIncrementDecrementExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreIncrementDecrementExpression=rulePreIncrementDecrementExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreIncrementDecrementExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePreIncrementDecrementExpression"


    // $ANTLR start "rulePreIncrementDecrementExpression"
    // InternalUppaalXML.g:7279:1: rulePreIncrementDecrementExpression returns [EObject current=null] : (this_PostIncrementDecrementExpression_0= rulePostIncrementDecrementExpression | ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ( (lv_expression_4_0= rulePreIncrementDecrementExpression ) ) ) ) ;
    public final EObject rulePreIncrementDecrementExpression() throws RecognitionException {
        EObject current = null;

        EObject this_PostIncrementDecrementExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        Enumerator lv_operator_3_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7285:2: ( (this_PostIncrementDecrementExpression_0= rulePostIncrementDecrementExpression | ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ( (lv_expression_4_0= rulePreIncrementDecrementExpression ) ) ) ) )
            // InternalUppaalXML.g:7286:2: (this_PostIncrementDecrementExpression_0= rulePostIncrementDecrementExpression | ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ( (lv_expression_4_0= rulePreIncrementDecrementExpression ) ) ) )
            {
            // InternalUppaalXML.g:7286:2: (this_PostIncrementDecrementExpression_0= rulePostIncrementDecrementExpression | ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ( (lv_expression_4_0= rulePreIncrementDecrementExpression ) ) ) )
            int alt94=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case 15:
            case 17:
            case 19:
            case 20:
            case 21:
            case 23:
            case 24:
            case 26:
            case 27:
            case 30:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 39:
            case 40:
            case 41:
            case 46:
            case 57:
            case 60:
            case 76:
            case 77:
            case 79:
            case 80:
            case 81:
            case 135:
                {
                alt94=1;
                }
                break;
            case RULE_INT:
            case 52:
            case 78:
                {
                alt94=1;
                }
                break;
            case 109:
                {
                alt94=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }

            switch (alt94) {
                case 1 :
                    // InternalUppaalXML.g:7287:3: this_PostIncrementDecrementExpression_0= rulePostIncrementDecrementExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPreIncrementDecrementExpressionAccess().getPostIncrementDecrementExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PostIncrementDecrementExpression_0=rulePostIncrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PostIncrementDecrementExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:7296:3: ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ( (lv_expression_4_0= rulePreIncrementDecrementExpression ) ) )
                    {
                    // InternalUppaalXML.g:7296:3: ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ( (lv_expression_4_0= rulePreIncrementDecrementExpression ) ) )
                    // InternalUppaalXML.g:7297:4: () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ( (lv_expression_4_0= rulePreIncrementDecrementExpression ) )
                    {
                    // InternalUppaalXML.g:7297:4: ()
                    // InternalUppaalXML.g:7298:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPreIncrementDecrementExpressionAccess().getIncrementDecrementExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalUppaalXML.g:7304:4: ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) )
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==109) ) {
                        alt93=1;
                    }
                    else if ( (LA93_0==78) ) {
                        alt93=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 93, 0, input);

                        throw nvae;
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalUppaalXML.g:7305:5: ( (lv_operator_2_0= ruleIncrementOperator ) )
                            {
                            // InternalUppaalXML.g:7305:5: ( (lv_operator_2_0= ruleIncrementOperator ) )
                            // InternalUppaalXML.g:7306:6: (lv_operator_2_0= ruleIncrementOperator )
                            {
                            // InternalUppaalXML.g:7306:6: (lv_operator_2_0= ruleIncrementOperator )
                            // InternalUppaalXML.g:7307:7: lv_operator_2_0= ruleIncrementOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorIncrementOperatorEnumRuleCall_1_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_37);
                            lv_operator_2_0=ruleIncrementOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPreIncrementDecrementExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_2_0,
                              								"org.muml.uppaal.UppaalXML.IncrementOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalUppaalXML.g:7325:5: ( (lv_operator_3_0= ruleDecrementOperator ) )
                            {
                            // InternalUppaalXML.g:7325:5: ( (lv_operator_3_0= ruleDecrementOperator ) )
                            // InternalUppaalXML.g:7326:6: (lv_operator_3_0= ruleDecrementOperator )
                            {
                            // InternalUppaalXML.g:7326:6: (lv_operator_3_0= ruleDecrementOperator )
                            // InternalUppaalXML.g:7327:7: lv_operator_3_0= ruleDecrementOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorDecrementOperatorEnumRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_37);
                            lv_operator_3_0=ruleDecrementOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPreIncrementDecrementExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_3_0,
                              								"org.muml.uppaal.UppaalXML.DecrementOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalUppaalXML.g:7345:4: ( (lv_expression_4_0= rulePreIncrementDecrementExpression ) )
                    // InternalUppaalXML.g:7346:5: (lv_expression_4_0= rulePreIncrementDecrementExpression )
                    {
                    // InternalUppaalXML.g:7346:5: (lv_expression_4_0= rulePreIncrementDecrementExpression )
                    // InternalUppaalXML.g:7347:6: lv_expression_4_0= rulePreIncrementDecrementExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPreIncrementDecrementExpressionAccess().getExpressionPreIncrementDecrementExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=rulePreIncrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPreIncrementDecrementExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_4_0,
                      							"org.muml.uppaal.UppaalXML.PreIncrementDecrementExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreIncrementDecrementExpression"


    // $ANTLR start "entryRulePostIncrementDecrementExpression"
    // InternalUppaalXML.g:7369:1: entryRulePostIncrementDecrementExpression returns [EObject current=null] : iv_rulePostIncrementDecrementExpression= rulePostIncrementDecrementExpression EOF ;
    public final EObject entryRulePostIncrementDecrementExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostIncrementDecrementExpression = null;


        try {
            // InternalUppaalXML.g:7369:73: (iv_rulePostIncrementDecrementExpression= rulePostIncrementDecrementExpression EOF )
            // InternalUppaalXML.g:7370:2: iv_rulePostIncrementDecrementExpression= rulePostIncrementDecrementExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostIncrementDecrementExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePostIncrementDecrementExpression=rulePostIncrementDecrementExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostIncrementDecrementExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostIncrementDecrementExpression"


    // $ANTLR start "rulePostIncrementDecrementExpression"
    // InternalUppaalXML.g:7376:1: rulePostIncrementDecrementExpression returns [EObject current=null] : (this_ScopedIdentifierExpression_0= ruleScopedIdentifierExpression ( ( ( () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) ) ) )=> ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ) )* ) ;
    public final EObject rulePostIncrementDecrementExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ScopedIdentifierExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        Enumerator lv_operator_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7382:2: ( (this_ScopedIdentifierExpression_0= ruleScopedIdentifierExpression ( ( ( () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) ) ) )=> ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ) )* ) )
            // InternalUppaalXML.g:7383:2: (this_ScopedIdentifierExpression_0= ruleScopedIdentifierExpression ( ( ( () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) ) ) )=> ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ) )* )
            {
            // InternalUppaalXML.g:7383:2: (this_ScopedIdentifierExpression_0= ruleScopedIdentifierExpression ( ( ( () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) ) ) )=> ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ) )* )
            // InternalUppaalXML.g:7384:3: this_ScopedIdentifierExpression_0= ruleScopedIdentifierExpression ( ( ( () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) ) ) )=> ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPostIncrementDecrementExpressionAccess().getScopedIdentifierExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_102);
            this_ScopedIdentifierExpression_0=ruleScopedIdentifierExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ScopedIdentifierExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:7392:3: ( ( ( () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) ) ) )=> ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ) )*
            loop96:
            do {
                int alt96=2;
                alt96 = dfa96.predict(input);
                switch (alt96) {
            	case 1 :
            	    // InternalUppaalXML.g:7393:4: ( ( () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) ) ) )=> ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) )
            	    {
            	    // InternalUppaalXML.g:7411:4: ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) )
            	    // InternalUppaalXML.g:7412:5: () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) )
            	    {
            	    // InternalUppaalXML.g:7412:5: ()
            	    // InternalUppaalXML.g:7413:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getPostIncrementDecrementExpressionAccess().getIncrementDecrementExpressionExpressionAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalUppaalXML.g:7419:5: ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) )
            	    int alt95=2;
            	    int LA95_0 = input.LA(1);

            	    if ( (LA95_0==109) ) {
            	        alt95=1;
            	    }
            	    else if ( (LA95_0==78) ) {
            	        alt95=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 95, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt95) {
            	        case 1 :
            	            // InternalUppaalXML.g:7420:6: ( (lv_operator_2_0= ruleIncrementOperator ) )
            	            {
            	            // InternalUppaalXML.g:7420:6: ( (lv_operator_2_0= ruleIncrementOperator ) )
            	            // InternalUppaalXML.g:7421:7: (lv_operator_2_0= ruleIncrementOperator )
            	            {
            	            // InternalUppaalXML.g:7421:7: (lv_operator_2_0= ruleIncrementOperator )
            	            // InternalUppaalXML.g:7422:8: lv_operator_2_0= ruleIncrementOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorIncrementOperatorEnumRuleCall_1_0_1_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_102);
            	            lv_operator_2_0=ruleIncrementOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPostIncrementDecrementExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_2_0,
            	              									"org.muml.uppaal.UppaalXML.IncrementOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalUppaalXML.g:7440:6: ( (lv_operator_3_0= ruleDecrementOperator ) )
            	            {
            	            // InternalUppaalXML.g:7440:6: ( (lv_operator_3_0= ruleDecrementOperator ) )
            	            // InternalUppaalXML.g:7441:7: (lv_operator_3_0= ruleDecrementOperator )
            	            {
            	            // InternalUppaalXML.g:7441:7: (lv_operator_3_0= ruleDecrementOperator )
            	            // InternalUppaalXML.g:7442:8: lv_operator_3_0= ruleDecrementOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPostIncrementDecrementExpressionAccess().getOperatorDecrementOperatorEnumRuleCall_1_0_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_102);
            	            lv_operator_3_0=ruleDecrementOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPostIncrementDecrementExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_3_0,
            	              									"org.muml.uppaal.UppaalXML.DecrementOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostIncrementDecrementExpression"


    // $ANTLR start "entryRuleScopedIdentifierExpression"
    // InternalUppaalXML.g:7466:1: entryRuleScopedIdentifierExpression returns [EObject current=null] : iv_ruleScopedIdentifierExpression= ruleScopedIdentifierExpression EOF ;
    public final EObject entryRuleScopedIdentifierExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopedIdentifierExpression = null;


        try {
            // InternalUppaalXML.g:7466:67: (iv_ruleScopedIdentifierExpression= ruleScopedIdentifierExpression EOF )
            // InternalUppaalXML.g:7467:2: iv_ruleScopedIdentifierExpression= ruleScopedIdentifierExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopedIdentifierExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScopedIdentifierExpression=ruleScopedIdentifierExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopedIdentifierExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopedIdentifierExpression"


    // $ANTLR start "ruleScopedIdentifierExpression"
    // InternalUppaalXML.g:7473:1: ruleScopedIdentifierExpression returns [EObject current=null] : (this_TerminatingExpressions_0= ruleTerminatingExpressions ( () otherlv_2= '.' ( (lv_identifier_3_0= ruleIdentifierExpression ) ) )* ) ;
    public final EObject ruleScopedIdentifierExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_TerminatingExpressions_0 = null;

        EObject lv_identifier_3_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7479:2: ( (this_TerminatingExpressions_0= ruleTerminatingExpressions ( () otherlv_2= '.' ( (lv_identifier_3_0= ruleIdentifierExpression ) ) )* ) )
            // InternalUppaalXML.g:7480:2: (this_TerminatingExpressions_0= ruleTerminatingExpressions ( () otherlv_2= '.' ( (lv_identifier_3_0= ruleIdentifierExpression ) ) )* )
            {
            // InternalUppaalXML.g:7480:2: (this_TerminatingExpressions_0= ruleTerminatingExpressions ( () otherlv_2= '.' ( (lv_identifier_3_0= ruleIdentifierExpression ) ) )* )
            // InternalUppaalXML.g:7481:3: this_TerminatingExpressions_0= ruleTerminatingExpressions ( () otherlv_2= '.' ( (lv_identifier_3_0= ruleIdentifierExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getScopedIdentifierExpressionAccess().getTerminatingExpressionsParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_103);
            this_TerminatingExpressions_0=ruleTerminatingExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TerminatingExpressions_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalUppaalXML.g:7489:3: ( () otherlv_2= '.' ( (lv_identifier_3_0= ruleIdentifierExpression ) ) )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==75) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalUppaalXML.g:7490:4: () otherlv_2= '.' ( (lv_identifier_3_0= ruleIdentifierExpression ) )
            	    {
            	    // InternalUppaalXML.g:7490:4: ()
            	    // InternalUppaalXML.g:7491:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getScopedIdentifierExpressionAccess().getScopedIdentifierExpressionScopeAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    otherlv_2=(Token)match(input,75,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getScopedIdentifierExpressionAccess().getFullStopKeyword_1_1());
            	      			
            	    }
            	    // InternalUppaalXML.g:7501:4: ( (lv_identifier_3_0= ruleIdentifierExpression ) )
            	    // InternalUppaalXML.g:7502:5: (lv_identifier_3_0= ruleIdentifierExpression )
            	    {
            	    // InternalUppaalXML.g:7502:5: (lv_identifier_3_0= ruleIdentifierExpression )
            	    // InternalUppaalXML.g:7503:6: lv_identifier_3_0= ruleIdentifierExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScopedIdentifierExpressionAccess().getIdentifierIdentifierExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_103);
            	    lv_identifier_3_0=ruleIdentifierExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScopedIdentifierExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"identifier",
            	      							lv_identifier_3_0,
            	      							"org.muml.uppaal.UppaalXML.IdentifierExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopedIdentifierExpression"


    // $ANTLR start "entryRuleTerminatingExpressions"
    // InternalUppaalXML.g:7525:1: entryRuleTerminatingExpressions returns [EObject current=null] : iv_ruleTerminatingExpressions= ruleTerminatingExpressions EOF ;
    public final EObject entryRuleTerminatingExpressions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerminatingExpressions = null;


        try {
            // InternalUppaalXML.g:7525:63: (iv_ruleTerminatingExpressions= ruleTerminatingExpressions EOF )
            // InternalUppaalXML.g:7526:2: iv_ruleTerminatingExpressions= ruleTerminatingExpressions EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTerminatingExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerminatingExpressions=ruleTerminatingExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerminatingExpressions; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerminatingExpressions"


    // $ANTLR start "ruleTerminatingExpressions"
    // InternalUppaalXML.g:7532:1: ruleTerminatingExpressions returns [EObject current=null] : (this_IdentifierExpression_0= ruleIdentifierExpression | this_FunctionCallExpression_1= ruleFunctionCallExpression | this_LiteralExpression_2= ruleLiteralExpression | (otherlv_3= '(' this_Expression_4= ruleExpression otherlv_5= ')' ) ) ;
    public final EObject ruleTerminatingExpressions() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_IdentifierExpression_0 = null;

        EObject this_FunctionCallExpression_1 = null;

        EObject this_LiteralExpression_2 = null;

        EObject this_Expression_4 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7538:2: ( (this_IdentifierExpression_0= ruleIdentifierExpression | this_FunctionCallExpression_1= ruleFunctionCallExpression | this_LiteralExpression_2= ruleLiteralExpression | (otherlv_3= '(' this_Expression_4= ruleExpression otherlv_5= ')' ) ) )
            // InternalUppaalXML.g:7539:2: (this_IdentifierExpression_0= ruleIdentifierExpression | this_FunctionCallExpression_1= ruleFunctionCallExpression | this_LiteralExpression_2= ruleLiteralExpression | (otherlv_3= '(' this_Expression_4= ruleExpression otherlv_5= ')' ) )
            {
            // InternalUppaalXML.g:7539:2: (this_IdentifierExpression_0= ruleIdentifierExpression | this_FunctionCallExpression_1= ruleFunctionCallExpression | this_LiteralExpression_2= ruleLiteralExpression | (otherlv_3= '(' this_Expression_4= ruleExpression otherlv_5= ')' ) )
            int alt98=4;
            alt98 = dfa98.predict(input);
            switch (alt98) {
                case 1 :
                    // InternalUppaalXML.g:7540:3: this_IdentifierExpression_0= ruleIdentifierExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTerminatingExpressionsAccess().getIdentifierExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IdentifierExpression_0=ruleIdentifierExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IdentifierExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:7549:3: this_FunctionCallExpression_1= ruleFunctionCallExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTerminatingExpressionsAccess().getFunctionCallExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionCallExpression_1=ruleFunctionCallExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCallExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:7558:3: this_LiteralExpression_2= ruleLiteralExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTerminatingExpressionsAccess().getLiteralExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralExpression_2=ruleLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:7567:3: (otherlv_3= '(' this_Expression_4= ruleExpression otherlv_5= ')' )
                    {
                    // InternalUppaalXML.g:7567:3: (otherlv_3= '(' this_Expression_4= ruleExpression otherlv_5= ')' )
                    // InternalUppaalXML.g:7568:4: otherlv_3= '(' this_Expression_4= ruleExpression otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,52,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTerminatingExpressionsAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getTerminatingExpressionsAccess().getExpressionParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_82);
                    this_Expression_4=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Expression_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_5=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTerminatingExpressionsAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerminatingExpressions"


    // $ANTLR start "entryRuleLiteralExpression"
    // InternalUppaalXML.g:7589:1: entryRuleLiteralExpression returns [EObject current=null] : iv_ruleLiteralExpression= ruleLiteralExpression EOF ;
    public final EObject entryRuleLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralExpression = null;


        try {
            // InternalUppaalXML.g:7589:58: (iv_ruleLiteralExpression= ruleLiteralExpression EOF )
            // InternalUppaalXML.g:7590:2: iv_ruleLiteralExpression= ruleLiteralExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralExpression=ruleLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralExpression"


    // $ANTLR start "ruleLiteralExpression"
    // InternalUppaalXML.g:7596:1: ruleLiteralExpression returns [EObject current=null] : ( (lv_text_0_0= ruleLiteralExpressionText ) ) ;
    public final EObject ruleLiteralExpression() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_text_0_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7602:2: ( ( (lv_text_0_0= ruleLiteralExpressionText ) ) )
            // InternalUppaalXML.g:7603:2: ( (lv_text_0_0= ruleLiteralExpressionText ) )
            {
            // InternalUppaalXML.g:7603:2: ( (lv_text_0_0= ruleLiteralExpressionText ) )
            // InternalUppaalXML.g:7604:3: (lv_text_0_0= ruleLiteralExpressionText )
            {
            // InternalUppaalXML.g:7604:3: (lv_text_0_0= ruleLiteralExpressionText )
            // InternalUppaalXML.g:7605:4: lv_text_0_0= ruleLiteralExpressionText
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getLiteralExpressionAccess().getTextLiteralExpressionTextParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_text_0_0=ruleLiteralExpressionText();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getLiteralExpressionRule());
              				}
              				set(
              					current,
              					"text",
              					lv_text_0_0,
              					"org.muml.uppaal.UppaalXML.LiteralExpressionText");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralExpression"


    // $ANTLR start "entryRuleLiteralExpressionText"
    // InternalUppaalXML.g:7625:1: entryRuleLiteralExpressionText returns [String current=null] : iv_ruleLiteralExpressionText= ruleLiteralExpressionText EOF ;
    public final String entryRuleLiteralExpressionText() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLiteralExpressionText = null;


        try {
            // InternalUppaalXML.g:7625:61: (iv_ruleLiteralExpressionText= ruleLiteralExpressionText EOF )
            // InternalUppaalXML.g:7626:2: iv_ruleLiteralExpressionText= ruleLiteralExpressionText EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralExpressionTextRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralExpressionText=ruleLiteralExpressionText();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralExpressionText.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralExpressionText"


    // $ANTLR start "ruleLiteralExpressionText"
    // InternalUppaalXML.g:7632:1: ruleLiteralExpressionText returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'true' | kw= 'false' | ( (kw= '-' )? this_INT_3= RULE_INT ) ) ;
    public final AntlrDatatypeRuleToken ruleLiteralExpressionText() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_3=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:7638:2: ( (kw= 'true' | kw= 'false' | ( (kw= '-' )? this_INT_3= RULE_INT ) ) )
            // InternalUppaalXML.g:7639:2: (kw= 'true' | kw= 'false' | ( (kw= '-' )? this_INT_3= RULE_INT ) )
            {
            // InternalUppaalXML.g:7639:2: (kw= 'true' | kw= 'false' | ( (kw= '-' )? this_INT_3= RULE_INT ) )
            int alt100=3;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt100=1;
                }
                break;
            case 77:
                {
                alt100=2;
                }
                break;
            case RULE_INT:
            case 78:
                {
                alt100=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }

            switch (alt100) {
                case 1 :
                    // InternalUppaalXML.g:7640:3: kw= 'true'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getLiteralExpressionTextAccess().getTrueKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:7646:3: kw= 'false'
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getLiteralExpressionTextAccess().getFalseKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:7652:3: ( (kw= '-' )? this_INT_3= RULE_INT )
                    {
                    // InternalUppaalXML.g:7652:3: ( (kw= '-' )? this_INT_3= RULE_INT )
                    // InternalUppaalXML.g:7653:4: (kw= '-' )? this_INT_3= RULE_INT
                    {
                    // InternalUppaalXML.g:7653:4: (kw= '-' )?
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( (LA99_0==78) ) {
                        alt99=1;
                    }
                    switch (alt99) {
                        case 1 :
                            // InternalUppaalXML.g:7654:5: kw= '-'
                            {
                            kw=(Token)match(input,78,FOLLOW_104); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getLiteralExpressionTextAccess().getHyphenMinusKeyword_2_0());
                              				
                            }

                            }
                            break;

                    }

                    this_INT_3=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_3, grammarAccess.getLiteralExpressionTextAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralExpressionText"


    // $ANTLR start "entryRuleFunctionCallExpression"
    // InternalUppaalXML.g:7672:1: entryRuleFunctionCallExpression returns [EObject current=null] : iv_ruleFunctionCallExpression= ruleFunctionCallExpression EOF ;
    public final EObject entryRuleFunctionCallExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallExpression = null;


        try {
            // InternalUppaalXML.g:7672:63: (iv_ruleFunctionCallExpression= ruleFunctionCallExpression EOF )
            // InternalUppaalXML.g:7673:2: iv_ruleFunctionCallExpression= ruleFunctionCallExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionCallExpression=ruleFunctionCallExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallExpression"


    // $ANTLR start "ruleFunctionCallExpression"
    // InternalUppaalXML.g:7679:1: ruleFunctionCallExpression returns [EObject current=null] : ( ( ( ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '(' ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleFunctionCallExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_argument_2_0 = null;

        EObject lv_argument_4_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7685:2: ( ( ( ( ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '(' ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )? otherlv_5= ')' ) )
            // InternalUppaalXML.g:7686:2: ( ( ( ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '(' ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )? otherlv_5= ')' )
            {
            // InternalUppaalXML.g:7686:2: ( ( ( ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '(' ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )? otherlv_5= ')' )
            // InternalUppaalXML.g:7687:3: ( ( ruleUPPAAL_IDENTIFIER ) ) otherlv_1= '(' ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )? otherlv_5= ')'
            {
            // InternalUppaalXML.g:7687:3: ( ( ruleUPPAAL_IDENTIFIER ) )
            // InternalUppaalXML.g:7688:4: ( ruleUPPAAL_IDENTIFIER )
            {
            // InternalUppaalXML.g:7688:4: ( ruleUPPAAL_IDENTIFIER )
            // InternalUppaalXML.g:7689:5: ruleUPPAAL_IDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionCallExpressionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionCallExpressionAccess().getFunctionFunctionCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_60);
            ruleUPPAAL_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,52,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionCallExpressionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalUppaalXML.g:7707:3: ( ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )* )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( ((LA102_0>=RULE_ID && LA102_0<=RULE_INT)||LA102_0==15||LA102_0==17||(LA102_0>=19 && LA102_0<=21)||(LA102_0>=23 && LA102_0<=24)||(LA102_0>=26 && LA102_0<=27)||LA102_0==30||(LA102_0>=32 && LA102_0<=36)||(LA102_0>=39 && LA102_0<=41)||LA102_0==46||LA102_0==52||LA102_0==57||LA102_0==60||LA102_0==72||LA102_0==74||(LA102_0>=76 && LA102_0<=81)||(LA102_0>=94 && LA102_0<=95)||LA102_0==109||LA102_0==135) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalUppaalXML.g:7708:4: ( (lv_argument_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )*
                    {
                    // InternalUppaalXML.g:7708:4: ( (lv_argument_2_0= ruleExpression ) )
                    // InternalUppaalXML.g:7709:5: (lv_argument_2_0= ruleExpression )
                    {
                    // InternalUppaalXML.g:7709:5: (lv_argument_2_0= ruleExpression )
                    // InternalUppaalXML.g:7710:6: lv_argument_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionCallExpressionAccess().getArgumentExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_argument_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionCallExpressionRule());
                      						}
                      						add(
                      							current,
                      							"argument",
                      							lv_argument_2_0,
                      							"org.muml.uppaal.UppaalXML.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalUppaalXML.g:7727:4: (otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) ) )*
                    loop101:
                    do {
                        int alt101=2;
                        int LA101_0 = input.LA(1);

                        if ( (LA101_0==28) ) {
                            alt101=1;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // InternalUppaalXML.g:7728:5: otherlv_3= ',' ( (lv_argument_4_0= ruleExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,28,FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getFunctionCallExpressionAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalUppaalXML.g:7732:5: ( (lv_argument_4_0= ruleExpression ) )
                    	    // InternalUppaalXML.g:7733:6: (lv_argument_4_0= ruleExpression )
                    	    {
                    	    // InternalUppaalXML.g:7733:6: (lv_argument_4_0= ruleExpression )
                    	    // InternalUppaalXML.g:7734:7: lv_argument_4_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionCallExpressionAccess().getArgumentExpressionParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_argument_4_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionCallExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"argument",
                    	      								lv_argument_4_0,
                    	      								"org.muml.uppaal.UppaalXML.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop101;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getFunctionCallExpressionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallExpression"


    // $ANTLR start "entryRuleIdentifierExpression"
    // InternalUppaalXML.g:7761:1: entryRuleIdentifierExpression returns [EObject current=null] : iv_ruleIdentifierExpression= ruleIdentifierExpression EOF ;
    public final EObject entryRuleIdentifierExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentifierExpression = null;


        try {
            // InternalUppaalXML.g:7761:61: (iv_ruleIdentifierExpression= ruleIdentifierExpression EOF )
            // InternalUppaalXML.g:7762:2: iv_ruleIdentifierExpression= ruleIdentifierExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierExpression=ruleIdentifierExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifierExpression"


    // $ANTLR start "ruleIdentifierExpression"
    // InternalUppaalXML.g:7768:1: ruleIdentifierExpression returns [EObject current=null] : ( ( ( ruleUPPAAL_TYPE_OR_IDENTIFIER ) ) (otherlv_1= '[' ( (lv_index_2_0= ruleExpression ) ) otherlv_3= ']' )* ) ;
    public final EObject ruleIdentifierExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_index_2_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7774:2: ( ( ( ( ruleUPPAAL_TYPE_OR_IDENTIFIER ) ) (otherlv_1= '[' ( (lv_index_2_0= ruleExpression ) ) otherlv_3= ']' )* ) )
            // InternalUppaalXML.g:7775:2: ( ( ( ruleUPPAAL_TYPE_OR_IDENTIFIER ) ) (otherlv_1= '[' ( (lv_index_2_0= ruleExpression ) ) otherlv_3= ']' )* )
            {
            // InternalUppaalXML.g:7775:2: ( ( ( ruleUPPAAL_TYPE_OR_IDENTIFIER ) ) (otherlv_1= '[' ( (lv_index_2_0= ruleExpression ) ) otherlv_3= ']' )* )
            // InternalUppaalXML.g:7776:3: ( ( ruleUPPAAL_TYPE_OR_IDENTIFIER ) ) (otherlv_1= '[' ( (lv_index_2_0= ruleExpression ) ) otherlv_3= ']' )*
            {
            // InternalUppaalXML.g:7776:3: ( ( ruleUPPAAL_TYPE_OR_IDENTIFIER ) )
            // InternalUppaalXML.g:7777:4: ( ruleUPPAAL_TYPE_OR_IDENTIFIER )
            {
            // InternalUppaalXML.g:7777:4: ( ruleUPPAAL_TYPE_OR_IDENTIFIER )
            // InternalUppaalXML.g:7778:5: ruleUPPAAL_TYPE_OR_IDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getIdentifierExpressionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIdentifierExpressionAccess().getIdentifierNamedElementCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_105);
            ruleUPPAAL_TYPE_OR_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalUppaalXML.g:7792:3: (otherlv_1= '[' ( (lv_index_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==55) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalUppaalXML.g:7793:4: otherlv_1= '[' ( (lv_index_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,55,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getIdentifierExpressionAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalUppaalXML.g:7797:4: ( (lv_index_2_0= ruleExpression ) )
            	    // InternalUppaalXML.g:7798:5: (lv_index_2_0= ruleExpression )
            	    {
            	    // InternalUppaalXML.g:7798:5: (lv_index_2_0= ruleExpression )
            	    // InternalUppaalXML.g:7799:6: lv_index_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getIdentifierExpressionAccess().getIndexExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_index_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getIdentifierExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"index",
            	      							lv_index_2_0,
            	      							"org.muml.uppaal.UppaalXML.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,56,FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getIdentifierExpressionAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifierExpression"


    // $ANTLR start "entryRuleSimpleIdentifierExpression"
    // InternalUppaalXML.g:7825:1: entryRuleSimpleIdentifierExpression returns [EObject current=null] : iv_ruleSimpleIdentifierExpression= ruleSimpleIdentifierExpression EOF ;
    public final EObject entryRuleSimpleIdentifierExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleIdentifierExpression = null;


        try {
            // InternalUppaalXML.g:7825:67: (iv_ruleSimpleIdentifierExpression= ruleSimpleIdentifierExpression EOF )
            // InternalUppaalXML.g:7826:2: iv_ruleSimpleIdentifierExpression= ruleSimpleIdentifierExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleIdentifierExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleIdentifierExpression=ruleSimpleIdentifierExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleIdentifierExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleIdentifierExpression"


    // $ANTLR start "ruleSimpleIdentifierExpression"
    // InternalUppaalXML.g:7832:1: ruleSimpleIdentifierExpression returns [EObject current=null] : ( ( ruleUPPAAL_TYPE_OR_IDENTIFIER ) ) ;
    public final EObject ruleSimpleIdentifierExpression() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalUppaalXML.g:7838:2: ( ( ( ruleUPPAAL_TYPE_OR_IDENTIFIER ) ) )
            // InternalUppaalXML.g:7839:2: ( ( ruleUPPAAL_TYPE_OR_IDENTIFIER ) )
            {
            // InternalUppaalXML.g:7839:2: ( ( ruleUPPAAL_TYPE_OR_IDENTIFIER ) )
            // InternalUppaalXML.g:7840:3: ( ruleUPPAAL_TYPE_OR_IDENTIFIER )
            {
            // InternalUppaalXML.g:7840:3: ( ruleUPPAAL_TYPE_OR_IDENTIFIER )
            // InternalUppaalXML.g:7841:4: ruleUPPAAL_TYPE_OR_IDENTIFIER
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimpleIdentifierExpressionRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSimpleIdentifierExpressionAccess().getIdentifierNamedElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleUPPAAL_TYPE_OR_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleIdentifierExpression"


    // $ANTLR start "entryRuleUPPAAL_TYPE_OR_IDENTIFIER"
    // InternalUppaalXML.g:7858:1: entryRuleUPPAAL_TYPE_OR_IDENTIFIER returns [String current=null] : iv_ruleUPPAAL_TYPE_OR_IDENTIFIER= ruleUPPAAL_TYPE_OR_IDENTIFIER EOF ;
    public final String entryRuleUPPAAL_TYPE_OR_IDENTIFIER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUPPAAL_TYPE_OR_IDENTIFIER = null;


        try {
            // InternalUppaalXML.g:7858:65: (iv_ruleUPPAAL_TYPE_OR_IDENTIFIER= ruleUPPAAL_TYPE_OR_IDENTIFIER EOF )
            // InternalUppaalXML.g:7859:2: iv_ruleUPPAAL_TYPE_OR_IDENTIFIER= ruleUPPAAL_TYPE_OR_IDENTIFIER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUPPAAL_TYPE_OR_IDENTIFIER=ruleUPPAAL_TYPE_OR_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUPPAAL_TYPE_OR_IDENTIFIER.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUPPAAL_TYPE_OR_IDENTIFIER"


    // $ANTLR start "ruleUPPAAL_TYPE_OR_IDENTIFIER"
    // InternalUppaalXML.g:7865:1: ruleUPPAAL_TYPE_OR_IDENTIFIER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_UPPAAL_IDENTIFIER_0= ruleUPPAAL_IDENTIFIER | kw= 'int' | kw= 'bool' | kw= 'void' | kw= 'chan' | kw= 'clock' ) ;
    public final AntlrDatatypeRuleToken ruleUPPAAL_TYPE_OR_IDENTIFIER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_UPPAAL_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7871:2: ( (this_UPPAAL_IDENTIFIER_0= ruleUPPAAL_IDENTIFIER | kw= 'int' | kw= 'bool' | kw= 'void' | kw= 'chan' | kw= 'clock' ) )
            // InternalUppaalXML.g:7872:2: (this_UPPAAL_IDENTIFIER_0= ruleUPPAAL_IDENTIFIER | kw= 'int' | kw= 'bool' | kw= 'void' | kw= 'chan' | kw= 'clock' )
            {
            // InternalUppaalXML.g:7872:2: (this_UPPAAL_IDENTIFIER_0= ruleUPPAAL_IDENTIFIER | kw= 'int' | kw= 'bool' | kw= 'void' | kw= 'chan' | kw= 'clock' )
            int alt104=6;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case 15:
            case 17:
            case 19:
            case 20:
            case 21:
            case 23:
            case 24:
            case 26:
            case 27:
            case 30:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 39:
            case 40:
            case 41:
            case 46:
            case 135:
                {
                alt104=1;
                }
                break;
            case 60:
                {
                alt104=2;
                }
                break;
            case 79:
                {
                alt104=3;
                }
                break;
            case 80:
                {
                alt104=4;
                }
                break;
            case 57:
                {
                alt104=5;
                }
                break;
            case 81:
                {
                alt104=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }

            switch (alt104) {
                case 1 :
                    // InternalUppaalXML.g:7873:3: this_UPPAAL_IDENTIFIER_0= ruleUPPAAL_IDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getUPPAAL_IDENTIFIERParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UPPAAL_IDENTIFIER_0=ruleUPPAAL_IDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_UPPAAL_IDENTIFIER_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:7884:3: kw= 'int'
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getIntKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:7890:3: kw= 'bool'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getBoolKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:7896:3: kw= 'void'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getVoidKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalUppaalXML.g:7902:3: kw= 'chan'
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getChanKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalUppaalXML.g:7908:3: kw= 'clock'
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_TYPE_OR_IDENTIFIERAccess().getClockKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUPPAAL_TYPE_OR_IDENTIFIER"


    // $ANTLR start "entryRuleUPPAAL_IDENTIFIER"
    // InternalUppaalXML.g:7917:1: entryRuleUPPAAL_IDENTIFIER returns [String current=null] : iv_ruleUPPAAL_IDENTIFIER= ruleUPPAAL_IDENTIFIER EOF ;
    public final String entryRuleUPPAAL_IDENTIFIER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUPPAAL_IDENTIFIER = null;


        try {
            // InternalUppaalXML.g:7917:57: (iv_ruleUPPAAL_IDENTIFIER= ruleUPPAAL_IDENTIFIER EOF )
            // InternalUppaalXML.g:7918:2: iv_ruleUPPAAL_IDENTIFIER= ruleUPPAAL_IDENTIFIER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUPPAAL_IDENTIFIERRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUPPAAL_IDENTIFIER=ruleUPPAAL_IDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUPPAAL_IDENTIFIER.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUPPAAL_IDENTIFIER"


    // $ANTLR start "ruleUPPAAL_IDENTIFIER"
    // InternalUppaalXML.g:7924:1: ruleUPPAAL_IDENTIFIER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | this_XML_KEYWORDS_1= ruleXML_KEYWORDS ) ;
    public final AntlrDatatypeRuleToken ruleUPPAAL_IDENTIFIER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        AntlrDatatypeRuleToken this_XML_KEYWORDS_1 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:7930:2: ( (this_ID_0= RULE_ID | this_XML_KEYWORDS_1= ruleXML_KEYWORDS ) )
            // InternalUppaalXML.g:7931:2: (this_ID_0= RULE_ID | this_XML_KEYWORDS_1= ruleXML_KEYWORDS )
            {
            // InternalUppaalXML.g:7931:2: (this_ID_0= RULE_ID | this_XML_KEYWORDS_1= ruleXML_KEYWORDS )
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==RULE_ID) ) {
                alt105=1;
            }
            else if ( (LA105_0==15||LA105_0==17||(LA105_0>=19 && LA105_0<=21)||(LA105_0>=23 && LA105_0<=24)||(LA105_0>=26 && LA105_0<=27)||LA105_0==30||(LA105_0>=32 && LA105_0<=36)||(LA105_0>=39 && LA105_0<=41)||LA105_0==46||LA105_0==135) ) {
                alt105=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // InternalUppaalXML.g:7932:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getUPPAAL_IDENTIFIERAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:7940:3: this_XML_KEYWORDS_1= ruleXML_KEYWORDS
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUPPAAL_IDENTIFIERAccess().getXML_KEYWORDSParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XML_KEYWORDS_1=ruleXML_KEYWORDS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_XML_KEYWORDS_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUPPAAL_IDENTIFIER"


    // $ANTLR start "entryRuleUPPAAL_KEYWORDS"
    // InternalUppaalXML.g:7954:1: entryRuleUPPAAL_KEYWORDS returns [String current=null] : iv_ruleUPPAAL_KEYWORDS= ruleUPPAAL_KEYWORDS EOF ;
    public final String entryRuleUPPAAL_KEYWORDS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUPPAAL_KEYWORDS = null;


        try {
            // InternalUppaalXML.g:7954:55: (iv_ruleUPPAAL_KEYWORDS= ruleUPPAAL_KEYWORDS EOF )
            // InternalUppaalXML.g:7955:2: iv_ruleUPPAAL_KEYWORDS= ruleUPPAAL_KEYWORDS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUPPAAL_KEYWORDSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUPPAAL_KEYWORDS=ruleUPPAAL_KEYWORDS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUPPAAL_KEYWORDS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUPPAAL_KEYWORDS"


    // $ANTLR start "ruleUPPAAL_KEYWORDS"
    // InternalUppaalXML.g:7961:1: ruleUPPAAL_KEYWORDS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'chan' | kw= 'clock' | kw= 'bool' | kw= 'int' | kw= 'commit' | kw= 'const' | kw= 'urgent' | kw= 'broadcast' | kw= 'init' | kw= 'process' | kw= 'state' | kw= 'guard' | kw= 'sync' | kw= 'assign' | kw= 'system' | kw= 'trans' | kw= 'deadlock' | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'imply' | kw= 'true' | kw= 'false' | kw= 'for' | kw= 'forall' | kw= 'exists' | kw= 'while' | kw= 'do' | kw= 'if' | kw= 'else' | kw= 'return' | kw= 'typedef' | kw= 'struct' | kw= 'rate' | kw= 'before_update' | kw= 'after_update' | kw= 'meta' | kw= 'priority' | kw= 'progress' | kw= 'scalar' | kw= 'select' | kw= 'void' | kw= 'switch' | kw= 'case' | kw= 'continue' | kw= 'break' | kw= 'default' ) ;
    public final AntlrDatatypeRuleToken ruleUPPAAL_KEYWORDS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:7967:2: ( (kw= 'chan' | kw= 'clock' | kw= 'bool' | kw= 'int' | kw= 'commit' | kw= 'const' | kw= 'urgent' | kw= 'broadcast' | kw= 'init' | kw= 'process' | kw= 'state' | kw= 'guard' | kw= 'sync' | kw= 'assign' | kw= 'system' | kw= 'trans' | kw= 'deadlock' | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'imply' | kw= 'true' | kw= 'false' | kw= 'for' | kw= 'forall' | kw= 'exists' | kw= 'while' | kw= 'do' | kw= 'if' | kw= 'else' | kw= 'return' | kw= 'typedef' | kw= 'struct' | kw= 'rate' | kw= 'before_update' | kw= 'after_update' | kw= 'meta' | kw= 'priority' | kw= 'progress' | kw= 'scalar' | kw= 'select' | kw= 'void' | kw= 'switch' | kw= 'case' | kw= 'continue' | kw= 'break' | kw= 'default' ) )
            // InternalUppaalXML.g:7968:2: (kw= 'chan' | kw= 'clock' | kw= 'bool' | kw= 'int' | kw= 'commit' | kw= 'const' | kw= 'urgent' | kw= 'broadcast' | kw= 'init' | kw= 'process' | kw= 'state' | kw= 'guard' | kw= 'sync' | kw= 'assign' | kw= 'system' | kw= 'trans' | kw= 'deadlock' | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'imply' | kw= 'true' | kw= 'false' | kw= 'for' | kw= 'forall' | kw= 'exists' | kw= 'while' | kw= 'do' | kw= 'if' | kw= 'else' | kw= 'return' | kw= 'typedef' | kw= 'struct' | kw= 'rate' | kw= 'before_update' | kw= 'after_update' | kw= 'meta' | kw= 'priority' | kw= 'progress' | kw= 'scalar' | kw= 'select' | kw= 'void' | kw= 'switch' | kw= 'case' | kw= 'continue' | kw= 'break' | kw= 'default' )
            {
            // InternalUppaalXML.g:7968:2: (kw= 'chan' | kw= 'clock' | kw= 'bool' | kw= 'int' | kw= 'commit' | kw= 'const' | kw= 'urgent' | kw= 'broadcast' | kw= 'init' | kw= 'process' | kw= 'state' | kw= 'guard' | kw= 'sync' | kw= 'assign' | kw= 'system' | kw= 'trans' | kw= 'deadlock' | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'imply' | kw= 'true' | kw= 'false' | kw= 'for' | kw= 'forall' | kw= 'exists' | kw= 'while' | kw= 'do' | kw= 'if' | kw= 'else' | kw= 'return' | kw= 'typedef' | kw= 'struct' | kw= 'rate' | kw= 'before_update' | kw= 'after_update' | kw= 'meta' | kw= 'priority' | kw= 'progress' | kw= 'scalar' | kw= 'select' | kw= 'void' | kw= 'switch' | kw= 'case' | kw= 'continue' | kw= 'break' | kw= 'default' )
            int alt106=47;
            switch ( input.LA(1) ) {
            case 57:
                {
                alt106=1;
                }
                break;
            case 81:
                {
                alt106=2;
                }
                break;
            case 79:
                {
                alt106=3;
                }
                break;
            case 60:
                {
                alt106=4;
                }
                break;
            case 82:
                {
                alt106=5;
                }
                break;
            case 83:
                {
                alt106=6;
                }
                break;
            case 58:
                {
                alt106=7;
                }
                break;
            case 59:
                {
                alt106=8;
                }
                break;
            case 29:
                {
                alt106=9;
                }
                break;
            case 84:
                {
                alt106=10;
                }
                break;
            case 85:
                {
                alt106=11;
                }
                break;
            case 86:
                {
                alt106=12;
                }
                break;
            case 87:
                {
                alt106=13;
                }
                break;
            case 88:
                {
                alt106=14;
                }
                break;
            case 22:
                {
                alt106=15;
                }
                break;
            case 89:
                {
                alt106=16;
                }
                break;
            case 90:
                {
                alt106=17;
                }
                break;
            case 91:
                {
                alt106=18;
                }
                break;
            case 92:
                {
                alt106=19;
                }
                break;
            case 72:
                {
                alt106=20;
                }
                break;
            case 93:
                {
                alt106=21;
                }
                break;
            case 76:
                {
                alt106=22;
                }
                break;
            case 77:
                {
                alt106=23;
                }
                break;
            case 66:
                {
                alt106=24;
                }
                break;
            case 94:
                {
                alt106=25;
                }
                break;
            case 95:
                {
                alt106=26;
                }
                break;
            case 67:
                {
                alt106=27;
                }
                break;
            case 68:
                {
                alt106=28;
                }
                break;
            case 69:
                {
                alt106=29;
                }
                break;
            case 70:
                {
                alt106=30;
                }
                break;
            case 71:
                {
                alt106=31;
                }
                break;
            case 63:
                {
                alt106=32;
                }
                break;
            case 61:
                {
                alt106=33;
                }
                break;
            case 96:
                {
                alt106=34;
                }
                break;
            case 97:
                {
                alt106=35;
                }
                break;
            case 98:
                {
                alt106=36;
                }
                break;
            case 99:
                {
                alt106=37;
                }
                break;
            case 64:
                {
                alt106=38;
                }
                break;
            case 48:
                {
                alt106=39;
                }
                break;
            case 62:
                {
                alt106=40;
                }
                break;
            case 100:
                {
                alt106=41;
                }
                break;
            case 80:
                {
                alt106=42;
                }
                break;
            case 101:
                {
                alt106=43;
                }
                break;
            case 102:
                {
                alt106=44;
                }
                break;
            case 103:
                {
                alt106=45;
                }
                break;
            case 104:
                {
                alt106=46;
                }
                break;
            case 65:
                {
                alt106=47;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }

            switch (alt106) {
                case 1 :
                    // InternalUppaalXML.g:7969:3: kw= 'chan'
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getChanKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:7975:3: kw= 'clock'
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getClockKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:7981:3: kw= 'bool'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getBoolKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:7987:3: kw= 'int'
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getIntKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalUppaalXML.g:7993:3: kw= 'commit'
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getCommitKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalUppaalXML.g:7999:3: kw= 'const'
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getConstKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalUppaalXML.g:8005:3: kw= 'urgent'
                    {
                    kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getUrgentKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalUppaalXML.g:8011:3: kw= 'broadcast'
                    {
                    kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getBroadcastKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalUppaalXML.g:8017:3: kw= 'init'
                    {
                    kw=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getInitKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalUppaalXML.g:8023:3: kw= 'process'
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getProcessKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalUppaalXML.g:8029:3: kw= 'state'
                    {
                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getStateKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalUppaalXML.g:8035:3: kw= 'guard'
                    {
                    kw=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getGuardKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalUppaalXML.g:8041:3: kw= 'sync'
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getSyncKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalUppaalXML.g:8047:3: kw= 'assign'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getAssignKeyword_13());
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalUppaalXML.g:8053:3: kw= 'system'
                    {
                    kw=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getSystemKeyword_14());
                      		
                    }

                    }
                    break;
                case 16 :
                    // InternalUppaalXML.g:8059:3: kw= 'trans'
                    {
                    kw=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getTransKeyword_15());
                      		
                    }

                    }
                    break;
                case 17 :
                    // InternalUppaalXML.g:8065:3: kw= 'deadlock'
                    {
                    kw=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getDeadlockKeyword_16());
                      		
                    }

                    }
                    break;
                case 18 :
                    // InternalUppaalXML.g:8071:3: kw= 'and'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getAndKeyword_17());
                      		
                    }

                    }
                    break;
                case 19 :
                    // InternalUppaalXML.g:8077:3: kw= 'or'
                    {
                    kw=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getOrKeyword_18());
                      		
                    }

                    }
                    break;
                case 20 :
                    // InternalUppaalXML.g:8083:3: kw= 'not'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getNotKeyword_19());
                      		
                    }

                    }
                    break;
                case 21 :
                    // InternalUppaalXML.g:8089:3: kw= 'imply'
                    {
                    kw=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getImplyKeyword_20());
                      		
                    }

                    }
                    break;
                case 22 :
                    // InternalUppaalXML.g:8095:3: kw= 'true'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getTrueKeyword_21());
                      		
                    }

                    }
                    break;
                case 23 :
                    // InternalUppaalXML.g:8101:3: kw= 'false'
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getFalseKeyword_22());
                      		
                    }

                    }
                    break;
                case 24 :
                    // InternalUppaalXML.g:8107:3: kw= 'for'
                    {
                    kw=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getForKeyword_23());
                      		
                    }

                    }
                    break;
                case 25 :
                    // InternalUppaalXML.g:8113:3: kw= 'forall'
                    {
                    kw=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getForallKeyword_24());
                      		
                    }

                    }
                    break;
                case 26 :
                    // InternalUppaalXML.g:8119:3: kw= 'exists'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getExistsKeyword_25());
                      		
                    }

                    }
                    break;
                case 27 :
                    // InternalUppaalXML.g:8125:3: kw= 'while'
                    {
                    kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getWhileKeyword_26());
                      		
                    }

                    }
                    break;
                case 28 :
                    // InternalUppaalXML.g:8131:3: kw= 'do'
                    {
                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getDoKeyword_27());
                      		
                    }

                    }
                    break;
                case 29 :
                    // InternalUppaalXML.g:8137:3: kw= 'if'
                    {
                    kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getIfKeyword_28());
                      		
                    }

                    }
                    break;
                case 30 :
                    // InternalUppaalXML.g:8143:3: kw= 'else'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getElseKeyword_29());
                      		
                    }

                    }
                    break;
                case 31 :
                    // InternalUppaalXML.g:8149:3: kw= 'return'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getReturnKeyword_30());
                      		
                    }

                    }
                    break;
                case 32 :
                    // InternalUppaalXML.g:8155:3: kw= 'typedef'
                    {
                    kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getTypedefKeyword_31());
                      		
                    }

                    }
                    break;
                case 33 :
                    // InternalUppaalXML.g:8161:3: kw= 'struct'
                    {
                    kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getStructKeyword_32());
                      		
                    }

                    }
                    break;
                case 34 :
                    // InternalUppaalXML.g:8167:3: kw= 'rate'
                    {
                    kw=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getRateKeyword_33());
                      		
                    }

                    }
                    break;
                case 35 :
                    // InternalUppaalXML.g:8173:3: kw= 'before_update'
                    {
                    kw=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getBefore_updateKeyword_34());
                      		
                    }

                    }
                    break;
                case 36 :
                    // InternalUppaalXML.g:8179:3: kw= 'after_update'
                    {
                    kw=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getAfter_updateKeyword_35());
                      		
                    }

                    }
                    break;
                case 37 :
                    // InternalUppaalXML.g:8185:3: kw= 'meta'
                    {
                    kw=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getMetaKeyword_36());
                      		
                    }

                    }
                    break;
                case 38 :
                    // InternalUppaalXML.g:8191:3: kw= 'priority'
                    {
                    kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getPriorityKeyword_37());
                      		
                    }

                    }
                    break;
                case 39 :
                    // InternalUppaalXML.g:8197:3: kw= 'progress'
                    {
                    kw=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getProgressKeyword_38());
                      		
                    }

                    }
                    break;
                case 40 :
                    // InternalUppaalXML.g:8203:3: kw= 'scalar'
                    {
                    kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getScalarKeyword_39());
                      		
                    }

                    }
                    break;
                case 41 :
                    // InternalUppaalXML.g:8209:3: kw= 'select'
                    {
                    kw=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getSelectKeyword_40());
                      		
                    }

                    }
                    break;
                case 42 :
                    // InternalUppaalXML.g:8215:3: kw= 'void'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getVoidKeyword_41());
                      		
                    }

                    }
                    break;
                case 43 :
                    // InternalUppaalXML.g:8221:3: kw= 'switch'
                    {
                    kw=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getSwitchKeyword_42());
                      		
                    }

                    }
                    break;
                case 44 :
                    // InternalUppaalXML.g:8227:3: kw= 'case'
                    {
                    kw=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getCaseKeyword_43());
                      		
                    }

                    }
                    break;
                case 45 :
                    // InternalUppaalXML.g:8233:3: kw= 'continue'
                    {
                    kw=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getContinueKeyword_44());
                      		
                    }

                    }
                    break;
                case 46 :
                    // InternalUppaalXML.g:8239:3: kw= 'break'
                    {
                    kw=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getBreakKeyword_45());
                      		
                    }

                    }
                    break;
                case 47 :
                    // InternalUppaalXML.g:8245:3: kw= 'default'
                    {
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_KEYWORDSAccess().getDefaultKeyword_46());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUPPAAL_KEYWORDS"


    // $ANTLR start "entryRuleUPPAAL_STRUCTURE_KEYWORDS"
    // InternalUppaalXML.g:8254:1: entryRuleUPPAAL_STRUCTURE_KEYWORDS returns [String current=null] : iv_ruleUPPAAL_STRUCTURE_KEYWORDS= ruleUPPAAL_STRUCTURE_KEYWORDS EOF ;
    public final String entryRuleUPPAAL_STRUCTURE_KEYWORDS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUPPAAL_STRUCTURE_KEYWORDS = null;


        try {
            // InternalUppaalXML.g:8254:65: (iv_ruleUPPAAL_STRUCTURE_KEYWORDS= ruleUPPAAL_STRUCTURE_KEYWORDS EOF )
            // InternalUppaalXML.g:8255:2: iv_ruleUPPAAL_STRUCTURE_KEYWORDS= ruleUPPAAL_STRUCTURE_KEYWORDS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUPPAAL_STRUCTURE_KEYWORDS=ruleUPPAAL_STRUCTURE_KEYWORDS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUPPAAL_STRUCTURE_KEYWORDS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUPPAAL_STRUCTURE_KEYWORDS"


    // $ANTLR start "ruleUPPAAL_STRUCTURE_KEYWORDS"
    // InternalUppaalXML.g:8261:1: ruleUPPAAL_STRUCTURE_KEYWORDS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' | kw= ']' | kw= '&lt;' | kw= '&gt' | kw= ';' | kw= ',' | kw= '{' | kw= '}' | kw= '(' | kw= ')' | kw= '?' | kw= '!' | kw= '*' | kw= '%' | kw= '/' | kw= '+' | kw= '-' | kw= '&lt;&lt;' | kw= '&gt;&gt' | kw= '&lt;?' | kw= '&gt;?' | kw= '&lt;=' | kw= '&gt;=' | kw= '==' | kw= '!=' | kw= '&' | kw= '&amp;' | kw= '^' | kw= '|' | kw= '&&' | kw= '&amp;&amp;' | kw= '||' | kw= '=' | kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '|=' | kw= '&=' | kw= '^=' | kw= '&lt;&lt;=' | kw= '&gt;&gt;=' | kw= ':' ) ;
    public final AntlrDatatypeRuleToken ruleUPPAAL_STRUCTURE_KEYWORDS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:8267:2: ( (kw= '[' | kw= ']' | kw= '&lt;' | kw= '&gt' | kw= ';' | kw= ',' | kw= '{' | kw= '}' | kw= '(' | kw= ')' | kw= '?' | kw= '!' | kw= '*' | kw= '%' | kw= '/' | kw= '+' | kw= '-' | kw= '&lt;&lt;' | kw= '&gt;&gt' | kw= '&lt;?' | kw= '&gt;?' | kw= '&lt;=' | kw= '&gt;=' | kw= '==' | kw= '!=' | kw= '&' | kw= '&amp;' | kw= '^' | kw= '|' | kw= '&&' | kw= '&amp;&amp;' | kw= '||' | kw= '=' | kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '|=' | kw= '&=' | kw= '^=' | kw= '&lt;&lt;=' | kw= '&gt;&gt;=' | kw= ':' ) )
            // InternalUppaalXML.g:8268:2: (kw= '[' | kw= ']' | kw= '&lt;' | kw= '&gt' | kw= ';' | kw= ',' | kw= '{' | kw= '}' | kw= '(' | kw= ')' | kw= '?' | kw= '!' | kw= '*' | kw= '%' | kw= '/' | kw= '+' | kw= '-' | kw= '&lt;&lt;' | kw= '&gt;&gt' | kw= '&lt;?' | kw= '&gt;?' | kw= '&lt;=' | kw= '&gt;=' | kw= '==' | kw= '!=' | kw= '&' | kw= '&amp;' | kw= '^' | kw= '|' | kw= '&&' | kw= '&amp;&amp;' | kw= '||' | kw= '=' | kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '|=' | kw= '&=' | kw= '^=' | kw= '&lt;&lt;=' | kw= '&gt;&gt;=' | kw= ':' )
            {
            // InternalUppaalXML.g:8268:2: (kw= '[' | kw= ']' | kw= '&lt;' | kw= '&gt' | kw= ';' | kw= ',' | kw= '{' | kw= '}' | kw= '(' | kw= ')' | kw= '?' | kw= '!' | kw= '*' | kw= '%' | kw= '/' | kw= '+' | kw= '-' | kw= '&lt;&lt;' | kw= '&gt;&gt' | kw= '&lt;?' | kw= '&gt;?' | kw= '&lt;=' | kw= '&gt;=' | kw= '==' | kw= '!=' | kw= '&' | kw= '&amp;' | kw= '^' | kw= '|' | kw= '&&' | kw= '&amp;&amp;' | kw= '||' | kw= '=' | kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '|=' | kw= '&=' | kw= '^=' | kw= '&lt;&lt;=' | kw= '&gt;&gt;=' | kw= ':' )
            int alt107=44;
            switch ( input.LA(1) ) {
            case 55:
                {
                alt107=1;
                }
                break;
            case 56:
                {
                alt107=2;
                }
                break;
            case 54:
                {
                alt107=3;
                }
                break;
            case 105:
                {
                alt107=4;
                }
                break;
            case 50:
                {
                alt107=5;
                }
                break;
            case 28:
                {
                alt107=6;
                }
                break;
            case 49:
                {
                alt107=7;
                }
                break;
            case 51:
                {
                alt107=8;
                }
                break;
            case 52:
                {
                alt107=9;
                }
                break;
            case 53:
                {
                alt107=10;
                }
                break;
            case 73:
                {
                alt107=11;
                }
                break;
            case 74:
                {
                alt107=12;
                }
                break;
            case 106:
                {
                alt107=13;
                }
                break;
            case 107:
                {
                alt107=14;
                }
                break;
            case 108:
                {
                alt107=15;
                }
                break;
            case 109:
                {
                alt107=16;
                }
                break;
            case 78:
                {
                alt107=17;
                }
                break;
            case 110:
                {
                alt107=18;
                }
                break;
            case 111:
                {
                alt107=19;
                }
                break;
            case 112:
                {
                alt107=20;
                }
                break;
            case 113:
                {
                alt107=21;
                }
                break;
            case 114:
                {
                alt107=22;
                }
                break;
            case 115:
                {
                alt107=23;
                }
                break;
            case 116:
                {
                alt107=24;
                }
                break;
            case 117:
                {
                alt107=25;
                }
                break;
            case 118:
                {
                alt107=26;
                }
                break;
            case 119:
                {
                alt107=27;
                }
                break;
            case 120:
                {
                alt107=28;
                }
                break;
            case 121:
                {
                alt107=29;
                }
                break;
            case 122:
                {
                alt107=30;
                }
                break;
            case 123:
                {
                alt107=31;
                }
                break;
            case 124:
                {
                alt107=32;
                }
                break;
            case 25:
                {
                alt107=33;
                }
                break;
            case 125:
                {
                alt107=34;
                }
                break;
            case 126:
                {
                alt107=35;
                }
                break;
            case 127:
                {
                alt107=36;
                }
                break;
            case 128:
                {
                alt107=37;
                }
                break;
            case 129:
                {
                alt107=38;
                }
                break;
            case 130:
                {
                alt107=39;
                }
                break;
            case 131:
                {
                alt107=40;
                }
                break;
            case 132:
                {
                alt107=41;
                }
                break;
            case 133:
                {
                alt107=42;
                }
                break;
            case 134:
                {
                alt107=43;
                }
                break;
            case 47:
                {
                alt107=44;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }

            switch (alt107) {
                case 1 :
                    // InternalUppaalXML.g:8269:3: kw= '['
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLeftSquareBracketKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:8275:3: kw= ']'
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getRightSquareBracketKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:8281:3: kw= '&lt;'
                    {
                    kw=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:8287:3: kw= '&gt'
                    {
                    kw=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalUppaalXML.g:8293:3: kw= ';'
                    {
                    kw=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getSemicolonKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalUppaalXML.g:8299:3: kw= ','
                    {
                    kw=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getCommaKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalUppaalXML.g:8305:3: kw= '{'
                    {
                    kw=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLeftCurlyBracketKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalUppaalXML.g:8311:3: kw= '}'
                    {
                    kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getRightCurlyBracketKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalUppaalXML.g:8317:3: kw= '('
                    {
                    kw=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLeftParenthesisKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalUppaalXML.g:8323:3: kw= ')'
                    {
                    kw=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getRightParenthesisKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalUppaalXML.g:8329:3: kw= '?'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getQuestionMarkKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalUppaalXML.g:8335:3: kw= '!'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getExclamationMarkKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalUppaalXML.g:8341:3: kw= '*'
                    {
                    kw=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAsteriskKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalUppaalXML.g:8347:3: kw= '%'
                    {
                    kw=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPercentSignKeyword_13());
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalUppaalXML.g:8353:3: kw= '/'
                    {
                    kw=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getSolidusKeyword_14());
                      		
                    }

                    }
                    break;
                case 16 :
                    // InternalUppaalXML.g:8359:3: kw= '+'
                    {
                    kw=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPlusSignKeyword_15());
                      		
                    }

                    }
                    break;
                case 17 :
                    // InternalUppaalXML.g:8365:3: kw= '-'
                    {
                    kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getHyphenMinusKeyword_16());
                      		
                    }

                    }
                    break;
                case 18 :
                    // InternalUppaalXML.g:8371:3: kw= '&lt;&lt;'
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtLtKeyword_17());
                      		
                    }

                    }
                    break;
                case 19 :
                    // InternalUppaalXML.g:8377:3: kw= '&gt;&gt'
                    {
                    kw=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtGtKeyword_18());
                      		
                    }

                    }
                    break;
                case 20 :
                    // InternalUppaalXML.g:8383:3: kw= '&lt;?'
                    {
                    kw=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtKeyword_19());
                      		
                    }

                    }
                    break;
                case 21 :
                    // InternalUppaalXML.g:8389:3: kw= '&gt;?'
                    {
                    kw=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtKeyword_20());
                      		
                    }

                    }
                    break;
                case 22 :
                    // InternalUppaalXML.g:8395:3: kw= '&lt;='
                    {
                    kw=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtKeyword_21());
                      		
                    }

                    }
                    break;
                case 23 :
                    // InternalUppaalXML.g:8401:3: kw= '&gt;='
                    {
                    kw=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtKeyword_22());
                      		
                    }

                    }
                    break;
                case 24 :
                    // InternalUppaalXML.g:8407:3: kw= '=='
                    {
                    kw=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getEqualsSignEqualsSignKeyword_23());
                      		
                    }

                    }
                    break;
                case 25 :
                    // InternalUppaalXML.g:8413:3: kw= '!='
                    {
                    kw=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getExclamationMarkEqualsSignKeyword_24());
                      		
                    }

                    }
                    break;
                case 26 :
                    // InternalUppaalXML.g:8419:3: kw= '&'
                    {
                    kw=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpersandKeyword_25());
                      		
                    }

                    }
                    break;
                case 27 :
                    // InternalUppaalXML.g:8425:3: kw= '&amp;'
                    {
                    kw=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpKeyword_26());
                      		
                    }

                    }
                    break;
                case 28 :
                    // InternalUppaalXML.g:8431:3: kw= '^'
                    {
                    kw=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getCircumflexAccentKeyword_27());
                      		
                    }

                    }
                    break;
                case 29 :
                    // InternalUppaalXML.g:8437:3: kw= '|'
                    {
                    kw=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getVerticalLineKeyword_28());
                      		
                    }

                    }
                    break;
                case 30 :
                    // InternalUppaalXML.g:8443:3: kw= '&&'
                    {
                    kw=(Token)match(input,122,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpersandAmpersandKeyword_29());
                      		
                    }

                    }
                    break;
                case 31 :
                    // InternalUppaalXML.g:8449:3: kw= '&amp;&amp;'
                    {
                    kw=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpAmpKeyword_30());
                      		
                    }

                    }
                    break;
                case 32 :
                    // InternalUppaalXML.g:8455:3: kw= '||'
                    {
                    kw=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getVerticalLineVerticalLineKeyword_31());
                      		
                    }

                    }
                    break;
                case 33 :
                    // InternalUppaalXML.g:8461:3: kw= '='
                    {
                    kw=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getEqualsSignKeyword_32());
                      		
                    }

                    }
                    break;
                case 34 :
                    // InternalUppaalXML.g:8467:3: kw= '+='
                    {
                    kw=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPlusSignEqualsSignKeyword_33());
                      		
                    }

                    }
                    break;
                case 35 :
                    // InternalUppaalXML.g:8473:3: kw= '-='
                    {
                    kw=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getHyphenMinusEqualsSignKeyword_34());
                      		
                    }

                    }
                    break;
                case 36 :
                    // InternalUppaalXML.g:8479:3: kw= '*='
                    {
                    kw=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAsteriskEqualsSignKeyword_35());
                      		
                    }

                    }
                    break;
                case 37 :
                    // InternalUppaalXML.g:8485:3: kw= '/='
                    {
                    kw=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getSolidusEqualsSignKeyword_36());
                      		
                    }

                    }
                    break;
                case 38 :
                    // InternalUppaalXML.g:8491:3: kw= '%='
                    {
                    kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getPercentSignEqualsSignKeyword_37());
                      		
                    }

                    }
                    break;
                case 39 :
                    // InternalUppaalXML.g:8497:3: kw= '|='
                    {
                    kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getVerticalLineEqualsSignKeyword_38());
                      		
                    }

                    }
                    break;
                case 40 :
                    // InternalUppaalXML.g:8503:3: kw= '&='
                    {
                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getAmpersandEqualsSignKeyword_39());
                      		
                    }

                    }
                    break;
                case 41 :
                    // InternalUppaalXML.g:8509:3: kw= '^='
                    {
                    kw=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getCircumflexAccentEqualsSignKeyword_40());
                      		
                    }

                    }
                    break;
                case 42 :
                    // InternalUppaalXML.g:8515:3: kw= '&lt;&lt;='
                    {
                    kw=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getLtLtKeyword_41());
                      		
                    }

                    }
                    break;
                case 43 :
                    // InternalUppaalXML.g:8521:3: kw= '&gt;&gt;='
                    {
                    kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getGtGtKeyword_42());
                      		
                    }

                    }
                    break;
                case 44 :
                    // InternalUppaalXML.g:8527:3: kw= ':'
                    {
                    kw=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPAAL_STRUCTURE_KEYWORDSAccess().getColonKeyword_43());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUPPAAL_STRUCTURE_KEYWORDS"


    // $ANTLR start "entryRuleQUOTED_INT"
    // InternalUppaalXML.g:8536:1: entryRuleQUOTED_INT returns [String current=null] : iv_ruleQUOTED_INT= ruleQUOTED_INT EOF ;
    public final String entryRuleQUOTED_INT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQUOTED_INT = null;


        try {
            // InternalUppaalXML.g:8536:50: (iv_ruleQUOTED_INT= ruleQUOTED_INT EOF )
            // InternalUppaalXML.g:8537:2: iv_ruleQUOTED_INT= ruleQUOTED_INT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQUOTED_INTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQUOTED_INT=ruleQUOTED_INT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQUOTED_INT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQUOTED_INT"


    // $ANTLR start "ruleQUOTED_INT"
    // InternalUppaalXML.g:8543:1: ruleQUOTED_INT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleQUOTED_INT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:8549:2: (this_STRING_0= RULE_STRING )
            // InternalUppaalXML.g:8550:2: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_STRING_0, grammarAccess.getQUOTED_INTAccess().getSTRINGTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQUOTED_INT"


    // $ANTLR start "entryRuleANY_TOKEN_BUT_XML_CLOSE"
    // InternalUppaalXML.g:8560:1: entryRuleANY_TOKEN_BUT_XML_CLOSE returns [String current=null] : iv_ruleANY_TOKEN_BUT_XML_CLOSE= ruleANY_TOKEN_BUT_XML_CLOSE EOF ;
    public final String entryRuleANY_TOKEN_BUT_XML_CLOSE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleANY_TOKEN_BUT_XML_CLOSE = null;


        try {
            // InternalUppaalXML.g:8560:63: (iv_ruleANY_TOKEN_BUT_XML_CLOSE= ruleANY_TOKEN_BUT_XML_CLOSE EOF )
            // InternalUppaalXML.g:8561:2: iv_ruleANY_TOKEN_BUT_XML_CLOSE= ruleANY_TOKEN_BUT_XML_CLOSE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getANY_TOKEN_BUT_XML_CLOSERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleANY_TOKEN_BUT_XML_CLOSE=ruleANY_TOKEN_BUT_XML_CLOSE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleANY_TOKEN_BUT_XML_CLOSE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleANY_TOKEN_BUT_XML_CLOSE"


    // $ANTLR start "ruleANY_TOKEN_BUT_XML_CLOSE"
    // InternalUppaalXML.g:8567:1: ruleANY_TOKEN_BUT_XML_CLOSE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_XML_KEYWORDS_0= ruleXML_KEYWORDS | this_XML_ATTRIBUTE_KEYWORDS_1= ruleXML_ATTRIBUTE_KEYWORDS | this_XML_STRUCTURE_KEYWORDS_2= ruleXML_STRUCTURE_KEYWORDS | this_UPPAAL_KEYWORDS_3= ruleUPPAAL_KEYWORDS | this_UPPAAL_STRUCTURE_KEYWORDS_4= ruleUPPAAL_STRUCTURE_KEYWORDS | this_STRING_5= RULE_STRING | this_ID_6= RULE_ID | this_WS_7= RULE_WS | this_ANY_OTHER_8= RULE_ANY_OTHER | this_INT_9= RULE_INT | this_SINGLE_LINE_COMMENT_10= RULE_SINGLE_LINE_COMMENT | this_MULTI_LINE_COMMENT_11= RULE_MULTI_LINE_COMMENT ) ;
    public final AntlrDatatypeRuleToken ruleANY_TOKEN_BUT_XML_CLOSE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_5=null;
        Token this_ID_6=null;
        Token this_WS_7=null;
        Token this_ANY_OTHER_8=null;
        Token this_INT_9=null;
        Token this_SINGLE_LINE_COMMENT_10=null;
        Token this_MULTI_LINE_COMMENT_11=null;
        AntlrDatatypeRuleToken this_XML_KEYWORDS_0 = null;

        AntlrDatatypeRuleToken this_XML_ATTRIBUTE_KEYWORDS_1 = null;

        AntlrDatatypeRuleToken this_XML_STRUCTURE_KEYWORDS_2 = null;

        AntlrDatatypeRuleToken this_UPPAAL_KEYWORDS_3 = null;

        AntlrDatatypeRuleToken this_UPPAAL_STRUCTURE_KEYWORDS_4 = null;



        	enterRule();

        try {
            // InternalUppaalXML.g:8573:2: ( (this_XML_KEYWORDS_0= ruleXML_KEYWORDS | this_XML_ATTRIBUTE_KEYWORDS_1= ruleXML_ATTRIBUTE_KEYWORDS | this_XML_STRUCTURE_KEYWORDS_2= ruleXML_STRUCTURE_KEYWORDS | this_UPPAAL_KEYWORDS_3= ruleUPPAAL_KEYWORDS | this_UPPAAL_STRUCTURE_KEYWORDS_4= ruleUPPAAL_STRUCTURE_KEYWORDS | this_STRING_5= RULE_STRING | this_ID_6= RULE_ID | this_WS_7= RULE_WS | this_ANY_OTHER_8= RULE_ANY_OTHER | this_INT_9= RULE_INT | this_SINGLE_LINE_COMMENT_10= RULE_SINGLE_LINE_COMMENT | this_MULTI_LINE_COMMENT_11= RULE_MULTI_LINE_COMMENT ) )
            // InternalUppaalXML.g:8574:2: (this_XML_KEYWORDS_0= ruleXML_KEYWORDS | this_XML_ATTRIBUTE_KEYWORDS_1= ruleXML_ATTRIBUTE_KEYWORDS | this_XML_STRUCTURE_KEYWORDS_2= ruleXML_STRUCTURE_KEYWORDS | this_UPPAAL_KEYWORDS_3= ruleUPPAAL_KEYWORDS | this_UPPAAL_STRUCTURE_KEYWORDS_4= ruleUPPAAL_STRUCTURE_KEYWORDS | this_STRING_5= RULE_STRING | this_ID_6= RULE_ID | this_WS_7= RULE_WS | this_ANY_OTHER_8= RULE_ANY_OTHER | this_INT_9= RULE_INT | this_SINGLE_LINE_COMMENT_10= RULE_SINGLE_LINE_COMMENT | this_MULTI_LINE_COMMENT_11= RULE_MULTI_LINE_COMMENT )
            {
            // InternalUppaalXML.g:8574:2: (this_XML_KEYWORDS_0= ruleXML_KEYWORDS | this_XML_ATTRIBUTE_KEYWORDS_1= ruleXML_ATTRIBUTE_KEYWORDS | this_XML_STRUCTURE_KEYWORDS_2= ruleXML_STRUCTURE_KEYWORDS | this_UPPAAL_KEYWORDS_3= ruleUPPAAL_KEYWORDS | this_UPPAAL_STRUCTURE_KEYWORDS_4= ruleUPPAAL_STRUCTURE_KEYWORDS | this_STRING_5= RULE_STRING | this_ID_6= RULE_ID | this_WS_7= RULE_WS | this_ANY_OTHER_8= RULE_ANY_OTHER | this_INT_9= RULE_INT | this_SINGLE_LINE_COMMENT_10= RULE_SINGLE_LINE_COMMENT | this_MULTI_LINE_COMMENT_11= RULE_MULTI_LINE_COMMENT )
            int alt108=12;
            switch ( input.LA(1) ) {
            case 15:
            case 17:
            case 19:
            case 20:
            case 21:
            case 23:
            case 24:
            case 26:
            case 27:
            case 30:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 39:
            case 40:
            case 41:
            case 46:
            case 135:
                {
                alt108=1;
                }
                break;
            case 37:
            case 38:
            case 42:
            case 43:
            case 44:
                {
                alt108=2;
                }
                break;
            case 11:
            case 12:
            case 13:
            case 14:
            case 16:
            case 31:
                {
                alt108=3;
                }
                break;
            case 22:
            case 29:
            case 48:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 76:
            case 77:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
                {
                alt108=4;
                }
                break;
            case 25:
            case 28:
            case 47:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 73:
            case 74:
            case 78:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
                {
                alt108=5;
                }
                break;
            case RULE_STRING:
                {
                alt108=6;
                }
                break;
            case RULE_ID:
                {
                alt108=7;
                }
                break;
            case RULE_WS:
                {
                alt108=8;
                }
                break;
            case RULE_ANY_OTHER:
                {
                alt108=9;
                }
                break;
            case RULE_INT:
                {
                alt108=10;
                }
                break;
            case RULE_SINGLE_LINE_COMMENT:
                {
                alt108=11;
                }
                break;
            case RULE_MULTI_LINE_COMMENT:
                {
                alt108=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;
            }

            switch (alt108) {
                case 1 :
                    // InternalUppaalXML.g:8575:3: this_XML_KEYWORDS_0= ruleXML_KEYWORDS
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getXML_KEYWORDSParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XML_KEYWORDS_0=ruleXML_KEYWORDS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_XML_KEYWORDS_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:8586:3: this_XML_ATTRIBUTE_KEYWORDS_1= ruleXML_ATTRIBUTE_KEYWORDS
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getXML_ATTRIBUTE_KEYWORDSParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XML_ATTRIBUTE_KEYWORDS_1=ruleXML_ATTRIBUTE_KEYWORDS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_XML_ATTRIBUTE_KEYWORDS_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:8597:3: this_XML_STRUCTURE_KEYWORDS_2= ruleXML_STRUCTURE_KEYWORDS
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getXML_STRUCTURE_KEYWORDSParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XML_STRUCTURE_KEYWORDS_2=ruleXML_STRUCTURE_KEYWORDS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_XML_STRUCTURE_KEYWORDS_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:8608:3: this_UPPAAL_KEYWORDS_3= ruleUPPAAL_KEYWORDS
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getUPPAAL_KEYWORDSParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UPPAAL_KEYWORDS_3=ruleUPPAAL_KEYWORDS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_UPPAAL_KEYWORDS_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalUppaalXML.g:8619:3: this_UPPAAL_STRUCTURE_KEYWORDS_4= ruleUPPAAL_STRUCTURE_KEYWORDS
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getUPPAAL_STRUCTURE_KEYWORDSParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UPPAAL_STRUCTURE_KEYWORDS_4=ruleUPPAAL_STRUCTURE_KEYWORDS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_UPPAAL_STRUCTURE_KEYWORDS_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalUppaalXML.g:8630:3: this_STRING_5= RULE_STRING
                    {
                    this_STRING_5=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_5);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_5, grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getSTRINGTerminalRuleCall_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalUppaalXML.g:8638:3: this_ID_6= RULE_ID
                    {
                    this_ID_6=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_6);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_6, grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getIDTerminalRuleCall_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalUppaalXML.g:8646:3: this_WS_7= RULE_WS
                    {
                    this_WS_7=(Token)match(input,RULE_WS,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_WS_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_WS_7, grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getWSTerminalRuleCall_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalUppaalXML.g:8654:3: this_ANY_OTHER_8= RULE_ANY_OTHER
                    {
                    this_ANY_OTHER_8=(Token)match(input,RULE_ANY_OTHER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ANY_OTHER_8);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ANY_OTHER_8, grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getANY_OTHERTerminalRuleCall_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalUppaalXML.g:8662:3: this_INT_9= RULE_INT
                    {
                    this_INT_9=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INT_9);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_INT_9, grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getINTTerminalRuleCall_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalUppaalXML.g:8670:3: this_SINGLE_LINE_COMMENT_10= RULE_SINGLE_LINE_COMMENT
                    {
                    this_SINGLE_LINE_COMMENT_10=(Token)match(input,RULE_SINGLE_LINE_COMMENT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_SINGLE_LINE_COMMENT_10);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_SINGLE_LINE_COMMENT_10, grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getSINGLE_LINE_COMMENTTerminalRuleCall_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalUppaalXML.g:8678:3: this_MULTI_LINE_COMMENT_11= RULE_MULTI_LINE_COMMENT
                    {
                    this_MULTI_LINE_COMMENT_11=(Token)match(input,RULE_MULTI_LINE_COMMENT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_MULTI_LINE_COMMENT_11);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_MULTI_LINE_COMMENT_11, grammarAccess.getANY_TOKEN_BUT_XML_CLOSEAccess().getMULTI_LINE_COMMENTTerminalRuleCall_11());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleANY_TOKEN_BUT_XML_CLOSE"


    // $ANTLR start "entryRuleXML_STRUCTURE_KEYWORDS"
    // InternalUppaalXML.g:8689:1: entryRuleXML_STRUCTURE_KEYWORDS returns [String current=null] : iv_ruleXML_STRUCTURE_KEYWORDS= ruleXML_STRUCTURE_KEYWORDS EOF ;
    public final String entryRuleXML_STRUCTURE_KEYWORDS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleXML_STRUCTURE_KEYWORDS = null;


        try {
            // InternalUppaalXML.g:8689:62: (iv_ruleXML_STRUCTURE_KEYWORDS= ruleXML_STRUCTURE_KEYWORDS EOF )
            // InternalUppaalXML.g:8690:2: iv_ruleXML_STRUCTURE_KEYWORDS= ruleXML_STRUCTURE_KEYWORDS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXML_STRUCTURE_KEYWORDSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXML_STRUCTURE_KEYWORDS=ruleXML_STRUCTURE_KEYWORDS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXML_STRUCTURE_KEYWORDS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXML_STRUCTURE_KEYWORDS"


    // $ANTLR start "ruleXML_STRUCTURE_KEYWORDS"
    // InternalUppaalXML.g:8696:1: ruleXML_STRUCTURE_KEYWORDS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '<' | kw= '>' | kw= '/>' | kw= '<?xml version=\"1.0\" encoding=\"utf-8\"?>' | kw= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>' | kw= '<!DOCTYPE nta PUBLIC \\'-//Uppaal Team//DTD Flat System 1.1//EN\\' \\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\\'>' ) ;
    public final AntlrDatatypeRuleToken ruleXML_STRUCTURE_KEYWORDS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:8702:2: ( (kw= '<' | kw= '>' | kw= '/>' | kw= '<?xml version=\"1.0\" encoding=\"utf-8\"?>' | kw= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>' | kw= '<!DOCTYPE nta PUBLIC \\'-//Uppaal Team//DTD Flat System 1.1//EN\\' \\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\\'>' ) )
            // InternalUppaalXML.g:8703:2: (kw= '<' | kw= '>' | kw= '/>' | kw= '<?xml version=\"1.0\" encoding=\"utf-8\"?>' | kw= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>' | kw= '<!DOCTYPE nta PUBLIC \\'-//Uppaal Team//DTD Flat System 1.1//EN\\' \\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\\'>' )
            {
            // InternalUppaalXML.g:8703:2: (kw= '<' | kw= '>' | kw= '/>' | kw= '<?xml version=\"1.0\" encoding=\"utf-8\"?>' | kw= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>' | kw= '<!DOCTYPE nta PUBLIC \\'-//Uppaal Team//DTD Flat System 1.1//EN\\' \\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\\'>' )
            int alt109=6;
            switch ( input.LA(1) ) {
            case 14:
                {
                alt109=1;
                }
                break;
            case 16:
                {
                alt109=2;
                }
                break;
            case 31:
                {
                alt109=3;
                }
                break;
            case 11:
                {
                alt109=4;
                }
                break;
            case 12:
                {
                alt109=5;
                }
                break;
            case 13:
                {
                alt109=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }

            switch (alt109) {
                case 1 :
                    // InternalUppaalXML.g:8704:3: kw= '<'
                    {
                    kw=(Token)match(input,14,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getLessThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:8710:3: kw= '>'
                    {
                    kw=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getGreaterThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:8716:3: kw= '/>'
                    {
                    kw=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getSolidusGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:8722:3: kw= '<?xml version=\"1.0\" encoding=\"utf-8\"?>'
                    {
                    kw=(Token)match(input,11,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getXmlVersion10EncodingUtf8Keyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalUppaalXML.g:8728:3: kw= '<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?>'
                    {
                    kw=(Token)match(input,12,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getXmlVersion10EncodingUtf8Keyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalUppaalXML.g:8734:3: kw= '<!DOCTYPE nta PUBLIC \\'-//Uppaal Team//DTD Flat System 1.1//EN\\' \\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd\\'>'
                    {
                    kw=(Token)match(input,13,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_STRUCTURE_KEYWORDSAccess().getDOCTYPENtaPUBLICUppaalTeamDTDFlatSystem11ENHttpWwwItUuSeResearchGroupDartsUppaalFlat1_1DtdKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXML_STRUCTURE_KEYWORDS"


    // $ANTLR start "entryRuleXML_KEYWORDS"
    // InternalUppaalXML.g:8743:1: entryRuleXML_KEYWORDS returns [String current=null] : iv_ruleXML_KEYWORDS= ruleXML_KEYWORDS EOF ;
    public final String entryRuleXML_KEYWORDS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleXML_KEYWORDS = null;


        try {
            // InternalUppaalXML.g:8743:52: (iv_ruleXML_KEYWORDS= ruleXML_KEYWORDS EOF )
            // InternalUppaalXML.g:8744:2: iv_ruleXML_KEYWORDS= ruleXML_KEYWORDS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXML_KEYWORDSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXML_KEYWORDS=ruleXML_KEYWORDS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXML_KEYWORDS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXML_KEYWORDS"


    // $ANTLR start "ruleXML_KEYWORDS"
    // InternalUppaalXML.g:8750:1: ruleXML_KEYWORDS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'imports' | kw= 'nta' | kw= 'template' | kw= 'name' | kw= 'ref' | kw= 'location' | kw= 'id' | kw= 'color' | kw= 'transition' | kw= 'source' | kw= 'target' | kw= 'nail' | kw= 'label' | kw= 'kind' | kw= 'declaration' | kw= 'instantiation' | kw= 'parameter' | kw= 'committed' | kw= 'x' | kw= 'y' ) ;
    public final AntlrDatatypeRuleToken ruleXML_KEYWORDS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:8756:2: ( (kw= 'imports' | kw= 'nta' | kw= 'template' | kw= 'name' | kw= 'ref' | kw= 'location' | kw= 'id' | kw= 'color' | kw= 'transition' | kw= 'source' | kw= 'target' | kw= 'nail' | kw= 'label' | kw= 'kind' | kw= 'declaration' | kw= 'instantiation' | kw= 'parameter' | kw= 'committed' | kw= 'x' | kw= 'y' ) )
            // InternalUppaalXML.g:8757:2: (kw= 'imports' | kw= 'nta' | kw= 'template' | kw= 'name' | kw= 'ref' | kw= 'location' | kw= 'id' | kw= 'color' | kw= 'transition' | kw= 'source' | kw= 'target' | kw= 'nail' | kw= 'label' | kw= 'kind' | kw= 'declaration' | kw= 'instantiation' | kw= 'parameter' | kw= 'committed' | kw= 'x' | kw= 'y' )
            {
            // InternalUppaalXML.g:8757:2: (kw= 'imports' | kw= 'nta' | kw= 'template' | kw= 'name' | kw= 'ref' | kw= 'location' | kw= 'id' | kw= 'color' | kw= 'transition' | kw= 'source' | kw= 'target' | kw= 'nail' | kw= 'label' | kw= 'kind' | kw= 'declaration' | kw= 'instantiation' | kw= 'parameter' | kw= 'committed' | kw= 'x' | kw= 'y' )
            int alt110=20;
            switch ( input.LA(1) ) {
            case 17:
                {
                alt110=1;
                }
                break;
            case 15:
                {
                alt110=2;
                }
                break;
            case 20:
                {
                alt110=3;
                }
                break;
            case 23:
                {
                alt110=4;
                }
                break;
            case 30:
                {
                alt110=5;
                }
                break;
            case 32:
                {
                alt110=6;
                }
                break;
            case 33:
                {
                alt110=7;
                }
                break;
            case 34:
                {
                alt110=8;
                }
                break;
            case 39:
                {
                alt110=9;
                }
                break;
            case 40:
                {
                alt110=10;
                }
                break;
            case 41:
                {
                alt110=11;
                }
                break;
            case 46:
                {
                alt110=12;
                }
                break;
            case 35:
                {
                alt110=13;
                }
                break;
            case 36:
                {
                alt110=14;
                }
                break;
            case 19:
                {
                alt110=15;
                }
                break;
            case 21:
                {
                alt110=16;
                }
                break;
            case 27:
                {
                alt110=17;
                }
                break;
            case 135:
                {
                alt110=18;
                }
                break;
            case 24:
                {
                alt110=19;
                }
                break;
            case 26:
                {
                alt110=20;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }

            switch (alt110) {
                case 1 :
                    // InternalUppaalXML.g:8758:3: kw= 'imports'
                    {
                    kw=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getImportsKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:8764:3: kw= 'nta'
                    {
                    kw=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getNtaKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:8770:3: kw= 'template'
                    {
                    kw=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getTemplateKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:8776:3: kw= 'name'
                    {
                    kw=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getNameKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalUppaalXML.g:8782:3: kw= 'ref'
                    {
                    kw=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getRefKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalUppaalXML.g:8788:3: kw= 'location'
                    {
                    kw=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getLocationKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalUppaalXML.g:8794:3: kw= 'id'
                    {
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getIdKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalUppaalXML.g:8800:3: kw= 'color'
                    {
                    kw=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getColorKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalUppaalXML.g:8806:3: kw= 'transition'
                    {
                    kw=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getTransitionKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalUppaalXML.g:8812:3: kw= 'source'
                    {
                    kw=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getSourceKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalUppaalXML.g:8818:3: kw= 'target'
                    {
                    kw=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getTargetKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalUppaalXML.g:8824:3: kw= 'nail'
                    {
                    kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getNailKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalUppaalXML.g:8830:3: kw= 'label'
                    {
                    kw=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getLabelKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalUppaalXML.g:8836:3: kw= 'kind'
                    {
                    kw=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getKindKeyword_13());
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalUppaalXML.g:8842:3: kw= 'declaration'
                    {
                    kw=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getDeclarationKeyword_14());
                      		
                    }

                    }
                    break;
                case 16 :
                    // InternalUppaalXML.g:8848:3: kw= 'instantiation'
                    {
                    kw=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getInstantiationKeyword_15());
                      		
                    }

                    }
                    break;
                case 17 :
                    // InternalUppaalXML.g:8854:3: kw= 'parameter'
                    {
                    kw=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getParameterKeyword_16());
                      		
                    }

                    }
                    break;
                case 18 :
                    // InternalUppaalXML.g:8860:3: kw= 'committed'
                    {
                    kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getCommittedKeyword_17());
                      		
                    }

                    }
                    break;
                case 19 :
                    // InternalUppaalXML.g:8866:3: kw= 'x'
                    {
                    kw=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getXKeyword_18());
                      		
                    }

                    }
                    break;
                case 20 :
                    // InternalUppaalXML.g:8872:3: kw= 'y'
                    {
                    kw=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_KEYWORDSAccess().getYKeyword_19());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXML_KEYWORDS"


    // $ANTLR start "entryRuleXML_ATTRIBUTE_KEYWORDS"
    // InternalUppaalXML.g:8881:1: entryRuleXML_ATTRIBUTE_KEYWORDS returns [String current=null] : iv_ruleXML_ATTRIBUTE_KEYWORDS= ruleXML_ATTRIBUTE_KEYWORDS EOF ;
    public final String entryRuleXML_ATTRIBUTE_KEYWORDS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleXML_ATTRIBUTE_KEYWORDS = null;


        try {
            // InternalUppaalXML.g:8881:62: (iv_ruleXML_ATTRIBUTE_KEYWORDS= ruleXML_ATTRIBUTE_KEYWORDS EOF )
            // InternalUppaalXML.g:8882:2: iv_ruleXML_ATTRIBUTE_KEYWORDS= ruleXML_ATTRIBUTE_KEYWORDS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXML_ATTRIBUTE_KEYWORDSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXML_ATTRIBUTE_KEYWORDS=ruleXML_ATTRIBUTE_KEYWORDS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXML_ATTRIBUTE_KEYWORDS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXML_ATTRIBUTE_KEYWORDS"


    // $ANTLR start "ruleXML_ATTRIBUTE_KEYWORDS"
    // InternalUppaalXML.g:8888:1: ruleXML_ATTRIBUTE_KEYWORDS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '\"synchronisation\"' | kw= '\"guard\"' | kw= '\"assignment\"' | kw= '\"invariant\"' | kw= '\"comments\"' ) ;
    public final AntlrDatatypeRuleToken ruleXML_ATTRIBUTE_KEYWORDS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:8894:2: ( (kw= '\"synchronisation\"' | kw= '\"guard\"' | kw= '\"assignment\"' | kw= '\"invariant\"' | kw= '\"comments\"' ) )
            // InternalUppaalXML.g:8895:2: (kw= '\"synchronisation\"' | kw= '\"guard\"' | kw= '\"assignment\"' | kw= '\"invariant\"' | kw= '\"comments\"' )
            {
            // InternalUppaalXML.g:8895:2: (kw= '\"synchronisation\"' | kw= '\"guard\"' | kw= '\"assignment\"' | kw= '\"invariant\"' | kw= '\"comments\"' )
            int alt111=5;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt111=1;
                }
                break;
            case 43:
                {
                alt111=2;
                }
                break;
            case 44:
                {
                alt111=3;
                }
                break;
            case 38:
                {
                alt111=4;
                }
                break;
            case 37:
                {
                alt111=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }

            switch (alt111) {
                case 1 :
                    // InternalUppaalXML.g:8896:3: kw= '\"synchronisation\"'
                    {
                    kw=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getSynchronisationKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:8902:3: kw= '\"guard\"'
                    {
                    kw=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getGuardKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:8908:3: kw= '\"assignment\"'
                    {
                    kw=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getAssignmentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:8914:3: kw= '\"invariant\"'
                    {
                    kw=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getInvariantKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalUppaalXML.g:8920:3: kw= '\"comments\"'
                    {
                    kw=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getXML_ATTRIBUTE_KEYWORDSAccess().getCommentsKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXML_ATTRIBUTE_KEYWORDS"


    // $ANTLR start "ruleLocationKind"
    // InternalUppaalXML.g:8929:1: ruleLocationKind returns [Enumerator current=null] : ( (enumLiteral_0= '<urgent/>' ) | (enumLiteral_1= '<committed/>' ) ) ;
    public final Enumerator ruleLocationKind() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:8935:2: ( ( (enumLiteral_0= '<urgent/>' ) | (enumLiteral_1= '<committed/>' ) ) )
            // InternalUppaalXML.g:8936:2: ( (enumLiteral_0= '<urgent/>' ) | (enumLiteral_1= '<committed/>' ) )
            {
            // InternalUppaalXML.g:8936:2: ( (enumLiteral_0= '<urgent/>' ) | (enumLiteral_1= '<committed/>' ) )
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==136) ) {
                alt112=1;
            }
            else if ( (LA112_0==137) ) {
                alt112=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }
            switch (alt112) {
                case 1 :
                    // InternalUppaalXML.g:8937:3: (enumLiteral_0= '<urgent/>' )
                    {
                    // InternalUppaalXML.g:8937:3: (enumLiteral_0= '<urgent/>' )
                    // InternalUppaalXML.g:8938:4: enumLiteral_0= '<urgent/>'
                    {
                    enumLiteral_0=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLocationKindAccess().getURGENTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getLocationKindAccess().getURGENTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:8945:3: (enumLiteral_1= '<committed/>' )
                    {
                    // InternalUppaalXML.g:8945:3: (enumLiteral_1= '<committed/>' )
                    // InternalUppaalXML.g:8946:4: enumLiteral_1= '<committed/>'
                    {
                    enumLiteral_1=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLocationKindAccess().getCOMMITEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getLocationKindAccess().getCOMMITEDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocationKind"


    // $ANTLR start "ruleSynchronizationKind"
    // InternalUppaalXML.g:8956:1: ruleSynchronizationKind returns [Enumerator current=null] : ( (enumLiteral_0= '!' ) | (enumLiteral_1= '?' ) ) ;
    public final Enumerator ruleSynchronizationKind() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:8962:2: ( ( (enumLiteral_0= '!' ) | (enumLiteral_1= '?' ) ) )
            // InternalUppaalXML.g:8963:2: ( (enumLiteral_0= '!' ) | (enumLiteral_1= '?' ) )
            {
            // InternalUppaalXML.g:8963:2: ( (enumLiteral_0= '!' ) | (enumLiteral_1= '?' ) )
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==74) ) {
                alt113=1;
            }
            else if ( (LA113_0==73) ) {
                alt113=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 113, 0, input);

                throw nvae;
            }
            switch (alt113) {
                case 1 :
                    // InternalUppaalXML.g:8964:3: (enumLiteral_0= '!' )
                    {
                    // InternalUppaalXML.g:8964:3: (enumLiteral_0= '!' )
                    // InternalUppaalXML.g:8965:4: enumLiteral_0= '!'
                    {
                    enumLiteral_0=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSynchronizationKindAccess().getSENDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getSynchronizationKindAccess().getSENDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:8972:3: (enumLiteral_1= '?' )
                    {
                    // InternalUppaalXML.g:8972:3: (enumLiteral_1= '?' )
                    // InternalUppaalXML.g:8973:4: enumLiteral_1= '?'
                    {
                    enumLiteral_1=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSynchronizationKindAccess().getRECEIVEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getSynchronizationKindAccess().getRECEIVEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSynchronizationKind"


    // $ANTLR start "ruleDataVariablePrefix"
    // InternalUppaalXML.g:8983:1: ruleDataVariablePrefix returns [Enumerator current=null] : ( (enumLiteral_0= 'const' ) | (enumLiteral_1= 'meta' ) ) ;
    public final Enumerator ruleDataVariablePrefix() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:8989:2: ( ( (enumLiteral_0= 'const' ) | (enumLiteral_1= 'meta' ) ) )
            // InternalUppaalXML.g:8990:2: ( (enumLiteral_0= 'const' ) | (enumLiteral_1= 'meta' ) )
            {
            // InternalUppaalXML.g:8990:2: ( (enumLiteral_0= 'const' ) | (enumLiteral_1= 'meta' ) )
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==83) ) {
                alt114=1;
            }
            else if ( (LA114_0==99) ) {
                alt114=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    // InternalUppaalXML.g:8991:3: (enumLiteral_0= 'const' )
                    {
                    // InternalUppaalXML.g:8991:3: (enumLiteral_0= 'const' )
                    // InternalUppaalXML.g:8992:4: enumLiteral_0= 'const'
                    {
                    enumLiteral_0=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataVariablePrefixAccess().getCONSTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDataVariablePrefixAccess().getCONSTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:8999:3: (enumLiteral_1= 'meta' )
                    {
                    // InternalUppaalXML.g:8999:3: (enumLiteral_1= 'meta' )
                    // InternalUppaalXML.g:9000:4: enumLiteral_1= 'meta'
                    {
                    enumLiteral_1=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataVariablePrefixAccess().getMETAEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDataVariablePrefixAccess().getMETAEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataVariablePrefix"


    // $ANTLR start "ruleCallType"
    // InternalUppaalXML.g:9010:1: ruleCallType returns [Enumerator current=null] : (enumLiteral_0= '&amp;' ) ;
    public final Enumerator ruleCallType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9016:2: ( (enumLiteral_0= '&amp;' ) )
            // InternalUppaalXML.g:9017:2: (enumLiteral_0= '&amp;' )
            {
            // InternalUppaalXML.g:9017:2: (enumLiteral_0= '&amp;' )
            // InternalUppaalXML.g:9018:3: enumLiteral_0= '&amp;'
            {
            enumLiteral_0=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getCallTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getCallTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCallType"


    // $ANTLR start "ruleQuantifier"
    // InternalUppaalXML.g:9027:1: ruleQuantifier returns [Enumerator current=null] : ( (enumLiteral_0= 'forall' ) | (enumLiteral_1= 'exists' ) ) ;
    public final Enumerator ruleQuantifier() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9033:2: ( ( (enumLiteral_0= 'forall' ) | (enumLiteral_1= 'exists' ) ) )
            // InternalUppaalXML.g:9034:2: ( (enumLiteral_0= 'forall' ) | (enumLiteral_1= 'exists' ) )
            {
            // InternalUppaalXML.g:9034:2: ( (enumLiteral_0= 'forall' ) | (enumLiteral_1= 'exists' ) )
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==94) ) {
                alt115=1;
            }
            else if ( (LA115_0==95) ) {
                alt115=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalUppaalXML.g:9035:3: (enumLiteral_0= 'forall' )
                    {
                    // InternalUppaalXML.g:9035:3: (enumLiteral_0= 'forall' )
                    // InternalUppaalXML.g:9036:4: enumLiteral_0= 'forall'
                    {
                    enumLiteral_0=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getQuantifierAccess().getUNIVERSALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getQuantifierAccess().getUNIVERSALEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:9043:3: (enumLiteral_1= 'exists' )
                    {
                    // InternalUppaalXML.g:9043:3: (enumLiteral_1= 'exists' )
                    // InternalUppaalXML.g:9044:4: enumLiteral_1= 'exists'
                    {
                    enumLiteral_1=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getQuantifierAccess().getEXISTENTIALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getQuantifierAccess().getEXISTENTIALEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantifier"


    // $ANTLR start "ruleLogicalOperator_OrImply"
    // InternalUppaalXML.g:9054:1: ruleLogicalOperator_OrImply returns [Enumerator current=null] : ( (enumLiteral_0= 'or' ) | (enumLiteral_1= 'imply' ) ) ;
    public final Enumerator ruleLogicalOperator_OrImply() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9060:2: ( ( (enumLiteral_0= 'or' ) | (enumLiteral_1= 'imply' ) ) )
            // InternalUppaalXML.g:9061:2: ( (enumLiteral_0= 'or' ) | (enumLiteral_1= 'imply' ) )
            {
            // InternalUppaalXML.g:9061:2: ( (enumLiteral_0= 'or' ) | (enumLiteral_1= 'imply' ) )
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==92) ) {
                alt116=1;
            }
            else if ( (LA116_0==93) ) {
                alt116=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;
            }
            switch (alt116) {
                case 1 :
                    // InternalUppaalXML.g:9062:3: (enumLiteral_0= 'or' )
                    {
                    // InternalUppaalXML.g:9062:3: (enumLiteral_0= 'or' )
                    // InternalUppaalXML.g:9063:4: enumLiteral_0= 'or'
                    {
                    enumLiteral_0=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLogicalOperator_OrImplyAccess().getOREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getLogicalOperator_OrImplyAccess().getOREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:9070:3: (enumLiteral_1= 'imply' )
                    {
                    // InternalUppaalXML.g:9070:3: (enumLiteral_1= 'imply' )
                    // InternalUppaalXML.g:9071:4: enumLiteral_1= 'imply'
                    {
                    enumLiteral_1=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLogicalOperator_OrImplyAccess().getIMPLYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getLogicalOperator_OrImplyAccess().getIMPLYEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOperator_OrImply"


    // $ANTLR start "ruleLogicalOperator_And"
    // InternalUppaalXML.g:9081:1: ruleLogicalOperator_And returns [Enumerator current=null] : (enumLiteral_0= 'and' ) ;
    public final Enumerator ruleLogicalOperator_And() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9087:2: ( (enumLiteral_0= 'and' ) )
            // InternalUppaalXML.g:9088:2: (enumLiteral_0= 'and' )
            {
            // InternalUppaalXML.g:9088:2: (enumLiteral_0= 'and' )
            // InternalUppaalXML.g:9089:3: enumLiteral_0= 'and'
            {
            enumLiteral_0=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalOperator_AndAccess().getANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOperator_AndAccess().getANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOperator_And"


    // $ANTLR start "ruleAssignmentOperator"
    // InternalUppaalXML.g:9098:1: ruleAssignmentOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= ':=' ) | (enumLiteral_2= '+=' ) | (enumLiteral_3= '-=' ) | (enumLiteral_4= '*=' ) | (enumLiteral_5= '/=' ) | (enumLiteral_6= '%=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '&=' ) | (enumLiteral_9= '^=' ) | (enumLiteral_10= '&lt;&lt;=' ) | (enumLiteral_11= '&gt;&gt;=' ) ) ;
    public final Enumerator ruleAssignmentOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9104:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= ':=' ) | (enumLiteral_2= '+=' ) | (enumLiteral_3= '-=' ) | (enumLiteral_4= '*=' ) | (enumLiteral_5= '/=' ) | (enumLiteral_6= '%=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '&=' ) | (enumLiteral_9= '^=' ) | (enumLiteral_10= '&lt;&lt;=' ) | (enumLiteral_11= '&gt;&gt;=' ) ) )
            // InternalUppaalXML.g:9105:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= ':=' ) | (enumLiteral_2= '+=' ) | (enumLiteral_3= '-=' ) | (enumLiteral_4= '*=' ) | (enumLiteral_5= '/=' ) | (enumLiteral_6= '%=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '&=' ) | (enumLiteral_9= '^=' ) | (enumLiteral_10= '&lt;&lt;=' ) | (enumLiteral_11= '&gt;&gt;=' ) )
            {
            // InternalUppaalXML.g:9105:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= ':=' ) | (enumLiteral_2= '+=' ) | (enumLiteral_3= '-=' ) | (enumLiteral_4= '*=' ) | (enumLiteral_5= '/=' ) | (enumLiteral_6= '%=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '&=' ) | (enumLiteral_9= '^=' ) | (enumLiteral_10= '&lt;&lt;=' ) | (enumLiteral_11= '&gt;&gt;=' ) )
            int alt117=12;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt117=1;
                }
                break;
            case 138:
                {
                alt117=2;
                }
                break;
            case 125:
                {
                alt117=3;
                }
                break;
            case 126:
                {
                alt117=4;
                }
                break;
            case 127:
                {
                alt117=5;
                }
                break;
            case 128:
                {
                alt117=6;
                }
                break;
            case 129:
                {
                alt117=7;
                }
                break;
            case 130:
                {
                alt117=8;
                }
                break;
            case 131:
                {
                alt117=9;
                }
                break;
            case 132:
                {
                alt117=10;
                }
                break;
            case 133:
                {
                alt117=11;
                }
                break;
            case 134:
                {
                alt117=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;
            }

            switch (alt117) {
                case 1 :
                    // InternalUppaalXML.g:9106:3: (enumLiteral_0= '=' )
                    {
                    // InternalUppaalXML.g:9106:3: (enumLiteral_0= '=' )
                    // InternalUppaalXML.g:9107:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:9114:3: (enumLiteral_1= ':=' )
                    {
                    // InternalUppaalXML.g:9114:3: (enumLiteral_1= ':=' )
                    // InternalUppaalXML.g:9115:4: enumLiteral_1= ':='
                    {
                    enumLiteral_1=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:9122:3: (enumLiteral_2= '+=' )
                    {
                    // InternalUppaalXML.g:9122:3: (enumLiteral_2= '+=' )
                    // InternalUppaalXML.g:9123:4: enumLiteral_2= '+='
                    {
                    enumLiteral_2=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getPLUS_EQUALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAssignmentOperatorAccess().getPLUS_EQUALEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:9130:3: (enumLiteral_3= '-=' )
                    {
                    // InternalUppaalXML.g:9130:3: (enumLiteral_3= '-=' )
                    // InternalUppaalXML.g:9131:4: enumLiteral_3= '-='
                    {
                    enumLiteral_3=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getMINUS_EQUALEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getAssignmentOperatorAccess().getMINUS_EQUALEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalUppaalXML.g:9138:3: (enumLiteral_4= '*=' )
                    {
                    // InternalUppaalXML.g:9138:3: (enumLiteral_4= '*=' )
                    // InternalUppaalXML.g:9139:4: enumLiteral_4= '*='
                    {
                    enumLiteral_4=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getTIMES_EQUALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getAssignmentOperatorAccess().getTIMES_EQUALEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalUppaalXML.g:9146:3: (enumLiteral_5= '/=' )
                    {
                    // InternalUppaalXML.g:9146:3: (enumLiteral_5= '/=' )
                    // InternalUppaalXML.g:9147:4: enumLiteral_5= '/='
                    {
                    enumLiteral_5=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getDIVIDE_EQUALEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getAssignmentOperatorAccess().getDIVIDE_EQUALEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalUppaalXML.g:9154:3: (enumLiteral_6= '%=' )
                    {
                    // InternalUppaalXML.g:9154:3: (enumLiteral_6= '%=' )
                    // InternalUppaalXML.g:9155:4: enumLiteral_6= '%='
                    {
                    enumLiteral_6=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getMODULO_EQUALEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getAssignmentOperatorAccess().getMODULO_EQUALEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalUppaalXML.g:9162:3: (enumLiteral_7= '|=' )
                    {
                    // InternalUppaalXML.g:9162:3: (enumLiteral_7= '|=' )
                    // InternalUppaalXML.g:9163:4: enumLiteral_7= '|='
                    {
                    enumLiteral_7=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getBIT_OR_EQUALEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getAssignmentOperatorAccess().getBIT_OR_EQUALEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalUppaalXML.g:9170:3: (enumLiteral_8= '&=' )
                    {
                    // InternalUppaalXML.g:9170:3: (enumLiteral_8= '&=' )
                    // InternalUppaalXML.g:9171:4: enumLiteral_8= '&='
                    {
                    enumLiteral_8=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getBIT_AND_EQUALEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getAssignmentOperatorAccess().getBIT_AND_EQUALEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalUppaalXML.g:9178:3: (enumLiteral_9= '^=' )
                    {
                    // InternalUppaalXML.g:9178:3: (enumLiteral_9= '^=' )
                    // InternalUppaalXML.g:9179:4: enumLiteral_9= '^='
                    {
                    enumLiteral_9=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getBIT_XOR_EQUALEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getAssignmentOperatorAccess().getBIT_XOR_EQUALEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalUppaalXML.g:9186:3: (enumLiteral_10= '&lt;&lt;=' )
                    {
                    // InternalUppaalXML.g:9186:3: (enumLiteral_10= '&lt;&lt;=' )
                    // InternalUppaalXML.g:9187:4: enumLiteral_10= '&lt;&lt;='
                    {
                    enumLiteral_10=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getBIT_LEFT_EQUALEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getAssignmentOperatorAccess().getBIT_LEFT_EQUALEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalUppaalXML.g:9194:3: (enumLiteral_11= '&gt;&gt;=' )
                    {
                    // InternalUppaalXML.g:9194:3: (enumLiteral_11= '&gt;&gt;=' )
                    // InternalUppaalXML.g:9195:4: enumLiteral_11= '&gt;&gt;='
                    {
                    enumLiteral_11=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignmentOperatorAccess().getBIT_RIGHT_EQUALEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getAssignmentOperatorAccess().getBIT_RIGHT_EQUALEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignmentOperator"


    // $ANTLR start "ruleLogicalOperator_OrAlternative"
    // InternalUppaalXML.g:9205:1: ruleLogicalOperator_OrAlternative returns [Enumerator current=null] : (enumLiteral_0= '||' ) ;
    public final Enumerator ruleLogicalOperator_OrAlternative() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9211:2: ( (enumLiteral_0= '||' ) )
            // InternalUppaalXML.g:9212:2: (enumLiteral_0= '||' )
            {
            // InternalUppaalXML.g:9212:2: (enumLiteral_0= '||' )
            // InternalUppaalXML.g:9213:3: enumLiteral_0= '||'
            {
            enumLiteral_0=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalOperator_OrAlternativeAccess().getOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOperator_OrAlternativeAccess().getOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOperator_OrAlternative"


    // $ANTLR start "ruleLogicalOperator_AndAlternative"
    // InternalUppaalXML.g:9222:1: ruleLogicalOperator_AndAlternative returns [Enumerator current=null] : (enumLiteral_0= '&amp;&amp;' ) ;
    public final Enumerator ruleLogicalOperator_AndAlternative() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9228:2: ( (enumLiteral_0= '&amp;&amp;' ) )
            // InternalUppaalXML.g:9229:2: (enumLiteral_0= '&amp;&amp;' )
            {
            // InternalUppaalXML.g:9229:2: (enumLiteral_0= '&amp;&amp;' )
            // InternalUppaalXML.g:9230:3: enumLiteral_0= '&amp;&amp;'
            {
            enumLiteral_0=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalOperator_AndAlternativeAccess().getANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOperator_AndAlternativeAccess().getANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOperator_AndAlternative"


    // $ANTLR start "ruleBitwiseOperator_Or"
    // InternalUppaalXML.g:9239:1: ruleBitwiseOperator_Or returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
    public final Enumerator ruleBitwiseOperator_Or() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9245:2: ( (enumLiteral_0= '|' ) )
            // InternalUppaalXML.g:9246:2: (enumLiteral_0= '|' )
            {
            // InternalUppaalXML.g:9246:2: (enumLiteral_0= '|' )
            // InternalUppaalXML.g:9247:3: enumLiteral_0= '|'
            {
            enumLiteral_0=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseOperator_OrAccess().getOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOperator_OrAccess().getOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOperator_Or"


    // $ANTLR start "ruleBitwiseOperator_Xor"
    // InternalUppaalXML.g:9256:1: ruleBitwiseOperator_Xor returns [Enumerator current=null] : (enumLiteral_0= '^' ) ;
    public final Enumerator ruleBitwiseOperator_Xor() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9262:2: ( (enumLiteral_0= '^' ) )
            // InternalUppaalXML.g:9263:2: (enumLiteral_0= '^' )
            {
            // InternalUppaalXML.g:9263:2: (enumLiteral_0= '^' )
            // InternalUppaalXML.g:9264:3: enumLiteral_0= '^'
            {
            enumLiteral_0=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseOperator_XorAccess().getXOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOperator_XorAccess().getXOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOperator_Xor"


    // $ANTLR start "ruleBitwiseOperator_And"
    // InternalUppaalXML.g:9273:1: ruleBitwiseOperator_And returns [Enumerator current=null] : (enumLiteral_0= '&amp;' ) ;
    public final Enumerator ruleBitwiseOperator_And() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9279:2: ( (enumLiteral_0= '&amp;' ) )
            // InternalUppaalXML.g:9280:2: (enumLiteral_0= '&amp;' )
            {
            // InternalUppaalXML.g:9280:2: (enumLiteral_0= '&amp;' )
            // InternalUppaalXML.g:9281:3: enumLiteral_0= '&amp;'
            {
            enumLiteral_0=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseOperator_AndAccess().getANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOperator_AndAccess().getANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOperator_And"


    // $ANTLR start "ruleCompareOperator_EqualUnequal"
    // InternalUppaalXML.g:9290:1: ruleCompareOperator_EqualUnequal returns [Enumerator current=null] : ( (enumLiteral_0= '==' ) | (enumLiteral_1= '!=' ) ) ;
    public final Enumerator ruleCompareOperator_EqualUnequal() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9296:2: ( ( (enumLiteral_0= '==' ) | (enumLiteral_1= '!=' ) ) )
            // InternalUppaalXML.g:9297:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '!=' ) )
            {
            // InternalUppaalXML.g:9297:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '!=' ) )
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==116) ) {
                alt118=1;
            }
            else if ( (LA118_0==117) ) {
                alt118=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }
            switch (alt118) {
                case 1 :
                    // InternalUppaalXML.g:9298:3: (enumLiteral_0= '==' )
                    {
                    // InternalUppaalXML.g:9298:3: (enumLiteral_0= '==' )
                    // InternalUppaalXML.g:9299:4: enumLiteral_0= '=='
                    {
                    enumLiteral_0=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperator_EqualUnequalAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCompareOperator_EqualUnequalAccess().getEQUALEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:9306:3: (enumLiteral_1= '!=' )
                    {
                    // InternalUppaalXML.g:9306:3: (enumLiteral_1= '!=' )
                    // InternalUppaalXML.g:9307:4: enumLiteral_1= '!='
                    {
                    enumLiteral_1=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperator_EqualUnequalAccess().getUNEQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCompareOperator_EqualUnequalAccess().getUNEQUALEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator_EqualUnequal"


    // $ANTLR start "ruleCompareOperator_Other"
    // InternalUppaalXML.g:9317:1: ruleCompareOperator_Other returns [Enumerator current=null] : ( (enumLiteral_0= '&gt;' ) | (enumLiteral_1= '&gt;=' ) | (enumLiteral_2= '&lt;' ) | (enumLiteral_3= '&lt;=' ) ) ;
    public final Enumerator ruleCompareOperator_Other() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9323:2: ( ( (enumLiteral_0= '&gt;' ) | (enumLiteral_1= '&gt;=' ) | (enumLiteral_2= '&lt;' ) | (enumLiteral_3= '&lt;=' ) ) )
            // InternalUppaalXML.g:9324:2: ( (enumLiteral_0= '&gt;' ) | (enumLiteral_1= '&gt;=' ) | (enumLiteral_2= '&lt;' ) | (enumLiteral_3= '&lt;=' ) )
            {
            // InternalUppaalXML.g:9324:2: ( (enumLiteral_0= '&gt;' ) | (enumLiteral_1= '&gt;=' ) | (enumLiteral_2= '&lt;' ) | (enumLiteral_3= '&lt;=' ) )
            int alt119=4;
            switch ( input.LA(1) ) {
            case 139:
                {
                alt119=1;
                }
                break;
            case 115:
                {
                alt119=2;
                }
                break;
            case 54:
                {
                alt119=3;
                }
                break;
            case 114:
                {
                alt119=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;
            }

            switch (alt119) {
                case 1 :
                    // InternalUppaalXML.g:9325:3: (enumLiteral_0= '&gt;' )
                    {
                    // InternalUppaalXML.g:9325:3: (enumLiteral_0= '&gt;' )
                    // InternalUppaalXML.g:9326:4: enumLiteral_0= '&gt;'
                    {
                    enumLiteral_0=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperator_OtherAccess().getGREATEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCompareOperator_OtherAccess().getGREATEREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:9333:3: (enumLiteral_1= '&gt;=' )
                    {
                    // InternalUppaalXML.g:9333:3: (enumLiteral_1= '&gt;=' )
                    // InternalUppaalXML.g:9334:4: enumLiteral_1= '&gt;='
                    {
                    enumLiteral_1=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperator_OtherAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCompareOperator_OtherAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:9341:3: (enumLiteral_2= '&lt;' )
                    {
                    // InternalUppaalXML.g:9341:3: (enumLiteral_2= '&lt;' )
                    // InternalUppaalXML.g:9342:4: enumLiteral_2= '&lt;'
                    {
                    enumLiteral_2=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperator_OtherAccess().getLESSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCompareOperator_OtherAccess().getLESSEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalUppaalXML.g:9349:3: (enumLiteral_3= '&lt;=' )
                    {
                    // InternalUppaalXML.g:9349:3: (enumLiteral_3= '&lt;=' )
                    // InternalUppaalXML.g:9350:4: enumLiteral_3= '&lt;='
                    {
                    enumLiteral_3=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperator_OtherAccess().getLESS_OR_EQUALEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCompareOperator_OtherAccess().getLESS_OR_EQUALEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator_Other"


    // $ANTLR start "ruleMinMaxOperator"
    // InternalUppaalXML.g:9360:1: ruleMinMaxOperator returns [Enumerator current=null] : ( (enumLiteral_0= '&lt;?' ) | (enumLiteral_1= '&gt;?' ) ) ;
    public final Enumerator ruleMinMaxOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9366:2: ( ( (enumLiteral_0= '&lt;?' ) | (enumLiteral_1= '&gt;?' ) ) )
            // InternalUppaalXML.g:9367:2: ( (enumLiteral_0= '&lt;?' ) | (enumLiteral_1= '&gt;?' ) )
            {
            // InternalUppaalXML.g:9367:2: ( (enumLiteral_0= '&lt;?' ) | (enumLiteral_1= '&gt;?' ) )
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==112) ) {
                alt120=1;
            }
            else if ( (LA120_0==113) ) {
                alt120=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }
            switch (alt120) {
                case 1 :
                    // InternalUppaalXML.g:9368:3: (enumLiteral_0= '&lt;?' )
                    {
                    // InternalUppaalXML.g:9368:3: (enumLiteral_0= '&lt;?' )
                    // InternalUppaalXML.g:9369:4: enumLiteral_0= '&lt;?'
                    {
                    enumLiteral_0=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMinMaxOperatorAccess().getMINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getMinMaxOperatorAccess().getMINEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:9376:3: (enumLiteral_1= '&gt;?' )
                    {
                    // InternalUppaalXML.g:9376:3: (enumLiteral_1= '&gt;?' )
                    // InternalUppaalXML.g:9377:4: enumLiteral_1= '&gt;?'
                    {
                    enumLiteral_1=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMinMaxOperatorAccess().getMAXEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getMinMaxOperatorAccess().getMAXEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMinMaxOperator"


    // $ANTLR start "ruleBitShiftOperator"
    // InternalUppaalXML.g:9387:1: ruleBitShiftOperator returns [Enumerator current=null] : ( (enumLiteral_0= '&lt;&lt;' ) | (enumLiteral_1= '&gt;&gt' ) ) ;
    public final Enumerator ruleBitShiftOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9393:2: ( ( (enumLiteral_0= '&lt;&lt;' ) | (enumLiteral_1= '&gt;&gt' ) ) )
            // InternalUppaalXML.g:9394:2: ( (enumLiteral_0= '&lt;&lt;' ) | (enumLiteral_1= '&gt;&gt' ) )
            {
            // InternalUppaalXML.g:9394:2: ( (enumLiteral_0= '&lt;&lt;' ) | (enumLiteral_1= '&gt;&gt' ) )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==110) ) {
                alt121=1;
            }
            else if ( (LA121_0==111) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalUppaalXML.g:9395:3: (enumLiteral_0= '&lt;&lt;' )
                    {
                    // InternalUppaalXML.g:9395:3: (enumLiteral_0= '&lt;&lt;' )
                    // InternalUppaalXML.g:9396:4: enumLiteral_0= '&lt;&lt;'
                    {
                    enumLiteral_0=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBitShiftOperatorAccess().getLEFTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getBitShiftOperatorAccess().getLEFTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:9403:3: (enumLiteral_1= '&gt;&gt' )
                    {
                    // InternalUppaalXML.g:9403:3: (enumLiteral_1= '&gt;&gt' )
                    // InternalUppaalXML.g:9404:4: enumLiteral_1= '&gt;&gt'
                    {
                    enumLiteral_1=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBitShiftOperatorAccess().getRIGHTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getBitShiftOperatorAccess().getRIGHTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitShiftOperator"


    // $ANTLR start "ruleArithmeticOperator_PlusMinus"
    // InternalUppaalXML.g:9414:1: ruleArithmeticOperator_PlusMinus returns [Enumerator current=null] : ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) ) ;
    public final Enumerator ruleArithmeticOperator_PlusMinus() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9420:2: ( ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) ) )
            // InternalUppaalXML.g:9421:2: ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) )
            {
            // InternalUppaalXML.g:9421:2: ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) )
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==109) ) {
                alt122=1;
            }
            else if ( (LA122_0==78) ) {
                alt122=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }
            switch (alt122) {
                case 1 :
                    // InternalUppaalXML.g:9422:3: (enumLiteral_0= '+' )
                    {
                    // InternalUppaalXML.g:9422:3: (enumLiteral_0= '+' )
                    // InternalUppaalXML.g:9423:4: enumLiteral_0= '+'
                    {
                    enumLiteral_0=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getArithmeticOperator_PlusMinusAccess().getADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getArithmeticOperator_PlusMinusAccess().getADDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:9430:3: (enumLiteral_1= '-' )
                    {
                    // InternalUppaalXML.g:9430:3: (enumLiteral_1= '-' )
                    // InternalUppaalXML.g:9431:4: enumLiteral_1= '-'
                    {
                    enumLiteral_1=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getArithmeticOperator_PlusMinusAccess().getSUBTRACTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getArithmeticOperator_PlusMinusAccess().getSUBTRACTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArithmeticOperator_PlusMinus"


    // $ANTLR start "ruleArithmeticOperator_Other"
    // InternalUppaalXML.g:9441:1: ruleArithmeticOperator_Other returns [Enumerator current=null] : ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '%' ) ) ;
    public final Enumerator ruleArithmeticOperator_Other() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9447:2: ( ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '%' ) ) )
            // InternalUppaalXML.g:9448:2: ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '%' ) )
            {
            // InternalUppaalXML.g:9448:2: ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '%' ) )
            int alt123=3;
            switch ( input.LA(1) ) {
            case 106:
                {
                alt123=1;
                }
                break;
            case 108:
                {
                alt123=2;
                }
                break;
            case 107:
                {
                alt123=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;
            }

            switch (alt123) {
                case 1 :
                    // InternalUppaalXML.g:9449:3: (enumLiteral_0= '*' )
                    {
                    // InternalUppaalXML.g:9449:3: (enumLiteral_0= '*' )
                    // InternalUppaalXML.g:9450:4: enumLiteral_0= '*'
                    {
                    enumLiteral_0=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getArithmeticOperator_OtherAccess().getMULTIPLICATEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getArithmeticOperator_OtherAccess().getMULTIPLICATEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalUppaalXML.g:9457:3: (enumLiteral_1= '/' )
                    {
                    // InternalUppaalXML.g:9457:3: (enumLiteral_1= '/' )
                    // InternalUppaalXML.g:9458:4: enumLiteral_1= '/'
                    {
                    enumLiteral_1=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getArithmeticOperator_OtherAccess().getDIVIDEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getArithmeticOperator_OtherAccess().getDIVIDEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalUppaalXML.g:9465:3: (enumLiteral_2= '%' )
                    {
                    // InternalUppaalXML.g:9465:3: (enumLiteral_2= '%' )
                    // InternalUppaalXML.g:9466:4: enumLiteral_2= '%'
                    {
                    enumLiteral_2=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getArithmeticOperator_OtherAccess().getMODULOEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getArithmeticOperator_OtherAccess().getMODULOEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArithmeticOperator_Other"


    // $ANTLR start "ruleIncrementOperator"
    // InternalUppaalXML.g:9476:1: ruleIncrementOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
    public final Enumerator ruleIncrementOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9482:2: ( (enumLiteral_0= '+' ) )
            // InternalUppaalXML.g:9483:2: (enumLiteral_0= '+' )
            {
            // InternalUppaalXML.g:9483:2: (enumLiteral_0= '+' )
            // InternalUppaalXML.g:9484:3: enumLiteral_0= '+'
            {
            enumLiteral_0=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getIncrementOperatorAccess().getINCREMENTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getIncrementOperatorAccess().getINCREMENTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncrementOperator"


    // $ANTLR start "ruleDecrementOperator"
    // InternalUppaalXML.g:9493:1: ruleDecrementOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
    public final Enumerator ruleDecrementOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalUppaalXML.g:9499:2: ( (enumLiteral_0= '-' ) )
            // InternalUppaalXML.g:9500:2: (enumLiteral_0= '-' )
            {
            // InternalUppaalXML.g:9500:2: (enumLiteral_0= '-' )
            // InternalUppaalXML.g:9501:3: enumLiteral_0= '-'
            {
            enumLiteral_0=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDecrementOperatorAccess().getDECREMENTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDecrementOperatorAccess().getDECREMENTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecrementOperator"

    // $ANTLR start synpred1_InternalUppaalXML
    public final void synpred1_InternalUppaalXML_fragment() throws RecognitionException {   
        // InternalUppaalXML.g:5142:4: ( ( ( ruleBlockTypedDeclaration | ruleTypeDeclaration ) ) )
        // InternalUppaalXML.g:5142:5: ( ( ruleBlockTypedDeclaration | ruleTypeDeclaration ) )
        {
        // InternalUppaalXML.g:5142:5: ( ( ruleBlockTypedDeclaration | ruleTypeDeclaration ) )
        // InternalUppaalXML.g:5143:5: ( ruleBlockTypedDeclaration | ruleTypeDeclaration )
        {
        // InternalUppaalXML.g:5143:5: ( ruleBlockTypedDeclaration | ruleTypeDeclaration )
        int alt124=2;
        int LA124_0 = input.LA(1);

        if ( (LA124_0==RULE_ID||LA124_0==15||LA124_0==17||(LA124_0>=19 && LA124_0<=21)||(LA124_0>=23 && LA124_0<=24)||(LA124_0>=26 && LA124_0<=27)||LA124_0==30||(LA124_0>=32 && LA124_0<=36)||(LA124_0>=39 && LA124_0<=41)||LA124_0==46||(LA124_0>=57 && LA124_0<=62)||(LA124_0>=79 && LA124_0<=81)||LA124_0==83||LA124_0==99||LA124_0==135) ) {
            alt124=1;
        }
        else if ( (LA124_0==63) ) {
            alt124=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 124, 0, input);

            throw nvae;
        }
        switch (alt124) {
            case 1 :
                // InternalUppaalXML.g:5144:6: ruleBlockTypedDeclaration
                {
                pushFollow(FOLLOW_2);
                ruleBlockTypedDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalUppaalXML.g:5145:11: ruleTypeDeclaration
                {
                pushFollow(FOLLOW_2);
                ruleTypeDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred1_InternalUppaalXML

    // $ANTLR start synpred2_InternalUppaalXML
    public final void synpred2_InternalUppaalXML_fragment() throws RecognitionException {   
        // InternalUppaalXML.g:5767:5: ( 'else' )
        // InternalUppaalXML.g:5767:6: 'else'
        {
        match(input,70,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_InternalUppaalXML

    // $ANTLR start synpred3_InternalUppaalXML
    public final void synpred3_InternalUppaalXML_fragment() throws RecognitionException {   
        // InternalUppaalXML.g:7393:4: ( ( () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) ) ) )
        // InternalUppaalXML.g:7393:5: ( () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) ) )
        {
        // InternalUppaalXML.g:7393:5: ( () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) ) )
        // InternalUppaalXML.g:7394:5: () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) )
        {
        // InternalUppaalXML.g:7394:5: ()
        // InternalUppaalXML.g:7395:5: 
        {
        }

        // InternalUppaalXML.g:7396:5: ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) )
        int alt125=2;
        int LA125_0 = input.LA(1);

        if ( (LA125_0==109) ) {
            alt125=1;
        }
        else if ( (LA125_0==78) ) {
            alt125=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 125, 0, input);

            throw nvae;
        }
        switch (alt125) {
            case 1 :
                // InternalUppaalXML.g:7397:6: ( ( ruleIncrementOperator ) )
                {
                // InternalUppaalXML.g:7397:6: ( ( ruleIncrementOperator ) )
                // InternalUppaalXML.g:7398:7: ( ruleIncrementOperator )
                {
                // InternalUppaalXML.g:7398:7: ( ruleIncrementOperator )
                // InternalUppaalXML.g:7399:8: ruleIncrementOperator
                {
                pushFollow(FOLLOW_2);
                ruleIncrementOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalUppaalXML.g:7403:6: ( ( ruleDecrementOperator ) )
                {
                // InternalUppaalXML.g:7403:6: ( ( ruleDecrementOperator ) )
                // InternalUppaalXML.g:7404:7: ( ruleDecrementOperator )
                {
                // InternalUppaalXML.g:7404:7: ( ruleDecrementOperator )
                // InternalUppaalXML.g:7405:8: ruleDecrementOperator
                {
                pushFollow(FOLLOW_2);
                ruleDecrementOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred3_InternalUppaalXML

    // Delegated rules

    public final boolean synpred2_InternalUppaalXML() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalUppaalXML_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalUppaalXML() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalUppaalXML_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalUppaalXML() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalUppaalXML_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA31 dfa31 = new DFA31(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA98 dfa98 = new DFA98(this);
    static final String dfa_1s = "\13\uffff";
    static final String dfa_2s = "\1\16\1\43\1\uffff\1\44\1\31\1\45\5\uffff";
    static final String dfa_3s = "\1\22\1\56\1\uffff\1\44\1\31\1\55\5\uffff";
    static final String dfa_4s = "\2\uffff\1\6\3\uffff\1\3\1\4\1\1\1\2\1\5";
    static final String dfa_5s = "\1\uffff\1\2\1\uffff\1\0\1\3\1\1\5\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\3\uffff\1\2",
            "\1\3\12\uffff\1\2",
            "",
            "\1\4",
            "\1\5",
            "\1\10\4\uffff\1\11\1\6\1\7\1\12",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 1468:6: ( ({...}? => ( ({...}? => (otherlv_26= '<' otherlv_27= 'label' otherlv_28= 'kind' otherlv_29= '=' otherlv_30= '\"comments\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_32= 'x' otherlv_33= '=' this_STRING_34= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'y' otherlv_36= '=' this_STRING_37= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'color' otherlv_39= '=' this_STRING_40= RULE_STRING ) ) ) ) )* ) ) ) otherlv_41= '>' ( (lv_comment_42_0= ruleCommentLabel ) ) otherlv_43= '</' otherlv_44= 'label' otherlv_45= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= '<' otherlv_47= 'label' otherlv_48= 'kind' otherlv_49= '=' otherlv_50= '\"synchronisation\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_52= 'x' otherlv_53= '=' this_STRING_54= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'y' otherlv_56= '=' this_STRING_57= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'color' otherlv_59= '=' this_STRING_60= RULE_STRING ) ) ) ) )* ) ) ) otherlv_61= '>' ( (lv_synchronization_62_0= ruleSynchronizationLabel ) ) otherlv_63= '</' otherlv_64= 'label' otherlv_65= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= '<' otherlv_67= 'label' otherlv_68= 'kind' otherlv_69= '=' otherlv_70= '\"guard\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_72= 'x' otherlv_73= '=' this_STRING_74= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'y' otherlv_76= '=' this_STRING_77= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'color' otherlv_79= '=' this_STRING_80= RULE_STRING ) ) ) ) )* ) ) ) otherlv_81= '>' ( (lv_guard_82_0= ruleExpression ) ) otherlv_83= '</' otherlv_84= 'label' otherlv_85= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '<' otherlv_87= 'label' otherlv_88= 'kind' otherlv_89= '=' otherlv_90= '\"assignment\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_92= 'x' otherlv_93= '=' this_STRING_94= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'y' otherlv_96= '=' this_STRING_97= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'color' otherlv_99= '=' this_STRING_100= RULE_STRING ) ) ) ) )* ) ) ) otherlv_101= '>' ( (lv_update_102_0= ruleExpression ) ) (otherlv_103= ',' ( (lv_update_104_0= ruleExpression ) ) )* otherlv_105= '</' otherlv_106= 'label' otherlv_107= '>' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= '<' otherlv_109= 'label' otherlv_110= 'kind' otherlv_111= '=' otherlv_112= '\"select\"' ( ( ( ( ({...}? => ( ({...}? => (otherlv_114= 'x' otherlv_115= '=' this_STRING_116= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'y' otherlv_118= '=' this_STRING_119= RULE_STRING ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'color' otherlv_121= '=' this_STRING_122= RULE_STRING ) ) ) ) )* ) ) ) otherlv_123= '>' ( (lv_selection_124_0= ruleSelection ) ) (otherlv_125= ',' ( (lv_selection_126_0= ruleSelection ) ) )* otherlv_127= '</' otherlv_128= 'label' otherlv_129= '>' ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA31_3 = input.LA(1);

                         
                        int index31_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA31_3 == 36 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 4) ) ) {s = 4;}

                         
                        input.seek(index31_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA31_5 = input.LA(1);

                         
                        int index31_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA31_5 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 2) ) {s = 6;}

                        else if ( LA31_5 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 3) ) {s = 7;}

                        else if ( LA31_5 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 0) ) {s = 8;}

                        else if ( LA31_5 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 1) ) {s = 9;}

                        else if ( LA31_5 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 4) ) {s = 10;}

                         
                        input.seek(index31_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA31_1 = input.LA(1);

                         
                        int index31_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA31_1 == 35 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 4) ) ) {s = 3;}

                        else if ( (LA31_1==46) ) {s = 2;}

                         
                        input.seek(index31_1);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA31_4 = input.LA(1);

                         
                        int index31_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA31_4 == 25 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getEdgeAccess().getUnorderedGroup_16(), 4) ) ) {s = 5;}

                         
                        input.seek(index31_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 31, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\31\uffff";
    static final String dfa_8s = "\1\5\1\uffff\25\5\2\uffff";
    static final String dfa_9s = "\1\u0087\1\uffff\25\u0087\2\uffff";
    static final String dfa_10s = "\1\uffff\1\1\25\uffff\1\2\1\3";
    static final String dfa_11s = "\31\uffff}>";
    static final String[] dfa_12s = {
            "\1\2\11\uffff\1\4\1\uffff\1\3\1\uffff\1\21\1\5\1\22\1\uffff\1\6\1\25\1\uffff\1\26\1\23\2\uffff\1\7\1\uffff\1\10\1\11\1\12\1\17\1\20\2\uffff\1\13\1\14\1\15\4\uffff\1\16\12\uffff\6\1\1\27\17\uffff\3\1\1\uffff\1\1\17\uffff\1\1\43\uffff\1\24",
            "",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "\1\1\11\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1\1\30\2\1\2\uffff\1\1\1\uffff\5\1\2\uffff\3\1\4\uffff\1\1\130\uffff\1\1",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2844:6: (lv_declaration_1_1= ruleTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration | lv_declaration_1_3= ruleTemplateDeclaration )";
        }
    }
    static final String dfa_13s = "\30\uffff";
    static final String dfa_14s = "\1\5\25\31\2\uffff";
    static final String dfa_15s = "\1\u0087\25\67\2\uffff";
    static final String dfa_16s = "\26\uffff\1\2\1\1";
    static final String dfa_17s = "\30\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\11\uffff\1\3\1\uffff\1\2\1\uffff\1\20\1\4\1\21\1\uffff\1\5\1\24\1\uffff\1\25\1\22\2\uffff\1\6\1\uffff\1\7\1\10\1\11\1\16\1\17\2\uffff\1\12\1\13\1\14\4\uffff\1\15\130\uffff\1\23",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "\1\26\2\uffff\1\26\25\uffff\1\26\1\uffff\1\27\2\uffff\1\26",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "3312:3: ( ( (lv_elements_1_0= ruleFunction ) ) | ( ( (lv_elements_2_0= ruleVariable ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleVariable ) ) )* otherlv_5= ';' ) )";
        }
    }
    static final String dfa_19s = "\41\uffff";
    static final String dfa_20s = "\1\5\3\uffff\1\64\4\uffff\1\5\25\31\2\uffff";
    static final String dfa_21s = "\1\u0087\3\uffff\1\64\4\uffff\1\u0087\25\u008b\2\uffff";
    static final String dfa_22s = "\1\uffff\1\1\1\2\1\3\1\uffff\1\6\1\7\1\10\1\11\26\uffff\1\4\1\5";
    static final String dfa_23s = "\41\uffff}>";
    static final String[] dfa_24s = {
            "\2\3\10\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\2\3\1\uffff\2\3\2\uffff\1\3\1\uffff\5\3\2\uffff\3\3\4\uffff\1\3\2\uffff\1\1\1\2\1\uffff\1\3\4\uffff\1\3\2\uffff\1\3\5\uffff\1\4\1\5\1\6\1\7\1\uffff\1\10\1\3\1\uffff\1\3\1\uffff\6\3\14\uffff\2\3\15\uffff\1\3\31\uffff\1\3",
            "",
            "",
            "",
            "\1\11",
            "",
            "",
            "",
            "",
            "\1\12\1\37\10\uffff\1\14\1\uffff\1\13\1\uffff\1\31\1\15\1\32\1\uffff\1\16\1\35\1\uffff\1\36\1\33\2\uffff\1\17\1\uffff\1\20\1\21\1\22\1\27\1\30\2\uffff\1\23\1\24\1\25\4\uffff\1\26\5\uffff\1\37\4\uffff\1\37\2\uffff\1\37\13\uffff\1\37\1\uffff\1\37\1\uffff\6\37\14\uffff\2\37\15\uffff\1\37\31\uffff\1\34",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "\1\37\25\uffff\1\40\2\uffff\1\37\1\uffff\1\37\1\uffff\2\37\21\uffff\1\37\1\uffff\1\37\2\uffff\1\37\14\uffff\3\37\14\uffff\14\37\1\uffff\3\37\1\uffff\14\37\3\uffff\2\37",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "4962:2: (this_Block_0= ruleBlock | this_EmptyStatement_1= ruleEmptyStatement | this_ExpressionStatement_2= ruleExpressionStatement | this_ForLoop_3= ruleForLoop | this_Iteration_4= ruleIteration | this_WhileLoop_5= ruleWhileLoop | this_DoWhileLoop_6= ruleDoWhileLoop | this_IfStatement_7= ruleIfStatement | this_ReturnStatement_8= ruleReturnStatement )";
        }
    }
    static final String dfa_25s = "\65\uffff";
    static final String dfa_26s = "\1\1\64\uffff";
    static final String dfa_27s = "\1\5\6\uffff\32\0\24\uffff";
    static final String dfa_28s = "\1\u0087\6\uffff\32\0\24\uffff";
    static final String dfa_29s = "\1\uffff\1\2\54\uffff\7\1";
    static final String dfa_30s = "\1\0\6\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\24\uffff}>";
    static final String[] dfa_31s = {
            "\1\7\1\1\10\uffff\1\11\1\uffff\1\10\1\uffff\1\26\1\12\1\27\1\uffff\1\13\1\32\1\uffff\1\33\1\30\2\uffff\1\14\1\uffff\1\15\1\16\1\17\1\24\1\25\2\uffff\1\20\1\21\1\22\4\uffff\1\23\2\uffff\4\1\4\uffff\1\37\1\60\1\61\1\34\1\57\1\56\1\64\2\uffff\4\1\1\uffff\2\1\1\uffff\1\1\1\uffff\3\1\1\35\1\36\1\40\1\uffff\1\62\12\uffff\2\1\3\uffff\1\63\11\uffff\1\1\31\uffff\1\31",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_25;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "()* loopback of 5141:3: ( ( ( ( ruleBlockTypedDeclaration | ruleTypeDeclaration ) ) )=> ( (lv_declaration_1_1= ruleBlockTypedDeclaration | lv_declaration_1_2= ruleTypeDeclaration ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_0 = input.LA(1);

                         
                        int index71_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_0==EOF||LA71_0==RULE_INT||(LA71_0>=49 && LA71_0<=52)||(LA71_0>=66 && LA71_0<=69)||(LA71_0>=71 && LA71_0<=72)||LA71_0==74||(LA71_0>=76 && LA71_0<=78)||(LA71_0>=94 && LA71_0<=95)||LA71_0==109) ) {s = 1;}

                        else if ( (LA71_0==RULE_ID) ) {s = 7;}

                        else if ( (LA71_0==17) ) {s = 8;}

                        else if ( (LA71_0==15) ) {s = 9;}

                        else if ( (LA71_0==20) ) {s = 10;}

                        else if ( (LA71_0==23) ) {s = 11;}

                        else if ( (LA71_0==30) ) {s = 12;}

                        else if ( (LA71_0==32) ) {s = 13;}

                        else if ( (LA71_0==33) ) {s = 14;}

                        else if ( (LA71_0==34) ) {s = 15;}

                        else if ( (LA71_0==39) ) {s = 16;}

                        else if ( (LA71_0==40) ) {s = 17;}

                        else if ( (LA71_0==41) ) {s = 18;}

                        else if ( (LA71_0==46) ) {s = 19;}

                        else if ( (LA71_0==35) ) {s = 20;}

                        else if ( (LA71_0==36) ) {s = 21;}

                        else if ( (LA71_0==19) ) {s = 22;}

                        else if ( (LA71_0==21) ) {s = 23;}

                        else if ( (LA71_0==27) ) {s = 24;}

                        else if ( (LA71_0==135) ) {s = 25;}

                        else if ( (LA71_0==24) ) {s = 26;}

                        else if ( (LA71_0==26) ) {s = 27;}

                        else if ( (LA71_0==60) ) {s = 28;}

                        else if ( (LA71_0==79) ) {s = 29;}

                        else if ( (LA71_0==80) ) {s = 30;}

                        else if ( (LA71_0==57) ) {s = 31;}

                        else if ( (LA71_0==81) ) {s = 32;}

                        else if ( (LA71_0==62) && (synpred1_InternalUppaalXML())) {s = 46;}

                        else if ( (LA71_0==61) && (synpred1_InternalUppaalXML())) {s = 47;}

                        else if ( (LA71_0==58) && (synpred1_InternalUppaalXML())) {s = 48;}

                        else if ( (LA71_0==59) && (synpred1_InternalUppaalXML())) {s = 49;}

                        else if ( (LA71_0==83) && (synpred1_InternalUppaalXML())) {s = 50;}

                        else if ( (LA71_0==99) && (synpred1_InternalUppaalXML())) {s = 51;}

                        else if ( (LA71_0==63) && (synpred1_InternalUppaalXML())) {s = 52;}

                         
                        input.seek(index71_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_7 = input.LA(1);

                         
                        int index71_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_8 = input.LA(1);

                         
                        int index71_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA71_9 = input.LA(1);

                         
                        int index71_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA71_10 = input.LA(1);

                         
                        int index71_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA71_11 = input.LA(1);

                         
                        int index71_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA71_12 = input.LA(1);

                         
                        int index71_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA71_13 = input.LA(1);

                         
                        int index71_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA71_14 = input.LA(1);

                         
                        int index71_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA71_15 = input.LA(1);

                         
                        int index71_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA71_16 = input.LA(1);

                         
                        int index71_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_16);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA71_17 = input.LA(1);

                         
                        int index71_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_17);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA71_18 = input.LA(1);

                         
                        int index71_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_18);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA71_19 = input.LA(1);

                         
                        int index71_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_19);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA71_20 = input.LA(1);

                         
                        int index71_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_20);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA71_21 = input.LA(1);

                         
                        int index71_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_21);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA71_22 = input.LA(1);

                         
                        int index71_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_22);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA71_23 = input.LA(1);

                         
                        int index71_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_23);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA71_24 = input.LA(1);

                         
                        int index71_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_24);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA71_25 = input.LA(1);

                         
                        int index71_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_25);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA71_26 = input.LA(1);

                         
                        int index71_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_26);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA71_27 = input.LA(1);

                         
                        int index71_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_27);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA71_28 = input.LA(1);

                         
                        int index71_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_28);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA71_29 = input.LA(1);

                         
                        int index71_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_29);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA71_30 = input.LA(1);

                         
                        int index71_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_30);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA71_31 = input.LA(1);

                         
                        int index71_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_31);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA71_32 = input.LA(1);

                         
                        int index71_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalUppaalXML()) ) {s = 52;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\56\uffff";
    static final String dfa_33s = "\1\1\55\uffff";
    static final String dfa_34s = "\1\22\3\uffff\2\0\50\uffff";
    static final String dfa_35s = "\1\u008b\3\uffff\2\0\50\uffff";
    static final String dfa_36s = "\1\uffff\1\2\53\uffff\1\1";
    static final String dfa_37s = "\4\uffff\1\0\1\1\50\uffff}>";
    static final String[] dfa_38s = {
            "\1\1\6\uffff\1\1\2\uffff\1\1\22\uffff\1\1\2\uffff\2\1\1\uffff\2\1\1\uffff\1\1\20\uffff\1\1\4\uffff\1\5\14\uffff\3\1\14\uffff\3\1\1\4\10\1\1\uffff\3\1\1\uffff\14\1\3\uffff\2\1",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "()* loopback of 7392:3: ( ( ( () ( ( ( ruleIncrementOperator ) ) | ( ( ruleDecrementOperator ) ) ) ) )=> ( () ( ( (lv_operator_2_0= ruleIncrementOperator ) ) | ( (lv_operator_3_0= ruleDecrementOperator ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_4 = input.LA(1);

                         
                        int index96_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalUppaalXML()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA96_5 = input.LA(1);

                         
                        int index96_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalUppaalXML()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\32\uffff";
    static final String dfa_40s = "\1\uffff\25\26\4\uffff";
    static final String dfa_41s = "\1\5\25\22\4\uffff";
    static final String dfa_42s = "\1\u0087\25\u008b\4\uffff";
    static final String dfa_43s = "\26\uffff\1\1\1\3\1\4\1\2";
    static final String dfa_44s = "\32\uffff}>";
    static final String[] dfa_45s = {
            "\1\1\1\27\10\uffff\1\3\1\uffff\1\2\1\uffff\1\20\1\4\1\21\1\uffff\1\5\1\24\1\uffff\1\25\1\22\2\uffff\1\6\1\uffff\1\7\1\10\1\11\1\16\1\17\2\uffff\1\12\1\13\1\14\4\uffff\1\15\5\uffff\1\30\4\uffff\1\26\2\uffff\1\26\17\uffff\3\27\3\26\65\uffff\1\23",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "\1\26\6\uffff\1\26\2\uffff\1\26\22\uffff\1\26\2\uffff\2\26\1\31\4\26\20\uffff\1\26\1\uffff\1\26\2\uffff\1\26\14\uffff\3\26\14\uffff\14\26\1\uffff\3\26\1\uffff\14\26\3\uffff\2\26",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "7539:2: (this_IdentifierExpression_0= ruleIdentifierExpression | this_FunctionCallExpression_1= ruleFunctionCallExpression | this_LiteralExpression_2= ruleLiteralExpression | (otherlv_3= '(' this_Expression_4= ruleExpression otherlv_5= ')' ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0xFFFFDFFFFFFFFFF0L,0xFFFFFFFFFFFFF7FFL,0x00000000000000FFL});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0xFE00439F4DBE8020L,0x00000008000B8000L,0x0000000000000080L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xFE01439F4DFE8020L,0x00000008000B8000L,0x0000000000000080L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000005010000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x7E00439F4DBE8020L,0x00000008000B8000L,0x0000000000000080L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000010040000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x7E00439F4DBA8020L,0x00000008000B8000L,0x0000000000000080L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000004002L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000685010000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000044000L,0x0000000000000000L,0x0000000000000300L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000405010000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x1210439F4DBA8060L,0x00002000C003F500L,0x0000000000000080L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000044000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x1200439F4DBA8020L,0x0000000000038000L,0x0000000000000080L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000439F4DBA8020L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000085000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0xFFFFDFFFFFFBFFF2L,0xFFFFFFFFFFFFF7FFL,0x00000000000000FFL});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000005000002L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x5200439F4DBA8020L,0x0000000000038000L,0x0000000000000080L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0xFE00439F4DBA8022L,0x00000008000B8000L,0x0000000000000080L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0xFE01439F4DFA8022L,0x00000008000B8000L,0x0000000000000080L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x1218439F4DBA8060L,0x00002000C003F500L,0x0000000000000080L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x1230439F4DBA8060L,0x00002000C003F500L,0x0000000000000080L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0020000010000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0044000000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0004000010000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0080000002000002L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x5210439F4DBA8060L,0x00002000C003F500L,0x0000000000000080L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x1212439F4DBA8060L,0x00002000C003F500L,0x0000000000000080L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0008000010000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0E00000000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x7200439F4DBA8020L,0x0000000000038000L,0x0000000000000080L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x7E08439F4DBA8020L,0x00000008000B8000L,0x0000000000000080L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x1200439F4DBA8020L,0x0000000000038002L,0x0000000000000080L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x7E20439F4DBA8020L,0x00000008000B8000L,0x0000000000000080L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000439F4DBA8020L,0x0080000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0xFE1E439F4DBA8060L,0x00002008C00BF5BCL,0x0000000000000080L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x121E439F4DBA8060L,0x00002000C003F5BCL,0x0000000000000080L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x1216439F4DBA8060L,0x00002000C003F5BCL,0x0000000000000080L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x1214439F4DBA8060L,0x00002000C003F500L,0x0000000000000080L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000002L,0x0000000030000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000002000002L,0xE000000000000000L,0x000000000000047FL});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000200L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000002L,0x0080000000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0030000000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0040000000000002L,0x000C000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000002L,0x0003000000000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000002L,0x0000C00000000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000002L,0x0000200000004000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000002L,0x00001C0000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x1210439F4DBA8062L,0x00002000C003F500L,0x0000000000000080L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0080000000000002L});

}
